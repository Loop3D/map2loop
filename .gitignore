
### M2L stuff ###
/model-test*
.ipynb_checkpoints
notebooks/Testing.ipynb
.vim/
.vscode/
_version.py
3/

# Created by https://www.toptal.com/developers/gitignore/api/python,visualstudiocode,c++,cmake
# Edit at https://www.toptal.com/developers/gitignore?templates=python,visualstudiocode,c++,cmake

### C++ ###
# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app

### CMake ###
CMakeLists.txt.user
CMakeCache.txt
CMakeFiles
CMakeScripts
Testing
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake
_deps

### CMake Patch ###
# External projects
*-prefix/

### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

### VisualStudioCode ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.vscode/

docs/build
docs/source/_autosummary/*
# End of https://www.toptal.com/developers/gitignore/api/python,visualstudiocode,c++,cmake
#ignore automatically generated doc files
docs/source/_autosummary 
docs/source/_auto_examples/*
docs/source/_auto_examples
examples/*_tmp
*.loop3d
m2l_data_tmp/*
docs/examples/m2l_data_tmp/StupidGDALLocalFile.tif
docs/examples/m2l_data_tmp/map2model_data/fault-fault-intersection.txt
docs/examples/m2l_data_tmp/map2model_data/faults_wkt.csv
docs/examples/m2l_data_tmp/map2model_data/geology_wkt.csv
docs/examples/m2l_data_tmp/map2model_data/graph_all_None.gml
docs/examples/m2l_data_tmp/map2model_data/graph_all_None.gml.txt
docs/examples/m2l_data_tmp/map2model_data/graph_fault_None.gml
docs/examples/m2l_data_tmp/map2model_data/graph_fault_None.gml.txt
docs/examples/m2l_data_tmp/map2model_data/graph_igneous_None.gml
docs/examples/m2l_data_tmp/map2model_data/graph_igneous_None.gml.txt
docs/examples/m2l_data_tmp/map2model_data/graph_partial.gml
docs/examples/m2l_data_tmp/map2model_data/graph_partial.gml.txt
docs/examples/m2l_data_tmp/map2model_data/graph_strat_None.gml
docs/examples/m2l_data_tmp/map2model_data/graph_strat_None.gml.txt
docs/examples/m2l_data_tmp/map2model_data/point-polygon-intersection.txt
docs/examples/m2l_data_tmp/map2model_data/polygons_clipped_with_faults.svg
docs/examples/m2l_data_tmp/map2model_data/polygons_clipped_with_points.svg
docs/examples/m2l_data_tmp/map2model_data/polygons_clipped.svg
docs/examples/m2l_data_tmp/map2model_data/polygons_read_with_faults.svg
docs/examples/m2l_data_tmp/map2model_data/polygons_read_with_points.svg
docs/examples/m2l_data_tmp/map2model_data/polygons_read.svg
docs/examples/m2l_data_tmp/map2model_data/polygons_with_all_contacts.svg
docs/examples/m2l_data_tmp/map2model_data/polygons_with_fault_contacts.svg
docs/examples/m2l_data_tmp/map2model_data/polygons_with_stratigraphic_contacts.svg
docs/examples/m2l_data_tmp/map2model_data/unit-fault-intersection.txt
docs/examples/m2l_data_tmp/map2model_data/units_contacts_absolute_lengths.txt
docs/examples/m2l_data_tmp/map2model_data/units_contacts_relative_lengths.txt
docs/examples/m2l_data_tmp/map2model_data/units_sorted.txt
docs/source/sg_execution_times.rst
docs/source/auto_examples/auto_examples_jupyter.zip
docs/source/auto_examples/auto_examples_python.zip
docs/source/auto_examples/index.rst
docs/source/auto_examples/plot_hamersley_codeobj.pickle
docs/source/auto_examples/plot_hamersley.ipynb
docs/source/auto_examples/plot_hamersley.py
docs/source/auto_examples/plot_hamersley.py.md5
docs/source/auto_examples/plot_hamersley.rst
docs/source/auto_examples/sg_execution_times.rst
docs/source/auto_examples/images/sphx_glr_plot_hamersley_001.png
docs/source/auto_examples/images/thumb/sphx_glr_plot_hamersley_thumb.png
