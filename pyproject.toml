[build-system]
requires = [ "setuptools", "cython", "beartype", "geopandas", "hjson", "loopprojectfile==0.1.3", "networkx", "numpy", "owslib", "pandas", "shapely",]
build-backend = "setuptools.build_meta"

[project]
name = "map2loop"
description = "Generate 3D model data from 2D maps."
readme = "README.md"
requires-python = ">=3.8"
keywords = [ "earth sciences", "geology", "3-D modelling", "structural geology", "uncertainty",]
classifiers = [ "Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: GIS",]
dynamic = [ "version", "dependencies",]
[[project.authors]]
name = "Loop team"

[project.license]
text = "MIT"

[project.urls]
Documentation = "https://Loop3d.org/map2loop/"
"Bug Tracker" = "https://github.com/Loop3D/map2loop/issues"
"Source Code" = "https://github.com/Loop3D/map2loop"

[tool.cibuildwheel]
skip = ["pp*", "*musllinux*"]
archs = ["auto64"]
manylinux-x86_64-image = "manylinux-vcpkg-gdal:latest"
build-verbosity = 3

[tool.cibuildwheel.linux.environment]
VCPKG_INSTALL = "$VCPKG_INSTALLATION_ROOT/installed/$VCPKG_DEFAULT_TRIPLET"
GDAL_INCLUDE_PATH = "$VCPKG_INSTALL/include"
GDAL_LIBRARY_PATH = "$VCPKG_INSTALL/lib"
GDAL_VERSION = "3.9.2"
PYOGRIO_PACKAGE_DATA = 1
GDAL_DATA = "$VCPKG_INSTALL/share/gdal"
PROJ_LIB = "$VCPKG_INSTALL/share/proj"

[tool.cibuildwheel.macos]
repair-wheel-command = [
    "DYLD_LIBRARY_PATH=$GDAL_LIBRARY_PATH delocate-listdeps {wheel}",
    "DYLD_LIBRARY_PATH=$GDAL_LIBRARY_PATH delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}",
]

[tool.cibuildwheel.macos.environment]
VCPKG_INSTALL = "$VCPKG_INSTALLATION_ROOT/installed/$VCPKG_DEFAULT_TRIPLET"
GDAL_INCLUDE_PATH = "$VCPKG_INSTALL/include"
GDAL_LIBRARY_PATH = "$VCPKG_INSTALL/lib"
GDAL_VERSION = "3.9.2"
PYOGRIO_PACKAGE_DATA = 1
GDAL_DATA = "$VCPKG_INSTALL/share/gdal"
PROJ_LIB = "$VCPKG_INSTALL/share/proj"
MACOSX_DEPLOYMENT_TARGET = "12.0"

[tool.cibuildwheel.windows]
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair --add-path C:/vcpkg/installed/x64-windows-dynamic-release/bin -w {dest_dir} {wheel}"

[tool.cibuildwheel.windows.environment]
VCPKG_INSTALL = "$VCPKG_INSTALLATION_ROOT/installed/x64-windows-dynamic-release"
GDAL_INCLUDE_PATH = "$VCPKG_INSTALL/include"
GDAL_LIBRARY_PATH = "$VCPKG_INSTALL/lib"
GDAL_VERSION = "3.9.2"
PYOGRIO_PACKAGE_DATA = 1
GDAL_DATA = "$VCPKG_INSTALL/share/gdal"
PROJ_LIB = "$VCPKG_INSTALL/share/proj"

[tool.black]
line-length = 100
skip-string-normalization = true
target-version = [ "py39",]
exclude = "\\.eggs|\\.git|\\.mypy_cache|\\.tox|\\.venv|_build|buck-out|build|dist|node_modules"
skip-magic-trailing-comma = true

[tool.blackdoc]
line-length = 75

[tool.build_sphinx]
source-dir = "doc"
build-dir = "./doc/build"
all_files = 1

[tool.upload_sphinx]
upload-dir = "doc/build/html"

[tool.pydocstyle]
match = "(?!coverage).*.py"
convention = "numpy"
add-ignore = [ "D404",]

[tool.codespell]
skip = "*.pyc,*.txt,*.gif,*.png,*.jpg,*.ply,*.vtk,*.vti,*.vtu,*.js,*.html,*.doctree,*.ttf,*.woff,*.woff2,*.eot,*.mp4,*.inv,*.pickle,*.ipynb,flycheck*,./.git/*,./.hypothesis/*,*.yml,doc/_build/*,./doc/images/*,./dist/*,*~,.hypothesis*,./doc/examples/*,*.mypy_cache/*,*cover,./tests/tinypages/_build/*,*/_autosummary/*"
quiet-level = 3

[tool.ruff]
exclude = [ ".git", "pycache__", "build", "dist", "doc/examples", "doc/_build",]
line-length = 100
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
external = [ "E131", "D102", "D105",]
ignore = [ "E203", "E501", "E731", "E266", "E741", "E402", "Q0", "E722", "F403",]
fixable = [ "ALL",]
unfixable = []
extend-select = [ "B007", "B010", "C4", "F", "NPY", "PGH004", "RSE", "RUF100",]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [ "F401",]

[tool.setuptools.dynamic.dependencies]
file = [ "dependencies.txt",]

[tool.setuptools.dynamic.version]
attr = "map2loop.version.__version__"

[tool.setuptools.packages.find]
include = [ "map2loop", "map2loop.*",]
