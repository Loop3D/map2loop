Search.setIndex({"alltitles": {"3.0.2 (2024-01-11)": [[1, "id37"]], "3.0.3 (2024-01-11)": [[1, "id35"]], "3.0.4 (2024-01-11)": [[1, "id33"]], "3.0.5 (2024-01-25)": [[1, "id31"]], "3.0.6 (2024-01-25)": [[1, "id29"]], "3.1.0 (2024-05-09)": [[1, "id26"]], "3.1.1 (2024-05-09)": [[1, "id24"]], "3.1.10 (2024-08-02)": [[1, "id4"]], "3.1.11 (2024-08-09)": [[1, "id2"]], "3.1.12 (2024-09-11)": [[1, "id1"]], "3.1.2 (2024-05-09)": [[1, "id22"]], "3.1.3 (2024-05-14)": [[1, "id19"]], "3.1.4 (2024-05-29)": [[1, "id16"]], "3.1.5 (2024-06-06)": [[1, "id13"]], "3.1.6 (2024-06-13)": [[1, "id11"]], "3.1.7 (2024-06-18)": [[1, "id9"]], "3.1.8 (2024-06-20)": [[1, "id7"]], "3.1.9 (2024-08-02)": [[1, "id5"]], "API": [[0, null]], "Adding Data": [[141, "adding-data"]], "Alternative: Using a User Defined Stratigraphic Column": [[145, "alternative-using-a-user-defined-stratigraphic-column"]], "Attiributes": [[6, "attiributes"], [63, "attiributes"]], "Attributes:": [[106, "attributes"]], "Before You Begin": [[145, "before-you-begin"]], "Bug Fixes": [[1, "bug-fixes"], [1, "id3"], [1, "id6"], [1, "id8"], [1, "id10"], [1, "id12"], [1, "id14"], [1, "id17"], [1, "id20"], [1, "id23"], [1, "id25"], [1, "id27"], [1, "id30"], [1, "id32"], [1, "id34"], [1, "id36"], [1, "id38"]], "Building with Docker": [[144, "building-with-docker"]], "CHANGE:": [[145, "change"]], "Calculating stratigraphic thicknesses": [[148, null]], "Changelog": [[1, null]], "Changing Colours": [[136, null]], "Changing colours via your Jupyter notebook": [[136, "changing-colours-via-your-jupyter-notebook"]], "Computation times": [[4, null], [135, null]], "Config File Template": [[137, "config-file-template"]], "Creating a 3D geological model": [[141, null]], "Creating a Project Instance": [[145, "creating-a-project-instance"]], "Defining the Model Extents": [[145, "defining-the-model-extents"]], "Development": [[144, "development"]], "Development with docker": [[144, "development-with-docker"]], "Documentation": [[1, "documentation"], [1, "id15"], [1, "id18"], [1, "id21"], [1, "id28"]], "Examples": [[2, null]], "Exporting": [[139, null]], "Express install:": [[144, "express-install"]], "Fault Colours": [[136, "fault-colours"]], "Fault offset calculation": [[140, null]], "Features": [[1, "features"]], "Geological map": [[139, "geological-map"]], "Getting Started": [[141, "getting-started"], [142, null]], "Hamersley, Western Australia": [[3, null]], "Identifying stratigraphic order": [[147, null]], "Inspecting the .loop3d output file": [[146, "inspecting-the-loop3d-output-file"]], "Install": [[144, "install"]], "Installing map2loop": [[144, null]], "Known Issues and FAQs": [[134, "known-issues-and-faqs"]], "LineString Shapefile": [[141, "linestring-shapefile"]], "Linear_Features.shp": [[141, "id2"]], "Links": [[134, "links"]], "Lithologies.shp": [[141, "id3"]], "LoopStructural calling code": [[146, "loopstructural-calling-code"]], "Map2loop 3.1.12": [[134, null]], "Map2loop calling code:": [[146, "map2loop-calling-code"]], "Mapping attributes to variables using a JSON file": [[137, null]], "Naming your .loop3d output file": [[145, "naming-your-loop3d-output-file"]], "Next Steps": [[145, "next-steps"]], "Note:": [[73, "note"], [106, "note"], [107, "note"]], "Notes": [[147, "notes"], [148, "notes"]], "Notes:": [[141, "notes"]], "Orientation_data.shp": [[141, "id1"]], "Parameters": [[147, "parameters"], [148, "parameters"]], "Point Shapefile": [[141, "point-shapefile"]], "Polygon Shapefile": [[141, "polygon-shapefile"]], "Required Shape Files": [[141, "required-shape-files"]], "Returns:": [[106, "returns"]], "Running your map2loop program": [[145, "running-your-map2loop-program"]], "Selecting a Stratigraphic Column Sorter": [[145, "selecting-a-stratigraphic-column-sorter"]], "Set the region of interest for the project": [[3, "set-the-region-of-interest-for-the-project"]], "Setting Sampling Distances": [[145, "setting-sampling-distances"]], "Setting up your Jupyter Notebook": [[146, null]], "Setting up your notebook": [[145, "setting-up-your-notebook"]], "Shape File Attribute Table Requirements": [[141, "shape-file-attribute-table-requirements"]], "Template for Map2Loop": [[145, null]], "Tip": [[141, "tip"]], "Tips and Trouble Shooting for QGIS map": [[141, "tips-and-trouble-shooting-for-qgis-map"]], "Unit Colours": [[136, "unit-colours"]], "Usage": [[134, "usage"]], "User Guide": [[143, null], [143, null]], "Using a CSV file": [[136, "using-a-csv-file"]], "Variable Names (map2loop-3) Template": [[137, "variable-names-map2loop-3-template"]], "Visualise the map2loop results": [[3, "visualise-the-map2loop-results"]], "What map2loop does": [[138, null]], "map2loop": [[5, null]], "map2loop Requirements": [[142, "map2loop-requirements"]], "map2loop-3 variable names JSON File Template": [[137, "map2loop-3-variable-names-json-file-template"]], "map2loop.Project": [[6, null]], "map2loop.aus_state_urls": [[7, null]], "map2loop.aus_state_urls.AustraliaStateUrls": [[8, null]], "map2loop.aus_state_urls.load_clut": [[9, null]], "map2loop.aus_state_urls.load_config": [[10, null]], "map2loop.config": [[11, null]], "map2loop.config.Config": [[12, null]], "map2loop.deformation_history": [[13, null]], "map2loop.deformation_history.DeformationHistory": [[14, null]], "map2loop.fault_orientation": [[15, null]], "map2loop.fault_orientation.ABC": [[16, null]], "map2loop.fault_orientation.FaultOrientation": [[17, null]], "map2loop.fault_orientation.FaultOrientationNearest": [[18, null]], "map2loop.fault_orientation.MapData": [[19, null]], "map2loop.fault_orientation.abstractmethod": [[20, null]], "map2loop.interpolators": [[21, null]], "map2loop.interpolators.ABC": [[22, null]], "map2loop.interpolators.Any": [[23, null]], "map2loop.interpolators.DBSCAN": [[24, null]], "map2loop.interpolators.DipDipDirectionInterpolator": [[25, null]], "map2loop.interpolators.Interpolator": [[26, null]], "map2loop.interpolators.LinearNDInterpolator": [[27, null]], "map2loop.interpolators.NormalVectorInterpolator": [[28, null]], "map2loop.interpolators.Rbf": [[29, null]], "map2loop.interpolators.abstractmethod": [[30, null]], "map2loop.interpolators.generate_grid": [[31, null]], "map2loop.interpolators.ndarray": [[32, null]], "map2loop.interpolators.strike_dip_vector": [[33, null]], "map2loop.m2l_enums": [[34, null]], "map2loop.m2l_enums.Datastate": [[35, null]], "map2loop.m2l_enums.Datatype": [[36, null]], "map2loop.m2l_enums.ErrorState": [[37, null]], "map2loop.m2l_enums.IntEnum": [[38, null]], "map2loop.m2l_enums.VerboseLevel": [[39, null]], "map2loop.map2model_wrapper": [[40, null]], "map2loop.map2model_wrapper.Map2ModelWrapper": [[41, null]], "map2loop.map2model_wrapper.VerboseLevel": [[42, null]], "map2loop.mapdata": [[43, null]], "map2loop.mapdata.AustraliaStateUrls": [[44, null]], "map2loop.mapdata.BytesIO": [[45, null]], "map2loop.mapdata.Config": [[46, null]], "map2loop.mapdata.Datastate": [[47, null]], "map2loop.mapdata.Datatype": [[48, null]], "map2loop.mapdata.GzipFile": [[49, null]], "map2loop.mapdata.MapData": [[50, null]], "map2loop.mapdata.VerboseLevel": [[51, null]], "map2loop.mapdata.WebCoverageService": [[52, null]], "map2loop.mapdata.generate_random_hex_colors": [[53, null]], "map2loop.mapdata.uuid4": [[54, null]], "map2loop.project": [[55, null]], "map2loop.project.Datatype": [[56, null]], "map2loop.project.DeformationHistory": [[57, null]], "map2loop.project.ErrorState": [[58, null]], "map2loop.project.FaultOrientation": [[59, null]], "map2loop.project.FaultOrientationNearest": [[60, null]], "map2loop.project.Map2ModelWrapper": [[61, null]], "map2loop.project.MapData": [[62, null]], "map2loop.project.Project": [[63, null]], "map2loop.project.Sampler": [[64, null]], "map2loop.project.SamplerDecimator": [[65, null]], "map2loop.project.SamplerSpacing": [[66, null]], "map2loop.project.Sorter": [[67, null]], "map2loop.project.SorterAgeBased": [[68, null]], "map2loop.project.SorterAlpha": [[69, null]], "map2loop.project.SorterUseHint": [[70, null]], "map2loop.project.SorterUseNetworkX": [[71, null]], "map2loop.project.StratigraphicColumn": [[72, null]], "map2loop.project.ThicknessCalculator": [[73, null]], "map2loop.project.ThicknessCalculatorAlpha": [[74, null]], "map2loop.project.ThrowCalculator": [[75, null]], "map2loop.project.ThrowCalculatorAlpha": [[76, null]], "map2loop.project.VerboseLevel": [[77, null]], "map2loop.project.hex_to_rgb": [[78, null]], "map2loop.sampler": [[79, null]], "map2loop.sampler.ABC": [[80, null]], "map2loop.sampler.Datatype": [[81, null]], "map2loop.sampler.MapData": [[82, null]], "map2loop.sampler.Sampler": [[83, null]], "map2loop.sampler.SamplerDecimator": [[84, null]], "map2loop.sampler.SamplerSpacing": [[85, null]], "map2loop.sampler.abstractmethod": [[86, null]], "map2loop.sorter": [[87, null]], "map2loop.sorter.ABC": [[88, null]], "map2loop.sorter.MapData": [[89, null]], "map2loop.sorter.Sorter": [[90, null]], "map2loop.sorter.SorterAgeBased": [[91, null]], "map2loop.sorter.SorterAlpha": [[92, null]], "map2loop.sorter.SorterMaximiseContacts": [[93, null]], "map2loop.sorter.SorterObservationProjections": [[94, null]], "map2loop.sorter.SorterUseHint": [[95, null]], "map2loop.sorter.SorterUseNetworkX": [[96, null]], "map2loop.sorter.abstractmethod": [[97, null]], "map2loop.stratigraphic_column": [[98, null]], "map2loop.stratigraphic_column.StratigraphicColumn": [[99, null]], "map2loop.thickness_calculator": [[100, null]], "map2loop.thickness_calculator.ABC": [[101, null]], "map2loop.thickness_calculator.Datatype": [[102, null]], "map2loop.thickness_calculator.DipDipDirectionInterpolator": [[103, null]], "map2loop.thickness_calculator.InterpolatedStructure": [[104, null]], "map2loop.thickness_calculator.MapData": [[105, null]], "map2loop.thickness_calculator.StructuralPoint": [[106, null]], "map2loop.thickness_calculator.ThicknessCalculator": [[107, null]], "map2loop.thickness_calculator.ThicknessCalculatorAlpha": [[108, null]], "map2loop.thickness_calculator.abstractmethod": [[109, null]], "map2loop.thickness_calculator.calculate_endpoints": [[110, null]], "map2loop.thickness_calculator.create_points": [[111, null]], "map2loop.thickness_calculator.find_segment_strike_from_pt": [[112, null]], "map2loop.thickness_calculator.mean": [[113, null]], "map2loop.thickness_calculator.multiline_to_line": [[114, null]], "map2loop.thickness_calculator.rebuild_sampled_basal_contacts": [[115, null]], "map2loop.throw_calculator": [[116, null]], "map2loop.throw_calculator.ABC": [[117, null]], "map2loop.throw_calculator.MapData": [[118, null]], "map2loop.throw_calculator.ThrowCalculator": [[119, null]], "map2loop.throw_calculator.ThrowCalculatorAlpha": [[120, null]], "map2loop.throw_calculator.abstractmethod": [[121, null]], "map2loop.utils": [[122, null]], "map2loop.utils.calculate_endpoints": [[123, null]], "map2loop.utils.create_points": [[124, null]], "map2loop.utils.find_segment_strike_from_pt": [[125, null]], "map2loop.utils.generate_grid": [[126, null]], "map2loop.utils.generate_random_hex_colors": [[127, null]], "map2loop.utils.hex_to_rgb": [[128, null]], "map2loop.utils.multiline_to_line": [[129, null]], "map2loop.utils.normal_vector_to_dipdirection_dip": [[130, null]], "map2loop.utils.rebuild_sampled_basal_contacts": [[131, null]], "map2loop.utils.strike_dip_vector": [[132, null]], "map2loop.version": [[133, null]]}, "docnames": ["API", "CHANGELOG", "_auto_examples/index", "_auto_examples/plot_hamersley", "_auto_examples/sg_execution_times", "_autosummary/map2loop", "_autosummary/map2loop.Project", "_autosummary/map2loop.aus_state_urls", "_autosummary/map2loop.aus_state_urls.AustraliaStateUrls", "_autosummary/map2loop.aus_state_urls.load_clut", "_autosummary/map2loop.aus_state_urls.load_config", "_autosummary/map2loop.config", "_autosummary/map2loop.config.Config", "_autosummary/map2loop.deformation_history", "_autosummary/map2loop.deformation_history.DeformationHistory", "_autosummary/map2loop.fault_orientation", "_autosummary/map2loop.fault_orientation.ABC", "_autosummary/map2loop.fault_orientation.FaultOrientation", "_autosummary/map2loop.fault_orientation.FaultOrientationNearest", "_autosummary/map2loop.fault_orientation.MapData", "_autosummary/map2loop.fault_orientation.abstractmethod", "_autosummary/map2loop.interpolators", "_autosummary/map2loop.interpolators.ABC", "_autosummary/map2loop.interpolators.Any", "_autosummary/map2loop.interpolators.DBSCAN", "_autosummary/map2loop.interpolators.DipDipDirectionInterpolator", "_autosummary/map2loop.interpolators.Interpolator", "_autosummary/map2loop.interpolators.LinearNDInterpolator", "_autosummary/map2loop.interpolators.NormalVectorInterpolator", "_autosummary/map2loop.interpolators.Rbf", "_autosummary/map2loop.interpolators.abstractmethod", "_autosummary/map2loop.interpolators.generate_grid", "_autosummary/map2loop.interpolators.ndarray", "_autosummary/map2loop.interpolators.strike_dip_vector", "_autosummary/map2loop.m2l_enums", "_autosummary/map2loop.m2l_enums.Datastate", "_autosummary/map2loop.m2l_enums.Datatype", "_autosummary/map2loop.m2l_enums.ErrorState", "_autosummary/map2loop.m2l_enums.IntEnum", "_autosummary/map2loop.m2l_enums.VerboseLevel", "_autosummary/map2loop.map2model_wrapper", "_autosummary/map2loop.map2model_wrapper.Map2ModelWrapper", "_autosummary/map2loop.map2model_wrapper.VerboseLevel", "_autosummary/map2loop.mapdata", "_autosummary/map2loop.mapdata.AustraliaStateUrls", "_autosummary/map2loop.mapdata.BytesIO", "_autosummary/map2loop.mapdata.Config", "_autosummary/map2loop.mapdata.Datastate", "_autosummary/map2loop.mapdata.Datatype", "_autosummary/map2loop.mapdata.GzipFile", "_autosummary/map2loop.mapdata.MapData", "_autosummary/map2loop.mapdata.VerboseLevel", "_autosummary/map2loop.mapdata.WebCoverageService", "_autosummary/map2loop.mapdata.generate_random_hex_colors", "_autosummary/map2loop.mapdata.uuid4", "_autosummary/map2loop.project", "_autosummary/map2loop.project.Datatype", "_autosummary/map2loop.project.DeformationHistory", "_autosummary/map2loop.project.ErrorState", "_autosummary/map2loop.project.FaultOrientation", "_autosummary/map2loop.project.FaultOrientationNearest", "_autosummary/map2loop.project.Map2ModelWrapper", "_autosummary/map2loop.project.MapData", "_autosummary/map2loop.project.Project", "_autosummary/map2loop.project.Sampler", "_autosummary/map2loop.project.SamplerDecimator", "_autosummary/map2loop.project.SamplerSpacing", "_autosummary/map2loop.project.Sorter", "_autosummary/map2loop.project.SorterAgeBased", "_autosummary/map2loop.project.SorterAlpha", "_autosummary/map2loop.project.SorterUseHint", "_autosummary/map2loop.project.SorterUseNetworkX", "_autosummary/map2loop.project.StratigraphicColumn", "_autosummary/map2loop.project.ThicknessCalculator", "_autosummary/map2loop.project.ThicknessCalculatorAlpha", "_autosummary/map2loop.project.ThrowCalculator", "_autosummary/map2loop.project.ThrowCalculatorAlpha", "_autosummary/map2loop.project.VerboseLevel", "_autosummary/map2loop.project.hex_to_rgb", "_autosummary/map2loop.sampler", "_autosummary/map2loop.sampler.ABC", "_autosummary/map2loop.sampler.Datatype", "_autosummary/map2loop.sampler.MapData", "_autosummary/map2loop.sampler.Sampler", "_autosummary/map2loop.sampler.SamplerDecimator", "_autosummary/map2loop.sampler.SamplerSpacing", "_autosummary/map2loop.sampler.abstractmethod", "_autosummary/map2loop.sorter", "_autosummary/map2loop.sorter.ABC", "_autosummary/map2loop.sorter.MapData", "_autosummary/map2loop.sorter.Sorter", "_autosummary/map2loop.sorter.SorterAgeBased", "_autosummary/map2loop.sorter.SorterAlpha", "_autosummary/map2loop.sorter.SorterMaximiseContacts", "_autosummary/map2loop.sorter.SorterObservationProjections", "_autosummary/map2loop.sorter.SorterUseHint", "_autosummary/map2loop.sorter.SorterUseNetworkX", "_autosummary/map2loop.sorter.abstractmethod", "_autosummary/map2loop.stratigraphic_column", "_autosummary/map2loop.stratigraphic_column.StratigraphicColumn", "_autosummary/map2loop.thickness_calculator", "_autosummary/map2loop.thickness_calculator.ABC", "_autosummary/map2loop.thickness_calculator.Datatype", "_autosummary/map2loop.thickness_calculator.DipDipDirectionInterpolator", "_autosummary/map2loop.thickness_calculator.InterpolatedStructure", "_autosummary/map2loop.thickness_calculator.MapData", "_autosummary/map2loop.thickness_calculator.StructuralPoint", "_autosummary/map2loop.thickness_calculator.ThicknessCalculator", "_autosummary/map2loop.thickness_calculator.ThicknessCalculatorAlpha", "_autosummary/map2loop.thickness_calculator.abstractmethod", "_autosummary/map2loop.thickness_calculator.calculate_endpoints", "_autosummary/map2loop.thickness_calculator.create_points", "_autosummary/map2loop.thickness_calculator.find_segment_strike_from_pt", "_autosummary/map2loop.thickness_calculator.mean", "_autosummary/map2loop.thickness_calculator.multiline_to_line", "_autosummary/map2loop.thickness_calculator.rebuild_sampled_basal_contacts", "_autosummary/map2loop.throw_calculator", "_autosummary/map2loop.throw_calculator.ABC", "_autosummary/map2loop.throw_calculator.MapData", "_autosummary/map2loop.throw_calculator.ThrowCalculator", "_autosummary/map2loop.throw_calculator.ThrowCalculatorAlpha", "_autosummary/map2loop.throw_calculator.abstractmethod", "_autosummary/map2loop.utils", "_autosummary/map2loop.utils.calculate_endpoints", "_autosummary/map2loop.utils.create_points", "_autosummary/map2loop.utils.find_segment_strike_from_pt", "_autosummary/map2loop.utils.generate_grid", "_autosummary/map2loop.utils.generate_random_hex_colors", "_autosummary/map2loop.utils.hex_to_rgb", "_autosummary/map2loop.utils.multiline_to_line", "_autosummary/map2loop.utils.normal_vector_to_dipdirection_dip", "_autosummary/map2loop.utils.rebuild_sampled_basal_contacts", "_autosummary/map2loop.utils.strike_dip_vector", "_autosummary/map2loop.version", "index", "sg_execution_times", "user_guide/changing_colours", "user_guide/config_file", "user_guide/explanation", "user_guide/exporting", "user_guide/fault_offset", "user_guide/geomodelling", "user_guide/getting_started", "user_guide/index", "user_guide/installation", "user_guide/m2l_code_template", "user_guide/setup_jupyter", "user_guide/stratigraphic_order", "user_guide/stratigraphic_thickness"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["API.rst", "CHANGELOG.md", "_auto_examples/index.rst", "_auto_examples/plot_hamersley.rst", "_auto_examples/sg_execution_times.rst", "_autosummary/map2loop.rst", "_autosummary/map2loop.Project.rst", "_autosummary/map2loop.aus_state_urls.rst", "_autosummary/map2loop.aus_state_urls.AustraliaStateUrls.rst", "_autosummary/map2loop.aus_state_urls.load_clut.rst", "_autosummary/map2loop.aus_state_urls.load_config.rst", "_autosummary/map2loop.config.rst", "_autosummary/map2loop.config.Config.rst", "_autosummary/map2loop.deformation_history.rst", "_autosummary/map2loop.deformation_history.DeformationHistory.rst", "_autosummary/map2loop.fault_orientation.rst", "_autosummary/map2loop.fault_orientation.ABC.rst", "_autosummary/map2loop.fault_orientation.FaultOrientation.rst", "_autosummary/map2loop.fault_orientation.FaultOrientationNearest.rst", "_autosummary/map2loop.fault_orientation.MapData.rst", "_autosummary/map2loop.fault_orientation.abstractmethod.rst", "_autosummary/map2loop.interpolators.rst", "_autosummary/map2loop.interpolators.ABC.rst", "_autosummary/map2loop.interpolators.Any.rst", "_autosummary/map2loop.interpolators.DBSCAN.rst", "_autosummary/map2loop.interpolators.DipDipDirectionInterpolator.rst", "_autosummary/map2loop.interpolators.Interpolator.rst", "_autosummary/map2loop.interpolators.LinearNDInterpolator.rst", "_autosummary/map2loop.interpolators.NormalVectorInterpolator.rst", "_autosummary/map2loop.interpolators.Rbf.rst", "_autosummary/map2loop.interpolators.abstractmethod.rst", "_autosummary/map2loop.interpolators.generate_grid.rst", "_autosummary/map2loop.interpolators.ndarray.rst", "_autosummary/map2loop.interpolators.strike_dip_vector.rst", "_autosummary/map2loop.m2l_enums.rst", "_autosummary/map2loop.m2l_enums.Datastate.rst", "_autosummary/map2loop.m2l_enums.Datatype.rst", "_autosummary/map2loop.m2l_enums.ErrorState.rst", "_autosummary/map2loop.m2l_enums.IntEnum.rst", "_autosummary/map2loop.m2l_enums.VerboseLevel.rst", "_autosummary/map2loop.map2model_wrapper.rst", "_autosummary/map2loop.map2model_wrapper.Map2ModelWrapper.rst", "_autosummary/map2loop.map2model_wrapper.VerboseLevel.rst", "_autosummary/map2loop.mapdata.rst", "_autosummary/map2loop.mapdata.AustraliaStateUrls.rst", "_autosummary/map2loop.mapdata.BytesIO.rst", "_autosummary/map2loop.mapdata.Config.rst", "_autosummary/map2loop.mapdata.Datastate.rst", "_autosummary/map2loop.mapdata.Datatype.rst", "_autosummary/map2loop.mapdata.GzipFile.rst", "_autosummary/map2loop.mapdata.MapData.rst", "_autosummary/map2loop.mapdata.VerboseLevel.rst", "_autosummary/map2loop.mapdata.WebCoverageService.rst", "_autosummary/map2loop.mapdata.generate_random_hex_colors.rst", "_autosummary/map2loop.mapdata.uuid4.rst", "_autosummary/map2loop.project.rst", "_autosummary/map2loop.project.Datatype.rst", "_autosummary/map2loop.project.DeformationHistory.rst", "_autosummary/map2loop.project.ErrorState.rst", "_autosummary/map2loop.project.FaultOrientation.rst", "_autosummary/map2loop.project.FaultOrientationNearest.rst", "_autosummary/map2loop.project.Map2ModelWrapper.rst", "_autosummary/map2loop.project.MapData.rst", "_autosummary/map2loop.project.Project.rst", "_autosummary/map2loop.project.Sampler.rst", "_autosummary/map2loop.project.SamplerDecimator.rst", "_autosummary/map2loop.project.SamplerSpacing.rst", "_autosummary/map2loop.project.Sorter.rst", "_autosummary/map2loop.project.SorterAgeBased.rst", "_autosummary/map2loop.project.SorterAlpha.rst", "_autosummary/map2loop.project.SorterUseHint.rst", "_autosummary/map2loop.project.SorterUseNetworkX.rst", "_autosummary/map2loop.project.StratigraphicColumn.rst", "_autosummary/map2loop.project.ThicknessCalculator.rst", "_autosummary/map2loop.project.ThicknessCalculatorAlpha.rst", "_autosummary/map2loop.project.ThrowCalculator.rst", "_autosummary/map2loop.project.ThrowCalculatorAlpha.rst", "_autosummary/map2loop.project.VerboseLevel.rst", "_autosummary/map2loop.project.hex_to_rgb.rst", "_autosummary/map2loop.sampler.rst", "_autosummary/map2loop.sampler.ABC.rst", "_autosummary/map2loop.sampler.Datatype.rst", "_autosummary/map2loop.sampler.MapData.rst", "_autosummary/map2loop.sampler.Sampler.rst", "_autosummary/map2loop.sampler.SamplerDecimator.rst", "_autosummary/map2loop.sampler.SamplerSpacing.rst", "_autosummary/map2loop.sampler.abstractmethod.rst", "_autosummary/map2loop.sorter.rst", "_autosummary/map2loop.sorter.ABC.rst", "_autosummary/map2loop.sorter.MapData.rst", "_autosummary/map2loop.sorter.Sorter.rst", "_autosummary/map2loop.sorter.SorterAgeBased.rst", "_autosummary/map2loop.sorter.SorterAlpha.rst", "_autosummary/map2loop.sorter.SorterMaximiseContacts.rst", "_autosummary/map2loop.sorter.SorterObservationProjections.rst", "_autosummary/map2loop.sorter.SorterUseHint.rst", "_autosummary/map2loop.sorter.SorterUseNetworkX.rst", "_autosummary/map2loop.sorter.abstractmethod.rst", "_autosummary/map2loop.stratigraphic_column.rst", "_autosummary/map2loop.stratigraphic_column.StratigraphicColumn.rst", "_autosummary/map2loop.thickness_calculator.rst", "_autosummary/map2loop.thickness_calculator.ABC.rst", "_autosummary/map2loop.thickness_calculator.Datatype.rst", "_autosummary/map2loop.thickness_calculator.DipDipDirectionInterpolator.rst", "_autosummary/map2loop.thickness_calculator.InterpolatedStructure.rst", "_autosummary/map2loop.thickness_calculator.MapData.rst", "_autosummary/map2loop.thickness_calculator.StructuralPoint.rst", "_autosummary/map2loop.thickness_calculator.ThicknessCalculator.rst", "_autosummary/map2loop.thickness_calculator.ThicknessCalculatorAlpha.rst", "_autosummary/map2loop.thickness_calculator.abstractmethod.rst", "_autosummary/map2loop.thickness_calculator.calculate_endpoints.rst", "_autosummary/map2loop.thickness_calculator.create_points.rst", "_autosummary/map2loop.thickness_calculator.find_segment_strike_from_pt.rst", "_autosummary/map2loop.thickness_calculator.mean.rst", "_autosummary/map2loop.thickness_calculator.multiline_to_line.rst", "_autosummary/map2loop.thickness_calculator.rebuild_sampled_basal_contacts.rst", "_autosummary/map2loop.throw_calculator.rst", "_autosummary/map2loop.throw_calculator.ABC.rst", "_autosummary/map2loop.throw_calculator.MapData.rst", "_autosummary/map2loop.throw_calculator.ThrowCalculator.rst", "_autosummary/map2loop.throw_calculator.ThrowCalculatorAlpha.rst", "_autosummary/map2loop.throw_calculator.abstractmethod.rst", "_autosummary/map2loop.utils.rst", "_autosummary/map2loop.utils.calculate_endpoints.rst", "_autosummary/map2loop.utils.create_points.rst", "_autosummary/map2loop.utils.find_segment_strike_from_pt.rst", "_autosummary/map2loop.utils.generate_grid.rst", "_autosummary/map2loop.utils.generate_random_hex_colors.rst", "_autosummary/map2loop.utils.hex_to_rgb.rst", "_autosummary/map2loop.utils.multiline_to_line.rst", "_autosummary/map2loop.utils.normal_vector_to_dipdirection_dip.rst", "_autosummary/map2loop.utils.rebuild_sampled_basal_contacts.rst", "_autosummary/map2loop.utils.strike_dip_vector.rst", "_autosummary/map2loop.version.rst", "index.rst", "sg_execution_times.rst", "user_guide/changing_colours.rst", "user_guide/config_file.rst", "user_guide/explanation.rst", "user_guide/exporting.rst", "user_guide/fault_offset.rst", "user_guide/geomodelling.rst", "user_guide/getting_started.rst", "user_guide/index.rst", "user_guide/installation.rst", "user_guide/m2l_code_template.rst", "user_guide/setup_jupyter.rst", "user_guide/stratigraphic_order.rst", "user_guide/stratigraphic_thickness.rst"], "indexentries": {"__call__() (map2loop.interpolators.linearndinterpolator method)": [[27, "map2loop.interpolators.LinearNDInterpolator.__call__", false]], "__init__() (map2loop.aus_state_urls.australiastateurls method)": [[8, "map2loop.aus_state_urls.AustraliaStateUrls.__init__", false]], "__init__() (map2loop.config.config method)": [[12, "map2loop.config.Config.__init__", false]], "__init__() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.__init__", false]], "__init__() (map2loop.fault_orientation.abc method)": [[16, "map2loop.fault_orientation.ABC.__init__", false]], "__init__() (map2loop.fault_orientation.faultorientation method)": [[17, "map2loop.fault_orientation.FaultOrientation.__init__", false]], "__init__() (map2loop.fault_orientation.faultorientationnearest method)": [[18, "map2loop.fault_orientation.FaultOrientationNearest.__init__", false]], "__init__() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.__init__", false]], "__init__() (map2loop.interpolators.abc method)": [[22, "map2loop.interpolators.ABC.__init__", false]], "__init__() (map2loop.interpolators.any method)": [[23, "map2loop.interpolators.Any.__init__", false]], "__init__() (map2loop.interpolators.dbscan method)": [[24, "map2loop.interpolators.DBSCAN.__init__", false]], "__init__() (map2loop.interpolators.dipdipdirectioninterpolator method)": [[25, "map2loop.interpolators.DipDipDirectionInterpolator.__init__", false]], "__init__() (map2loop.interpolators.interpolator method)": [[26, "map2loop.interpolators.Interpolator.__init__", false]], "__init__() (map2loop.interpolators.linearndinterpolator method)": [[27, "map2loop.interpolators.LinearNDInterpolator.__init__", false]], "__init__() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.__init__", false]], "__init__() (map2loop.interpolators.normalvectorinterpolator method)": [[28, "map2loop.interpolators.NormalVectorInterpolator.__init__", false]], "__init__() (map2loop.interpolators.rbf method)": [[29, "map2loop.interpolators.Rbf.__init__", false]], "__init__() (map2loop.m2l_enums.datastate method)": [[35, "map2loop.m2l_enums.Datastate.__init__", false]], "__init__() (map2loop.m2l_enums.datatype method)": [[36, "map2loop.m2l_enums.Datatype.__init__", false]], "__init__() (map2loop.m2l_enums.errorstate method)": [[37, "map2loop.m2l_enums.ErrorState.__init__", false]], "__init__() (map2loop.m2l_enums.intenum method)": [[38, "map2loop.m2l_enums.IntEnum.__init__", false]], "__init__() (map2loop.m2l_enums.verboselevel method)": [[39, "map2loop.m2l_enums.VerboseLevel.__init__", false]], "__init__() (map2loop.map2model_wrapper.map2modelwrapper method)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.__init__", false]], "__init__() (map2loop.map2model_wrapper.verboselevel method)": [[42, "map2loop.map2model_wrapper.VerboseLevel.__init__", false]], "__init__() (map2loop.mapdata.australiastateurls method)": [[44, "map2loop.mapdata.AustraliaStateUrls.__init__", false]], "__init__() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.__init__", false]], "__init__() (map2loop.mapdata.config method)": [[46, "map2loop.mapdata.Config.__init__", false]], "__init__() (map2loop.mapdata.datastate method)": [[47, "map2loop.mapdata.Datastate.__init__", false]], "__init__() (map2loop.mapdata.datatype method)": [[48, "map2loop.mapdata.Datatype.__init__", false]], "__init__() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.__init__", false]], "__init__() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.__init__", false]], "__init__() (map2loop.mapdata.verboselevel method)": [[51, "map2loop.mapdata.VerboseLevel.__init__", false]], "__init__() (map2loop.project method)": [[6, "map2loop.Project.__init__", false]], "__init__() (map2loop.project.datatype method)": [[56, "map2loop.project.Datatype.__init__", false]], "__init__() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.__init__", false]], "__init__() (map2loop.project.errorstate method)": [[58, "map2loop.project.ErrorState.__init__", false]], "__init__() (map2loop.project.faultorientation method)": [[59, "map2loop.project.FaultOrientation.__init__", false]], "__init__() (map2loop.project.faultorientationnearest method)": [[60, "map2loop.project.FaultOrientationNearest.__init__", false]], "__init__() (map2loop.project.map2modelwrapper method)": [[61, "map2loop.project.Map2ModelWrapper.__init__", false]], "__init__() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.__init__", false]], "__init__() (map2loop.project.project method)": [[63, "map2loop.project.Project.__init__", false]], "__init__() (map2loop.project.sampler method)": [[64, "map2loop.project.Sampler.__init__", false]], "__init__() (map2loop.project.samplerdecimator method)": [[65, "map2loop.project.SamplerDecimator.__init__", false]], "__init__() (map2loop.project.samplerspacing method)": [[66, "map2loop.project.SamplerSpacing.__init__", false]], "__init__() (map2loop.project.sorter method)": [[67, "map2loop.project.Sorter.__init__", false]], "__init__() (map2loop.project.sorteragebased method)": [[68, "map2loop.project.SorterAgeBased.__init__", false]], "__init__() (map2loop.project.sorteralpha method)": [[69, "map2loop.project.SorterAlpha.__init__", false]], "__init__() (map2loop.project.sorterusehint method)": [[70, "map2loop.project.SorterUseHint.__init__", false]], "__init__() (map2loop.project.sorterusenetworkx method)": [[71, "map2loop.project.SorterUseNetworkX.__init__", false]], "__init__() (map2loop.project.stratigraphiccolumn method)": [[72, "map2loop.project.StratigraphicColumn.__init__", false]], "__init__() (map2loop.project.thicknesscalculator method)": [[73, "map2loop.project.ThicknessCalculator.__init__", false]], "__init__() (map2loop.project.thicknesscalculatoralpha method)": [[74, "map2loop.project.ThicknessCalculatorAlpha.__init__", false]], "__init__() (map2loop.project.throwcalculator method)": [[75, "map2loop.project.ThrowCalculator.__init__", false]], "__init__() (map2loop.project.throwcalculatoralpha method)": [[76, "map2loop.project.ThrowCalculatorAlpha.__init__", false]], "__init__() (map2loop.project.verboselevel method)": [[77, "map2loop.project.VerboseLevel.__init__", false]], "__init__() (map2loop.sampler.abc method)": [[80, "map2loop.sampler.ABC.__init__", false]], "__init__() (map2loop.sampler.datatype method)": [[81, "map2loop.sampler.Datatype.__init__", false]], "__init__() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.__init__", false]], "__init__() (map2loop.sampler.sampler method)": [[83, "map2loop.sampler.Sampler.__init__", false]], "__init__() (map2loop.sampler.samplerdecimator method)": [[84, "map2loop.sampler.SamplerDecimator.__init__", false]], "__init__() (map2loop.sampler.samplerspacing method)": [[85, "map2loop.sampler.SamplerSpacing.__init__", false]], "__init__() (map2loop.sorter.abc method)": [[88, "map2loop.sorter.ABC.__init__", false]], "__init__() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.__init__", false]], "__init__() (map2loop.sorter.sorter method)": [[90, "map2loop.sorter.Sorter.__init__", false]], "__init__() (map2loop.sorter.sorteragebased method)": [[91, "map2loop.sorter.SorterAgeBased.__init__", false]], "__init__() (map2loop.sorter.sorteralpha method)": [[92, "map2loop.sorter.SorterAlpha.__init__", false]], "__init__() (map2loop.sorter.sortermaximisecontacts method)": [[93, "map2loop.sorter.SorterMaximiseContacts.__init__", false]], "__init__() (map2loop.sorter.sorterobservationprojections method)": [[94, "map2loop.sorter.SorterObservationProjections.__init__", false]], "__init__() (map2loop.sorter.sorterusehint method)": [[95, "map2loop.sorter.SorterUseHint.__init__", false]], "__init__() (map2loop.sorter.sorterusenetworkx method)": [[96, "map2loop.sorter.SorterUseNetworkX.__init__", false]], "__init__() (map2loop.stratigraphic_column.stratigraphiccolumn method)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.__init__", false]], "__init__() (map2loop.thickness_calculator.abc method)": [[101, "map2loop.thickness_calculator.ABC.__init__", false]], "__init__() (map2loop.thickness_calculator.datatype method)": [[102, "map2loop.thickness_calculator.Datatype.__init__", false]], "__init__() (map2loop.thickness_calculator.dipdipdirectioninterpolator method)": [[103, "map2loop.thickness_calculator.DipDipDirectionInterpolator.__init__", false]], "__init__() (map2loop.thickness_calculator.interpolatedstructure method)": [[104, "map2loop.thickness_calculator.InterpolatedStructure.__init__", false]], "__init__() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.__init__", false]], "__init__() (map2loop.thickness_calculator.structuralpoint method)": [[106, "map2loop.thickness_calculator.StructuralPoint.__init__", false]], "__init__() (map2loop.thickness_calculator.thicknesscalculator method)": [[107, "map2loop.thickness_calculator.ThicknessCalculator.__init__", false]], "__init__() (map2loop.thickness_calculator.thicknesscalculatoralpha method)": [[108, "map2loop.thickness_calculator.ThicknessCalculatorAlpha.__init__", false]], "__init__() (map2loop.throw_calculator.abc method)": [[117, "map2loop.throw_calculator.ABC.__init__", false]], "__init__() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.__init__", false]], "__init__() (map2loop.throw_calculator.throwcalculator method)": [[119, "map2loop.throw_calculator.ThrowCalculator.__init__", false]], "__init__() (map2loop.throw_calculator.throwcalculatoralpha method)": [[120, "map2loop.throw_calculator.ThrowCalculatorAlpha.__init__", false]], "a (map2loop.interpolators.rbf attribute)": [[29, "map2loop.interpolators.Rbf.A", false]], "abc (class in map2loop.fault_orientation)": [[16, "map2loop.fault_orientation.ABC", false]], "abc (class in map2loop.interpolators)": [[22, "map2loop.interpolators.ABC", false]], "abc (class in map2loop.sampler)": [[80, "map2loop.sampler.ABC", false]], "abc (class in map2loop.sorter)": [[88, "map2loop.sorter.ABC", false]], "abc (class in map2loop.thickness_calculator)": [[101, "map2loop.thickness_calculator.ABC", false]], "abc (class in map2loop.throw_calculator)": [[117, "map2loop.throw_calculator.ABC", false]], "abstractmethod() (in module map2loop.fault_orientation)": [[20, "map2loop.fault_orientation.abstractmethod", false]], "abstractmethod() (in module map2loop.interpolators)": [[30, "map2loop.interpolators.abstractmethod", false]], "abstractmethod() (in module map2loop.sampler)": [[86, "map2loop.sampler.abstractmethod", false]], "abstractmethod() (in module map2loop.sorter)": [[97, "map2loop.sorter.abstractmethod", false]], "abstractmethod() (in module map2loop.thickness_calculator)": [[109, "map2loop.thickness_calculator.abstractmethod", false]], "abstractmethod() (in module map2loop.throw_calculator)": [[121, "map2loop.throw_calculator.abstractmethod", false]], "addfault() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.addFault", false]], "addfault() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.addFault", false]], "addfold() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.addFold", false]], "addfold() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.addFold", false]], "addlithologyunit() (map2loop.project.stratigraphiccolumn method)": [[72, "map2loop.project.StratigraphicColumn.addLithologyUnit", false]], "addlithologyunit() (map2loop.stratigraphic_column.stratigraphiccolumn method)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.addLithologyUnit", false]], "addstratigraphicunit() (map2loop.project.stratigraphiccolumn method)": [[72, "map2loop.project.StratigraphicColumn.addStratigraphicUnit", false]], "addstratigraphicunit() (map2loop.stratigraphic_column.stratigraphiccolumn method)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.addStratigraphicUnit", false]], "aligned (map2loop.interpolators.ndarray attribute)": [[32, "map2loop.interpolators.ndarray.ALIGNED", false]], "all() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.all", false]], "any (class in map2loop.interpolators)": [[23, "map2loop.interpolators.Any", false]], "any() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.any", false]], "apply_colour_to_units() (map2loop.project method)": [[6, "map2loop.Project.apply_colour_to_units", false]], "apply_colour_to_units() (map2loop.project.project method)": [[63, "map2loop.project.Project.apply_colour_to_units", false]], "argmax() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.argmax", false]], "argmin() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.argmin", false]], "argpartition() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.argpartition", false]], "argsort() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.argsort", false]], "as_integer_ratio() (map2loop.m2l_enums.datastate method)": [[35, "map2loop.m2l_enums.Datastate.as_integer_ratio", false]], "as_integer_ratio() (map2loop.m2l_enums.datatype method)": [[36, "map2loop.m2l_enums.Datatype.as_integer_ratio", false]], "as_integer_ratio() (map2loop.m2l_enums.errorstate method)": [[37, "map2loop.m2l_enums.ErrorState.as_integer_ratio", false]], "as_integer_ratio() (map2loop.m2l_enums.intenum method)": [[38, "map2loop.m2l_enums.IntEnum.as_integer_ratio", false]], "as_integer_ratio() (map2loop.m2l_enums.verboselevel method)": [[39, "map2loop.m2l_enums.VerboseLevel.as_integer_ratio", false]], "as_integer_ratio() (map2loop.map2model_wrapper.verboselevel method)": [[42, "map2loop.map2model_wrapper.VerboseLevel.as_integer_ratio", false]], "as_integer_ratio() (map2loop.mapdata.datastate method)": [[47, "map2loop.mapdata.Datastate.as_integer_ratio", false]], "as_integer_ratio() (map2loop.mapdata.datatype method)": [[48, "map2loop.mapdata.Datatype.as_integer_ratio", false]], "as_integer_ratio() (map2loop.mapdata.verboselevel method)": [[51, "map2loop.mapdata.VerboseLevel.as_integer_ratio", false]], "as_integer_ratio() (map2loop.project.datatype method)": [[56, "map2loop.project.Datatype.as_integer_ratio", false]], "as_integer_ratio() (map2loop.project.errorstate method)": [[58, "map2loop.project.ErrorState.as_integer_ratio", false]], "as_integer_ratio() (map2loop.project.verboselevel method)": [[77, "map2loop.project.VerboseLevel.as_integer_ratio", false]], "as_integer_ratio() (map2loop.sampler.datatype method)": [[81, "map2loop.sampler.Datatype.as_integer_ratio", false]], "as_integer_ratio() (map2loop.thickness_calculator.datatype method)": [[102, "map2loop.thickness_calculator.Datatype.as_integer_ratio", false]], "astype() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.astype", false]], "australiastateurls (class in map2loop.aus_state_urls)": [[8, "map2loop.aus_state_urls.AustraliaStateUrls", false]], "australiastateurls (class in map2loop.mapdata)": [[44, "map2loop.mapdata.AustraliaStateUrls", false]], "basal_contacts (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.basal_contacts", false]], "basal_contacts (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.basal_contacts", false]], "basal_contacts (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.basal_contacts", false]], "basal_contacts (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.basal_contacts", false]], "basal_contacts (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.basal_contacts", false]], "basal_contacts (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.basal_contacts", false]], "basal_contacts (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.basal_contacts", false]], "base (map2loop.interpolators.ndarray attribute)": [[32, "id1", false], [32, "map2loop.interpolators.ndarray.base", false]], "behaved (map2loop.interpolators.ndarray attribute)": [[32, "map2loop.interpolators.ndarray.BEHAVED", false]], "bit_count() (map2loop.m2l_enums.datastate method)": [[35, "map2loop.m2l_enums.Datastate.bit_count", false]], "bit_count() (map2loop.m2l_enums.datatype method)": [[36, "map2loop.m2l_enums.Datatype.bit_count", false]], "bit_count() (map2loop.m2l_enums.errorstate method)": [[37, "map2loop.m2l_enums.ErrorState.bit_count", false]], "bit_count() (map2loop.m2l_enums.intenum method)": [[38, "map2loop.m2l_enums.IntEnum.bit_count", false]], "bit_count() (map2loop.m2l_enums.verboselevel method)": [[39, "map2loop.m2l_enums.VerboseLevel.bit_count", false]], "bit_count() (map2loop.map2model_wrapper.verboselevel method)": [[42, "map2loop.map2model_wrapper.VerboseLevel.bit_count", false]], "bit_count() (map2loop.mapdata.datastate method)": [[47, "map2loop.mapdata.Datastate.bit_count", false]], "bit_count() (map2loop.mapdata.datatype method)": [[48, "map2loop.mapdata.Datatype.bit_count", false]], "bit_count() (map2loop.mapdata.verboselevel method)": [[51, "map2loop.mapdata.VerboseLevel.bit_count", false]], "bit_count() (map2loop.project.datatype method)": [[56, "map2loop.project.Datatype.bit_count", false]], "bit_count() (map2loop.project.errorstate method)": [[58, "map2loop.project.ErrorState.bit_count", false]], "bit_count() (map2loop.project.verboselevel method)": [[77, "map2loop.project.VerboseLevel.bit_count", false]], "bit_count() (map2loop.sampler.datatype method)": [[81, "map2loop.sampler.Datatype.bit_count", false]], "bit_count() (map2loop.thickness_calculator.datatype method)": [[102, "map2loop.thickness_calculator.Datatype.bit_count", false]], "bit_length() (map2loop.m2l_enums.datastate method)": [[35, "map2loop.m2l_enums.Datastate.bit_length", false]], "bit_length() (map2loop.m2l_enums.datatype method)": [[36, "map2loop.m2l_enums.Datatype.bit_length", false]], "bit_length() (map2loop.m2l_enums.errorstate method)": [[37, "map2loop.m2l_enums.ErrorState.bit_length", false]], "bit_length() (map2loop.m2l_enums.intenum method)": [[38, "map2loop.m2l_enums.IntEnum.bit_length", false]], "bit_length() (map2loop.m2l_enums.verboselevel method)": [[39, "map2loop.m2l_enums.VerboseLevel.bit_length", false]], "bit_length() (map2loop.map2model_wrapper.verboselevel method)": [[42, "map2loop.map2model_wrapper.VerboseLevel.bit_length", false]], "bit_length() (map2loop.mapdata.datastate method)": [[47, "map2loop.mapdata.Datastate.bit_length", false]], "bit_length() (map2loop.mapdata.datatype method)": [[48, "map2loop.mapdata.Datatype.bit_length", false]], "bit_length() (map2loop.mapdata.verboselevel method)": [[51, "map2loop.mapdata.VerboseLevel.bit_length", false]], "bit_length() (map2loop.project.datatype method)": [[56, "map2loop.project.Datatype.bit_length", false]], "bit_length() (map2loop.project.errorstate method)": [[58, "map2loop.project.ErrorState.bit_length", false]], "bit_length() (map2loop.project.verboselevel method)": [[77, "map2loop.project.VerboseLevel.bit_length", false]], "bit_length() (map2loop.sampler.datatype method)": [[81, "map2loop.sampler.Datatype.bit_length", false]], "bit_length() (map2loop.thickness_calculator.datatype method)": [[102, "map2loop.thickness_calculator.Datatype.bit_length", false]], "bounding_box (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.bounding_box", false]], "bounding_box (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.bounding_box", false]], "bounding_box (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.bounding_box", false]], "bounding_box (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.bounding_box", false]], "bounding_box (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.bounding_box", false]], "bounding_box (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.bounding_box", false]], "bounding_box (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.bounding_box", false]], "bounding_box_polygon (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.bounding_box_polygon", false]], "bounding_box_polygon (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.bounding_box_polygon", false]], "bounding_box_polygon (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.bounding_box_polygon", false]], "bounding_box_polygon (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.bounding_box_polygon", false]], "bounding_box_polygon (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.bounding_box_polygon", false]], "bounding_box_polygon (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.bounding_box_polygon", false]], "bounding_box_polygon (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.bounding_box_polygon", false]], "bounding_box_str (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.bounding_box_str", false]], "bounding_box_str (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.bounding_box_str", false]], "bounding_box_str (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.bounding_box_str", false]], "bounding_box_str (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.bounding_box_str", false]], "bounding_box_str (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.bounding_box_str", false]], "bounding_box_str (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.bounding_box_str", false]], "bounding_box_str (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.bounding_box_str", false]], "bytesio (class in map2loop.mapdata)": [[45, "map2loop.mapdata.BytesIO", false]], "byteswap() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.byteswap", false]], "c_contiguous (map2loop.interpolators.ndarray attribute)": [[32, "map2loop.interpolators.ndarray.C_CONTIGUOUS", false]], "calculate() (map2loop.fault_orientation.faultorientation method)": [[17, "map2loop.fault_orientation.FaultOrientation.calculate", false]], "calculate() (map2loop.fault_orientation.faultorientationnearest method)": [[18, "map2loop.fault_orientation.FaultOrientationNearest.calculate", false]], "calculate() (map2loop.project.faultorientation method)": [[59, "map2loop.project.FaultOrientation.calculate", false]], "calculate() (map2loop.project.faultorientationnearest method)": [[60, "map2loop.project.FaultOrientationNearest.calculate", false]], "calculate_bounding_box_and_projection() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.calculate_bounding_box_and_projection", false]], "calculate_bounding_box_and_projection() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.calculate_bounding_box_and_projection", false]], "calculate_bounding_box_and_projection() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.calculate_bounding_box_and_projection", false]], "calculate_bounding_box_and_projection() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.calculate_bounding_box_and_projection", false]], "calculate_bounding_box_and_projection() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.calculate_bounding_box_and_projection", false]], "calculate_bounding_box_and_projection() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.calculate_bounding_box_and_projection", false]], "calculate_bounding_box_and_projection() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.calculate_bounding_box_and_projection", false]], "calculate_endpoints() (in module map2loop.thickness_calculator)": [[110, "map2loop.thickness_calculator.calculate_endpoints", false]], "calculate_endpoints() (in module map2loop.utils)": [[123, "map2loop.utils.calculate_endpoints", false]], "calculate_stratigraphic_order() (map2loop.project method)": [[6, "map2loop.Project.calculate_stratigraphic_order", false]], "calculate_stratigraphic_order() (map2loop.project.project method)": [[63, "map2loop.project.Project.calculate_stratigraphic_order", false]], "calculate_unit_thicknesses() (map2loop.project method)": [[6, "map2loop.Project.calculate_unit_thicknesses", false]], "calculate_unit_thicknesses() (map2loop.project.project method)": [[63, "map2loop.project.Project.calculate_unit_thicknesses", false]], "carray (map2loop.interpolators.ndarray attribute)": [[32, "map2loop.interpolators.ndarray.CARRAY", false]], "check_filename() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.check_filename", false]], "check_filename() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.check_filename", false]], "check_filename() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.check_filename", false]], "check_filename() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.check_filename", false]], "check_filename() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.check_filename", false]], "check_filename() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.check_filename", false]], "check_filename() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.check_filename", false]], "check_filenames() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.check_filenames", false]], "check_filenames() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.check_filenames", false]], "check_filenames() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.check_filenames", false]], "check_filenames() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.check_filenames", false]], "check_filenames() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.check_filenames", false]], "check_filenames() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.check_filenames", false]], "check_filenames() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.check_filenames", false]], "check_map() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.check_map", false]], "check_map() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.check_map", false]], "check_map() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.check_map", false]], "check_map() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.check_map", false]], "check_map() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.check_map", false]], "check_map() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.check_map", false]], "check_map() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.check_map", false]], "choose() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.choose", false]], "clip() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.clip", false]], "close() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.close", false]], "close() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.close", false]], "closed (map2loop.mapdata.bytesio attribute)": [[45, "map2loop.mapdata.BytesIO.closed", false]], "colour_filename (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.colour_filename", false]], "colour_filename (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.colour_filename", false]], "colour_filename (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.colour_filename", false]], "colour_filename (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.colour_filename", false]], "colour_filename (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.colour_filename", false]], "colour_filename (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.colour_filename", false]], "colour_filename (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.colour_filename", false]], "colour_units() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.colour_units", false]], "colour_units() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.colour_units", false]], "colour_units() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.colour_units", false]], "colour_units() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.colour_units", false]], "colour_units() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.colour_units", false]], "colour_units() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.colour_units", false]], "colour_units() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.colour_units", false]], "column (map2loop.project.stratigraphiccolumn attribute)": [[72, "map2loop.project.StratigraphicColumn.column", false]], "column (map2loop.stratigraphic_column.stratigraphiccolumn attribute)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.column", false]], "components_ (map2loop.interpolators.dbscan attribute)": [[24, "map2loop.interpolators.DBSCAN.components_", false]], "compress() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.compress", false]], "compute() (map2loop.project.thicknesscalculator method)": [[73, "map2loop.project.ThicknessCalculator.compute", false]], "compute() (map2loop.project.thicknesscalculatoralpha method)": [[74, "map2loop.project.ThicknessCalculatorAlpha.compute", false]], "compute() (map2loop.project.throwcalculator method)": [[75, "map2loop.project.ThrowCalculator.compute", false]], "compute() (map2loop.project.throwcalculatoralpha method)": [[76, "map2loop.project.ThrowCalculatorAlpha.compute", false]], "compute() (map2loop.thickness_calculator.interpolatedstructure method)": [[104, "map2loop.thickness_calculator.InterpolatedStructure.compute", false]], "compute() (map2loop.thickness_calculator.structuralpoint method)": [[106, "map2loop.thickness_calculator.StructuralPoint.compute", false]], "compute() (map2loop.thickness_calculator.thicknesscalculator method)": [[107, "map2loop.thickness_calculator.ThicknessCalculator.compute", false]], "compute() (map2loop.thickness_calculator.thicknesscalculatoralpha method)": [[108, "map2loop.thickness_calculator.ThicknessCalculatorAlpha.compute", false]], "compute() (map2loop.throw_calculator.throwcalculator method)": [[119, "map2loop.throw_calculator.ThrowCalculator.compute", false]], "compute() (map2loop.throw_calculator.throwcalculatoralpha method)": [[120, "map2loop.throw_calculator.ThrowCalculatorAlpha.compute", false]], "config (class in map2loop.config)": [[12, "map2loop.config.Config", false]], "config (class in map2loop.mapdata)": [[46, "map2loop.mapdata.Config", false]], "config (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.config", false]], "config (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.config", false]], "config (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.config", false]], "config (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.config", false]], "config (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.config", false]], "config (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.config", false]], "config (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.config", false]], "config_filename (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.config_filename", false]], "config_filename (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.config_filename", false]], "config_filename (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.config_filename", false]], "config_filename (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.config_filename", false]], "config_filename (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.config_filename", false]], "config_filename (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.config_filename", false]], "config_filename (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.config_filename", false]], "conj() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.conj", false]], "conjugate() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.conjugate", false]], "conjugate() (map2loop.m2l_enums.datastate method)": [[35, "map2loop.m2l_enums.Datastate.conjugate", false]], "conjugate() (map2loop.m2l_enums.datatype method)": [[36, "map2loop.m2l_enums.Datatype.conjugate", false]], "conjugate() (map2loop.m2l_enums.errorstate method)": [[37, "map2loop.m2l_enums.ErrorState.conjugate", false]], "conjugate() (map2loop.m2l_enums.intenum method)": [[38, "map2loop.m2l_enums.IntEnum.conjugate", false]], "conjugate() (map2loop.m2l_enums.verboselevel method)": [[39, "map2loop.m2l_enums.VerboseLevel.conjugate", false]], "conjugate() (map2loop.map2model_wrapper.verboselevel method)": [[42, "map2loop.map2model_wrapper.VerboseLevel.conjugate", false]], "conjugate() (map2loop.mapdata.datastate method)": [[47, "map2loop.mapdata.Datastate.conjugate", false]], "conjugate() (map2loop.mapdata.datatype method)": [[48, "map2loop.mapdata.Datatype.conjugate", false]], "conjugate() (map2loop.mapdata.verboselevel method)": [[51, "map2loop.mapdata.VerboseLevel.conjugate", false]], "conjugate() (map2loop.project.datatype method)": [[56, "map2loop.project.Datatype.conjugate", false]], "conjugate() (map2loop.project.errorstate method)": [[58, "map2loop.project.ErrorState.conjugate", false]], "conjugate() (map2loop.project.verboselevel method)": [[77, "map2loop.project.VerboseLevel.conjugate", false]], "conjugate() (map2loop.sampler.datatype method)": [[81, "map2loop.sampler.Datatype.conjugate", false]], "conjugate() (map2loop.thickness_calculator.datatype method)": [[102, "map2loop.thickness_calculator.Datatype.conjugate", false]], "contacts (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.contacts", false]], "contacts (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.contacts", false]], "contacts (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.contacts", false]], "contacts (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.contacts", false]], "contacts (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.contacts", false]], "contacts (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.contacts", false]], "contacts (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.contacts", false]], "copy() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.copy", false]], "core_sample_indices_ (map2loop.interpolators.dbscan attribute)": [[24, "map2loop.interpolators.DBSCAN.core_sample_indices_", false]], "create_points() (in module map2loop.thickness_calculator)": [[111, "map2loop.thickness_calculator.create_points", false]], "create_points() (in module map2loop.utils)": [[124, "map2loop.utils.create_points", false]], "ctypes (map2loop.interpolators.ndarray attribute)": [[32, "id2", false], [32, "map2loop.interpolators.ndarray.ctypes", false]], "cumprod() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.cumprod", false]], "cumsum() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.cumsum", false]], "data (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.data", false]], "data (map2loop.interpolators.ndarray attribute)": [[32, "id3", false], [32, "map2loop.interpolators.ndarray.data", false]], "data (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.data", false]], "data (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.data", false]], "data (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.data", false]], "data (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.data", false]], "data (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.data", false]], "data (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.data", false]], "data_states (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.data_states", false]], "data_states (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.data_states", false]], "data_states (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.data_states", false]], "data_states (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.data_states", false]], "data_states (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.data_states", false]], "data_states (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.data_states", false]], "data_states (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.data_states", false]], "dataframe (map2loop.interpolators.normalvectorinterpolator attribute)": [[28, "map2loop.interpolators.NormalVectorInterpolator.dataframe", false]], "datastate (class in map2loop.m2l_enums)": [[35, "map2loop.m2l_enums.Datastate", false]], "datastate (class in map2loop.mapdata)": [[47, "map2loop.mapdata.Datastate", false]], "datatype (class in map2loop.m2l_enums)": [[36, "map2loop.m2l_enums.Datatype", false]], "datatype (class in map2loop.mapdata)": [[48, "map2loop.mapdata.Datatype", false]], "datatype (class in map2loop.project)": [[56, "map2loop.project.Datatype", false]], "datatype (class in map2loop.sampler)": [[81, "map2loop.sampler.Datatype", false]], "datatype (class in map2loop.thickness_calculator)": [[102, "map2loop.thickness_calculator.Datatype", false]], "dbscan (class in map2loop.interpolators)": [[24, "map2loop.interpolators.DBSCAN", false]], "deformationhistory (class in map2loop.deformation_history)": [[14, "map2loop.deformation_history.DeformationHistory", false]], "deformationhistory (class in map2loop.project)": [[57, "map2loop.project.DeformationHistory", false]], "denominator (map2loop.m2l_enums.datastate attribute)": [[35, "map2loop.m2l_enums.Datastate.denominator", false]], "denominator (map2loop.m2l_enums.datatype attribute)": [[36, "map2loop.m2l_enums.Datatype.denominator", false]], "denominator (map2loop.m2l_enums.errorstate attribute)": [[37, "map2loop.m2l_enums.ErrorState.denominator", false]], "denominator (map2loop.m2l_enums.intenum attribute)": [[38, "map2loop.m2l_enums.IntEnum.denominator", false]], "denominator (map2loop.m2l_enums.verboselevel attribute)": [[39, "map2loop.m2l_enums.VerboseLevel.denominator", false]], "denominator (map2loop.map2model_wrapper.verboselevel attribute)": [[42, "map2loop.map2model_wrapper.VerboseLevel.denominator", false]], "denominator (map2loop.mapdata.datastate attribute)": [[47, "map2loop.mapdata.Datastate.denominator", false]], "denominator (map2loop.mapdata.datatype attribute)": [[48, "map2loop.mapdata.Datatype.denominator", false]], "denominator (map2loop.mapdata.verboselevel attribute)": [[51, "map2loop.mapdata.VerboseLevel.denominator", false]], "denominator (map2loop.project.datatype attribute)": [[56, "map2loop.project.Datatype.denominator", false]], "denominator (map2loop.project.errorstate attribute)": [[58, "map2loop.project.ErrorState.denominator", false]], "denominator (map2loop.project.verboselevel attribute)": [[77, "map2loop.project.VerboseLevel.denominator", false]], "denominator (map2loop.sampler.datatype attribute)": [[81, "map2loop.sampler.Datatype.denominator", false]], "denominator (map2loop.thickness_calculator.datatype attribute)": [[102, "map2loop.thickness_calculator.Datatype.denominator", false]], "detach() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.detach", false]], "detach() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.detach", false]], "di (map2loop.interpolators.rbf attribute)": [[29, "map2loop.interpolators.Rbf.di", false]], "diagonal() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.diagonal", false]], "dipdipdirectioninterpolator (class in map2loop.interpolators)": [[25, "map2loop.interpolators.DipDipDirectionInterpolator", false]], "dipdipdirectioninterpolator (class in map2loop.thickness_calculator)": [[103, "map2loop.thickness_calculator.DipDipDirectionInterpolator", false]], "dirtyflags (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.dirtyflags", false]], "dirtyflags (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.dirtyflags", false]], "dirtyflags (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.dirtyflags", false]], "dirtyflags (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.dirtyflags", false]], "dirtyflags (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.dirtyflags", false]], "dirtyflags (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.dirtyflags", false]], "dirtyflags (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.dirtyflags", false]], "draw_geology_map() (map2loop.project method)": [[6, "map2loop.Project.draw_geology_map", false]], "draw_geology_map() (map2loop.project.project method)": [[63, "map2loop.project.Project.draw_geology_map", false]], "dtype (map2loop.interpolators.ndarray attribute)": [[32, "id4", false], [32, "map2loop.interpolators.ndarray.dtype", false]], "dump() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.dump", false]], "dumps() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.dumps", false]], "epsilon (map2loop.interpolators.rbf attribute)": [[29, "map2loop.interpolators.Rbf.epsilon", false]], "errorstate (class in map2loop.m2l_enums)": [[37, "map2loop.m2l_enums.ErrorState", false]], "errorstate (class in map2loop.project)": [[58, "map2loop.project.ErrorState", false]], "export_wkt_format_files() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.export_wkt_format_files", false]], "export_wkt_format_files() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.export_wkt_format_files", false]], "export_wkt_format_files() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.export_wkt_format_files", false]], "export_wkt_format_files() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.export_wkt_format_files", false]], "export_wkt_format_files() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.export_wkt_format_files", false]], "export_wkt_format_files() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.export_wkt_format_files", false]], "export_wkt_format_files() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.export_wkt_format_files", false]], "extract_all_contacts() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.extract_all_contacts", false]], "extract_all_contacts() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.extract_all_contacts", false]], "extract_all_contacts() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.extract_all_contacts", false]], "extract_all_contacts() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.extract_all_contacts", false]], "extract_all_contacts() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.extract_all_contacts", false]], "extract_all_contacts() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.extract_all_contacts", false]], "extract_all_contacts() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.extract_all_contacts", false]], "extract_basal_contacts() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.extract_basal_contacts", false]], "extract_basal_contacts() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.extract_basal_contacts", false]], "extract_basal_contacts() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.extract_basal_contacts", false]], "extract_basal_contacts() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.extract_basal_contacts", false]], "extract_basal_contacts() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.extract_basal_contacts", false]], "extract_basal_contacts() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.extract_basal_contacts", false]], "extract_basal_contacts() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.extract_basal_contacts", false]], "extract_geology_contacts() (map2loop.project method)": [[6, "map2loop.Project.extract_geology_contacts", false]], "extract_geology_contacts() (map2loop.project.project method)": [[63, "map2loop.project.Project.extract_geology_contacts", false]], "f_contiguous (map2loop.interpolators.ndarray attribute)": [[32, "map2loop.interpolators.ndarray.F_CONTIGUOUS", false]], "farray (map2loop.interpolators.ndarray attribute)": [[32, "map2loop.interpolators.ndarray.FARRAY", false]], "fault_config (map2loop.config.config attribute)": [[12, "map2loop.config.Config.fault_config", false]], "fault_config (map2loop.mapdata.config attribute)": [[46, "map2loop.mapdata.Config.fault_config", false]], "fault_fault_relationships (map2loop.map2model_wrapper.map2modelwrapper attribute)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.fault_fault_relationships", false]], "fault_fault_relationships (map2loop.project.map2modelwrapper attribute)": [[61, "map2loop.project.Map2ModelWrapper.fault_fault_relationships", false]], "faultcolumns (map2loop.deformation_history.deformationhistory attribute)": [[14, "map2loop.deformation_history.DeformationHistory.faultColumns", false]], "faultcolumns (map2loop.project.deformationhistory attribute)": [[57, "map2loop.project.DeformationHistory.faultColumns", false]], "faultorientation (class in map2loop.fault_orientation)": [[17, "map2loop.fault_orientation.FaultOrientation", false]], "faultorientation (class in map2loop.project)": [[59, "map2loop.project.FaultOrientation", false]], "faultorientationnearest (class in map2loop.fault_orientation)": [[18, "map2loop.fault_orientation.FaultOrientationNearest", false]], "faultorientationnearest (class in map2loop.project)": [[60, "map2loop.project.FaultOrientationNearest", false]], "faults (map2loop.deformation_history.deformationhistory attribute)": [[14, "map2loop.deformation_history.DeformationHistory.faults", false]], "faults (map2loop.project.deformationhistory attribute)": [[57, "map2loop.project.DeformationHistory.faults", false]], "feature_names_in_ (map2loop.interpolators.dbscan attribute)": [[24, "map2loop.interpolators.DBSCAN.feature_names_in_", false]], "filenames (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.filenames", false]], "filenames (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.filenames", false]], "filenames (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.filenames", false]], "filenames (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.filenames", false]], "filenames (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.filenames", false]], "filenames (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.filenames", false]], "filenames (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.filenames", false]], "fileno() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.fileno", false]], "fileno() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.fileno", false]], "fill() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.fill", false]], "find_segment_strike_from_pt() (in module map2loop.thickness_calculator)": [[112, "map2loop.thickness_calculator.find_segment_strike_from_pt", false]], "find_segment_strike_from_pt() (in module map2loop.utils)": [[125, "map2loop.utils.find_segment_strike_from_pt", false]], "findfault() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.findfault", false]], "findfault() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.findfault", false]], "findfold() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.findfold", false]], "findfold() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.findfold", false]], "findlithologyunit() (map2loop.project.stratigraphiccolumn method)": [[72, "map2loop.project.StratigraphicColumn.findLithologyUnit", false]], "findlithologyunit() (map2loop.stratigraphic_column.stratigraphiccolumn method)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.findLithologyUnit", false]], "findstratigraphicunit() (map2loop.project.stratigraphiccolumn method)": [[72, "map2loop.project.StratigraphicColumn.findStratigraphicUnit", false]], "findstratigraphicunit() (map2loop.stratigraphic_column.stratigraphiccolumn method)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.findStratigraphicUnit", false]], "fit() (map2loop.interpolators.dbscan method)": [[24, "map2loop.interpolators.DBSCAN.fit", false]], "fit_predict() (map2loop.interpolators.dbscan method)": [[24, "map2loop.interpolators.DBSCAN.fit_predict", false]], "flags (map2loop.interpolators.ndarray attribute)": [[32, "id5", false], [32, "map2loop.interpolators.ndarray.flags", false]], "flat (map2loop.interpolators.ndarray attribute)": [[32, "id6", false], [32, "map2loop.interpolators.ndarray.flat", false]], "flatten() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.flatten", false]], "flush() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.flush", false]], "flush() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.flush", false]], "fnc (map2loop.interpolators.ndarray attribute)": [[32, "map2loop.interpolators.ndarray.FNC", false]], "fold_config (map2loop.config.config attribute)": [[12, "map2loop.config.Config.fold_config", false]], "fold_config (map2loop.mapdata.config attribute)": [[46, "map2loop.mapdata.Config.fold_config", false]], "foldcolumns (map2loop.deformation_history.deformationhistory attribute)": [[14, "map2loop.deformation_history.DeformationHistory.foldColumns", false]], "foldcolumns (map2loop.project.deformationhistory attribute)": [[57, "map2loop.project.DeformationHistory.foldColumns", false]], "folds (map2loop.deformation_history.deformationhistory attribute)": [[14, "map2loop.deformation_history.DeformationHistory.folds", false]], "folds (map2loop.project.deformationhistory attribute)": [[57, "map2loop.project.DeformationHistory.folds", false]], "forc (map2loop.interpolators.ndarray attribute)": [[32, "map2loop.interpolators.ndarray.FORC", false]], "from_bytes() (map2loop.m2l_enums.datastate method)": [[35, "map2loop.m2l_enums.Datastate.from_bytes", false]], "from_bytes() (map2loop.m2l_enums.datatype method)": [[36, "map2loop.m2l_enums.Datatype.from_bytes", false]], "from_bytes() (map2loop.m2l_enums.errorstate method)": [[37, "map2loop.m2l_enums.ErrorState.from_bytes", false]], "from_bytes() (map2loop.m2l_enums.intenum method)": [[38, "map2loop.m2l_enums.IntEnum.from_bytes", false]], "from_bytes() (map2loop.m2l_enums.verboselevel method)": [[39, "map2loop.m2l_enums.VerboseLevel.from_bytes", false]], "from_bytes() (map2loop.map2model_wrapper.verboselevel method)": [[42, "map2loop.map2model_wrapper.VerboseLevel.from_bytes", false]], "from_bytes() (map2loop.mapdata.datastate method)": [[47, "map2loop.mapdata.Datastate.from_bytes", false]], "from_bytes() (map2loop.mapdata.datatype method)": [[48, "map2loop.mapdata.Datatype.from_bytes", false]], "from_bytes() (map2loop.mapdata.verboselevel method)": [[51, "map2loop.mapdata.VerboseLevel.from_bytes", false]], "from_bytes() (map2loop.project.datatype method)": [[56, "map2loop.project.Datatype.from_bytes", false]], "from_bytes() (map2loop.project.errorstate method)": [[58, "map2loop.project.ErrorState.from_bytes", false]], "from_bytes() (map2loop.project.verboselevel method)": [[77, "map2loop.project.VerboseLevel.from_bytes", false]], "from_bytes() (map2loop.sampler.datatype method)": [[81, "map2loop.sampler.Datatype.from_bytes", false]], "from_bytes() (map2loop.thickness_calculator.datatype method)": [[102, "map2loop.thickness_calculator.Datatype.from_bytes", false]], "function (map2loop.interpolators.rbf attribute)": [[29, "map2loop.interpolators.Rbf.function", false]], "generate_grid() (in module map2loop.interpolators)": [[31, "map2loop.interpolators.generate_grid", false]], "generate_grid() (in module map2loop.utils)": [[126, "map2loop.utils.generate_grid", false]], "generate_random_hex_colors() (in module map2loop.mapdata)": [[53, "map2loop.mapdata.generate_random_hex_colors", false]], "generate_random_hex_colors() (in module map2loop.utils)": [[127, "map2loop.utils.generate_random_hex_colors", false]], "geology_config (map2loop.config.config attribute)": [[12, "map2loop.config.Config.geology_config", false]], "geology_config (map2loop.mapdata.config attribute)": [[46, "map2loop.mapdata.Config.geology_config", false]], "get_bounding_box() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.get_bounding_box", false]], "get_bounding_box() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.get_bounding_box", false]], "get_bounding_box() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.get_bounding_box", false]], "get_bounding_box() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.get_bounding_box", false]], "get_bounding_box() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.get_bounding_box", false]], "get_bounding_box() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.get_bounding_box", false]], "get_bounding_box() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.get_bounding_box", false]], "get_colour_filename() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.get_colour_filename", false]], "get_colour_filename() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.get_colour_filename", false]], "get_colour_filename() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.get_colour_filename", false]], "get_colour_filename() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.get_colour_filename", false]], "get_colour_filename() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.get_colour_filename", false]], "get_colour_filename() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.get_colour_filename", false]], "get_colour_filename() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.get_colour_filename", false]], "get_config_filename() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.get_config_filename", false]], "get_config_filename() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.get_config_filename", false]], "get_config_filename() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.get_config_filename", false]], "get_config_filename() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.get_config_filename", false]], "get_config_filename() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.get_config_filename", false]], "get_config_filename() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.get_config_filename", false]], "get_config_filename() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.get_config_filename", false]], "get_empty_dataframe() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.get_empty_dataframe", false]], "get_empty_dataframe() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.get_empty_dataframe", false]], "get_empty_dataframe() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.get_empty_dataframe", false]], "get_empty_dataframe() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.get_empty_dataframe", false]], "get_empty_dataframe() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.get_empty_dataframe", false]], "get_empty_dataframe() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.get_empty_dataframe", false]], "get_empty_dataframe() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.get_empty_dataframe", false]], "get_fault_fault_relationships() (map2loop.map2model_wrapper.map2modelwrapper method)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.get_fault_fault_relationships", false]], "get_fault_fault_relationships() (map2loop.project.map2modelwrapper method)": [[61, "map2loop.project.Map2ModelWrapper.get_fault_fault_relationships", false]], "get_fault_orientation() (map2loop.project method)": [[6, "map2loop.Project.get_fault_orientation", false]], "get_fault_orientation() (map2loop.project.project method)": [[63, "map2loop.project.Project.get_fault_orientation", false]], "get_fault_relationships_with_ids() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.get_fault_relationships_with_ids", false]], "get_fault_relationships_with_ids() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.get_fault_relationships_with_ids", false]], "get_faults_for_export() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.get_faults_for_export", false]], "get_faults_for_export() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.get_faults_for_export", false]], "get_filename() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.get_filename", false]], "get_filename() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.get_filename", false]], "get_filename() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.get_filename", false]], "get_filename() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.get_filename", false]], "get_filename() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.get_filename", false]], "get_filename() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.get_filename", false]], "get_filename() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.get_filename", false]], "get_ignore_codes() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.get_ignore_codes", false]], "get_ignore_codes() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.get_ignore_codes", false]], "get_ignore_codes() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.get_ignore_codes", false]], "get_ignore_codes() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.get_ignore_codes", false]], "get_ignore_codes() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.get_ignore_codes", false]], "get_ignore_codes() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.get_ignore_codes", false]], "get_ignore_codes() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.get_ignore_codes", false]], "get_map_data() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.get_map_data", false]], "get_map_data() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.get_map_data", false]], "get_map_data() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.get_map_data", false]], "get_map_data() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.get_map_data", false]], "get_map_data() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.get_map_data", false]], "get_map_data() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.get_map_data", false]], "get_map_data() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.get_map_data", false]], "get_metadata_routing() (map2loop.interpolators.dbscan method)": [[24, "map2loop.interpolators.DBSCAN.get_metadata_routing", false]], "get_minimum_fault_length() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.get_minimum_fault_length", false]], "get_minimum_fault_length() (map2loop.project method)": [[6, "map2loop.Project.get_minimum_fault_length", false]], "get_minimum_fault_length() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.get_minimum_fault_length", false]], "get_minimum_fault_length() (map2loop.project.project method)": [[63, "map2loop.project.Project.get_minimum_fault_length", false]], "get_params() (map2loop.interpolators.dbscan method)": [[24, "map2loop.interpolators.DBSCAN.get_params", false]], "get_raw_map_data() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.get_raw_map_data", false]], "get_raw_map_data() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.get_raw_map_data", false]], "get_raw_map_data() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.get_raw_map_data", false]], "get_raw_map_data() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.get_raw_map_data", false]], "get_raw_map_data() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.get_raw_map_data", false]], "get_raw_map_data() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.get_raw_map_data", false]], "get_raw_map_data() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.get_raw_map_data", false]], "get_sampler() (map2loop.project method)": [[6, "map2loop.Project.get_sampler", false]], "get_sampler() (map2loop.project.project method)": [[63, "map2loop.project.Project.get_sampler", false]], "get_sorted_units() (map2loop.map2model_wrapper.map2modelwrapper method)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.get_sorted_units", false]], "get_sorted_units() (map2loop.project.map2modelwrapper method)": [[61, "map2loop.project.Map2ModelWrapper.get_sorted_units", false]], "get_sorter() (map2loop.project method)": [[6, "map2loop.Project.get_sorter", false]], "get_sorter() (map2loop.project.project method)": [[63, "map2loop.project.Project.get_sorter", false]], "get_thickness_calculator() (map2loop.project method)": [[6, "map2loop.Project.get_thickness_calculator", false]], "get_thickness_calculator() (map2loop.project.project method)": [[63, "map2loop.project.Project.get_thickness_calculator", false]], "get_throw_calculator() (map2loop.project method)": [[6, "map2loop.Project.get_throw_calculator", false]], "get_throw_calculator() (map2loop.project.project method)": [[63, "map2loop.project.Project.get_throw_calculator", false]], "get_unit_fault_relationships() (map2loop.map2model_wrapper.map2modelwrapper method)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.get_unit_fault_relationships", false]], "get_unit_fault_relationships() (map2loop.project.map2modelwrapper method)": [[61, "map2loop.project.Map2ModelWrapper.get_unit_fault_relationships", false]], "get_unit_unit_relationships() (map2loop.map2model_wrapper.map2modelwrapper method)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.get_unit_unit_relationships", false]], "get_unit_unit_relationships() (map2loop.project.map2modelwrapper method)": [[61, "map2loop.project.Map2ModelWrapper.get_unit_unit_relationships", false]], "get_value_from_raster() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.get_value_from_raster", false]], "get_value_from_raster() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.get_value_from_raster", false]], "get_value_from_raster() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.get_value_from_raster", false]], "get_value_from_raster() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.get_value_from_raster", false]], "get_value_from_raster() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.get_value_from_raster", false]], "get_value_from_raster() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.get_value_from_raster", false]], "get_value_from_raster() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.get_value_from_raster", false]], "get_value_from_raster_df() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.get_value_from_raster_df", false]], "get_value_from_raster_df() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.get_value_from_raster_df", false]], "get_value_from_raster_df() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.get_value_from_raster_df", false]], "get_value_from_raster_df() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.get_value_from_raster_df", false]], "get_value_from_raster_df() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.get_value_from_raster_df", false]], "get_value_from_raster_df() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.get_value_from_raster_df", false]], "get_value_from_raster_df() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.get_value_from_raster_df", false]], "get_working_projection() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.get_working_projection", false]], "get_working_projection() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.get_working_projection", false]], "get_working_projection() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.get_working_projection", false]], "get_working_projection() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.get_working_projection", false]], "get_working_projection() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.get_working_projection", false]], "get_working_projection() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.get_working_projection", false]], "get_working_projection() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.get_working_projection", false]], "getbuffer() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.getbuffer", false]], "getfield() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.getfield", false]], "getvalue() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.getvalue", false]], "groups (map2loop.project.stratigraphiccolumn attribute)": [[72, "map2loop.project.StratigraphicColumn.groups", false]], "groups (map2loop.stratigraphic_column.stratigraphiccolumn attribute)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.groups", false]], "gzipfile (class in map2loop.mapdata)": [[49, "map2loop.mapdata.GzipFile", false]], "hex_to_rgb() (in module map2loop.project)": [[78, "map2loop.project.hex_to_rgb", false]], "hex_to_rgb() (in module map2loop.utils)": [[128, "map2loop.utils.hex_to_rgb", false]], "history (map2loop.deformation_history.deformationhistory attribute)": [[14, "map2loop.deformation_history.DeformationHistory.history", false]], "history (map2loop.project.deformationhistory attribute)": [[57, "map2loop.project.DeformationHistory.history", false]], "imag (map2loop.interpolators.ndarray attribute)": [[32, "id7", false], [32, "map2loop.interpolators.ndarray.imag", false]], "imag (map2loop.m2l_enums.datastate attribute)": [[35, "map2loop.m2l_enums.Datastate.imag", false]], "imag (map2loop.m2l_enums.datatype attribute)": [[36, "map2loop.m2l_enums.Datatype.imag", false]], "imag (map2loop.m2l_enums.errorstate attribute)": [[37, "map2loop.m2l_enums.ErrorState.imag", false]], "imag (map2loop.m2l_enums.intenum attribute)": [[38, "map2loop.m2l_enums.IntEnum.imag", false]], "imag (map2loop.m2l_enums.verboselevel attribute)": [[39, "map2loop.m2l_enums.VerboseLevel.imag", false]], "imag (map2loop.map2model_wrapper.verboselevel attribute)": [[42, "map2loop.map2model_wrapper.VerboseLevel.imag", false]], "imag (map2loop.mapdata.datastate attribute)": [[47, "map2loop.mapdata.Datastate.imag", false]], "imag (map2loop.mapdata.datatype attribute)": [[48, "map2loop.mapdata.Datatype.imag", false]], "imag (map2loop.mapdata.verboselevel attribute)": [[51, "map2loop.mapdata.VerboseLevel.imag", false]], "imag (map2loop.project.datatype attribute)": [[56, "map2loop.project.Datatype.imag", false]], "imag (map2loop.project.errorstate attribute)": [[58, "map2loop.project.ErrorState.imag", false]], "imag (map2loop.project.verboselevel attribute)": [[77, "map2loop.project.VerboseLevel.imag", false]], "imag (map2loop.sampler.datatype attribute)": [[81, "map2loop.sampler.Datatype.imag", false]], "imag (map2loop.thickness_calculator.datatype attribute)": [[102, "map2loop.thickness_calculator.Datatype.imag", false]], "intenum (class in map2loop.m2l_enums)": [[38, "map2loop.m2l_enums.IntEnum", false]], "interpolate() (map2loop.interpolators.dipdipdirectioninterpolator method)": [[25, "map2loop.interpolators.DipDipDirectionInterpolator.interpolate", false]], "interpolate() (map2loop.interpolators.interpolator method)": [[26, "map2loop.interpolators.Interpolator.interpolate", false]], "interpolate() (map2loop.interpolators.normalvectorinterpolator method)": [[28, "map2loop.interpolators.NormalVectorInterpolator.interpolate", false]], "interpolate() (map2loop.thickness_calculator.dipdipdirectioninterpolator method)": [[103, "map2loop.thickness_calculator.DipDipDirectionInterpolator.interpolate", false]], "interpolatedstructure (class in map2loop.thickness_calculator)": [[104, "map2loop.thickness_calculator.InterpolatedStructure", false]], "interpolator (class in map2loop.interpolators)": [[26, "map2loop.interpolators.Interpolator", false]], "interpolator_label (map2loop.interpolators.normalvectorinterpolator attribute)": [[28, "map2loop.interpolators.NormalVectorInterpolator.interpolator_label", false]], "is_integer() (map2loop.m2l_enums.datastate method)": [[35, "map2loop.m2l_enums.Datastate.is_integer", false]], "is_integer() (map2loop.m2l_enums.datatype method)": [[36, "map2loop.m2l_enums.Datatype.is_integer", false]], "is_integer() (map2loop.m2l_enums.errorstate method)": [[37, "map2loop.m2l_enums.ErrorState.is_integer", false]], "is_integer() (map2loop.m2l_enums.intenum method)": [[38, "map2loop.m2l_enums.IntEnum.is_integer", false]], "is_integer() (map2loop.m2l_enums.verboselevel method)": [[39, "map2loop.m2l_enums.VerboseLevel.is_integer", false]], "is_integer() (map2loop.map2model_wrapper.verboselevel method)": [[42, "map2loop.map2model_wrapper.VerboseLevel.is_integer", false]], "is_integer() (map2loop.mapdata.datastate method)": [[47, "map2loop.mapdata.Datastate.is_integer", false]], "is_integer() (map2loop.mapdata.datatype method)": [[48, "map2loop.mapdata.Datatype.is_integer", false]], "is_integer() (map2loop.mapdata.verboselevel method)": [[51, "map2loop.mapdata.VerboseLevel.is_integer", false]], "is_integer() (map2loop.project.datatype method)": [[56, "map2loop.project.Datatype.is_integer", false]], "is_integer() (map2loop.project.errorstate method)": [[58, "map2loop.project.ErrorState.is_integer", false]], "is_integer() (map2loop.project.verboselevel method)": [[77, "map2loop.project.VerboseLevel.is_integer", false]], "is_integer() (map2loop.sampler.datatype method)": [[81, "map2loop.sampler.Datatype.is_integer", false]], "is_integer() (map2loop.thickness_calculator.datatype method)": [[102, "map2loop.thickness_calculator.Datatype.is_integer", false]], "isatty() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.isatty", false]], "isatty() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.isatty", false]], "item() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.item", false]], "itemset() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.itemset", false]], "itemsize (map2loop.interpolators.ndarray attribute)": [[32, "id8", false], [32, "map2loop.interpolators.ndarray.itemsize", false]], "labels_ (map2loop.interpolators.dbscan attribute)": [[24, "map2loop.interpolators.DBSCAN.labels_", false]], "linearndinterpolator (class in map2loop.interpolators)": [[27, "map2loop.interpolators.LinearNDInterpolator", false]], "lithologyunitcolumns (map2loop.project.stratigraphiccolumn attribute)": [[72, "map2loop.project.StratigraphicColumn.lithologyUnitColumns", false]], "lithologyunitcolumns (map2loop.stratigraphic_column.stratigraphiccolumn attribute)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.lithologyUnitColumns", false]], "lithologyunits (map2loop.project.stratigraphiccolumn attribute)": [[72, "map2loop.project.StratigraphicColumn.lithologyUnits", false]], "lithologyunits (map2loop.stratigraphic_column.stratigraphiccolumn attribute)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.lithologyUnits", false]], "load_all_map_data() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.load_all_map_data", false]], "load_all_map_data() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.load_all_map_data", false]], "load_all_map_data() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.load_all_map_data", false]], "load_all_map_data() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.load_all_map_data", false]], "load_all_map_data() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.load_all_map_data", false]], "load_all_map_data() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.load_all_map_data", false]], "load_all_map_data() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.load_all_map_data", false]], "load_clut() (in module map2loop.aus_state_urls)": [[9, "map2loop.aus_state_urls.load_clut", false]], "load_config() (in module map2loop.aus_state_urls)": [[10, "map2loop.aus_state_urls.load_config", false]], "load_map_data() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.load_map_data", false]], "load_map_data() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.load_map_data", false]], "load_map_data() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.load_map_data", false]], "load_map_data() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.load_map_data", false]], "load_map_data() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.load_map_data", false]], "load_map_data() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.load_map_data", false]], "load_map_data() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.load_map_data", false]], "load_raster_map_data() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.load_raster_map_data", false]], "load_raster_map_data() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.load_raster_map_data", false]], "load_raster_map_data() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.load_raster_map_data", false]], "load_raster_map_data() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.load_raster_map_data", false]], "load_raster_map_data() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.load_raster_map_data", false]], "load_raster_map_data() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.load_raster_map_data", false]], "load_raster_map_data() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.load_raster_map_data", false]], "map2loop": [[5, "module-map2loop", false]], "map2loop.aus_state_urls": [[7, "module-map2loop.aus_state_urls", false]], "map2loop.config": [[11, "module-map2loop.config", false]], "map2loop.deformation_history": [[13, "module-map2loop.deformation_history", false]], "map2loop.fault_orientation": [[15, "module-map2loop.fault_orientation", false]], "map2loop.interpolators": [[21, "module-map2loop.interpolators", false]], "map2loop.m2l_enums": [[34, "module-map2loop.m2l_enums", false]], "map2loop.map2model_wrapper": [[40, "module-map2loop.map2model_wrapper", false]], "map2loop.mapdata": [[43, "module-map2loop.mapdata", false]], "map2loop.project": [[55, "module-map2loop.project", false]], "map2loop.sampler": [[79, "module-map2loop.sampler", false]], "map2loop.sorter": [[87, "module-map2loop.sorter", false]], "map2loop.stratigraphic_column": [[98, "module-map2loop.stratigraphic_column", false]], "map2loop.thickness_calculator": [[100, "module-map2loop.thickness_calculator", false]], "map2loop.throw_calculator": [[116, "module-map2loop.throw_calculator", false]], "map2loop.utils": [[122, "module-map2loop.utils", false]], "map2loop.version": [[133, "module-map2loop.version", false]], "map2modelwrapper (class in map2loop.map2model_wrapper)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper", false]], "map2modelwrapper (class in map2loop.project)": [[61, "map2loop.project.Map2ModelWrapper", false]], "map_data (map2loop.map2model_wrapper.map2modelwrapper attribute)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.map_data", false]], "map_data (map2loop.project.map2modelwrapper attribute)": [[61, "map2loop.project.Map2ModelWrapper.map_data", false]], "mapdata (class in map2loop.fault_orientation)": [[19, "map2loop.fault_orientation.MapData", false]], "mapdata (class in map2loop.mapdata)": [[50, "map2loop.mapdata.MapData", false]], "mapdata (class in map2loop.project)": [[62, "map2loop.project.MapData", false]], "mapdata (class in map2loop.sampler)": [[82, "map2loop.sampler.MapData", false]], "mapdata (class in map2loop.sorter)": [[89, "map2loop.sorter.MapData", false]], "mapdata (class in map2loop.thickness_calculator)": [[105, "map2loop.thickness_calculator.MapData", false]], "mapdata (class in map2loop.throw_calculator)": [[118, "map2loop.throw_calculator.MapData", false]], "max() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.max", false]], "mean() (in module map2loop.thickness_calculator)": [[113, "map2loop.thickness_calculator.mean", false]], "mean() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.mean", false]], "min() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.min", false]], "minimum_fault_length_to_export (map2loop.deformation_history.deformationhistory attribute)": [[14, "map2loop.deformation_history.DeformationHistory.minimum_fault_length_to_export", false]], "minimum_fault_length_to_export (map2loop.project.deformationhistory attribute)": [[57, "map2loop.project.DeformationHistory.minimum_fault_length_to_export", false]], "mode (map2loop.interpolators.rbf attribute)": [[29, "map2loop.interpolators.Rbf.mode", false]], "module": [[5, "module-map2loop", false], [7, "module-map2loop.aus_state_urls", false], [11, "module-map2loop.config", false], [13, "module-map2loop.deformation_history", false], [15, "module-map2loop.fault_orientation", false], [21, "module-map2loop.interpolators", false], [34, "module-map2loop.m2l_enums", false], [40, "module-map2loop.map2model_wrapper", false], [43, "module-map2loop.mapdata", false], [55, "module-map2loop.project", false], [79, "module-map2loop.sampler", false], [87, "module-map2loop.sorter", false], [98, "module-map2loop.stratigraphic_column", false], [100, "module-map2loop.thickness_calculator", false], [116, "module-map2loop.throw_calculator", false], [122, "module-map2loop.utils", false], [133, "module-map2loop.version", false]], "mtime (map2loop.mapdata.gzipfile property)": [[49, "map2loop.mapdata.GzipFile.mtime", false]], "multiline_to_line() (in module map2loop.thickness_calculator)": [[114, "map2loop.thickness_calculator.multiline_to_line", false]], "multiline_to_line() (in module map2loop.utils)": [[129, "map2loop.utils.multiline_to_line", false]], "n (map2loop.interpolators.rbf attribute)": [[29, "map2loop.interpolators.Rbf.N", false]], "n_features_in_ (map2loop.interpolators.dbscan attribute)": [[24, "map2loop.interpolators.DBSCAN.n_features_in_", false]], "nbytes (map2loop.interpolators.ndarray attribute)": [[32, "id9", false], [32, "map2loop.interpolators.ndarray.nbytes", false]], "ndarray (class in map2loop.interpolators)": [[32, "map2loop.interpolators.ndarray", false]], "ndim (map2loop.interpolators.ndarray attribute)": [[32, "id10", false], [32, "map2loop.interpolators.ndarray.ndim", false]], "newbyteorder() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.newbyteorder", false]], "nodes (map2loop.interpolators.rbf attribute)": [[29, "map2loop.interpolators.Rbf.nodes", false]], "nonzero() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.nonzero", false]], "norm (map2loop.interpolators.rbf attribute)": [[29, "map2loop.interpolators.Rbf.norm", false]], "normal_vector_to_dipdirection_dip() (in module map2loop.utils)": [[130, "map2loop.utils.normal_vector_to_dipdirection_dip", false]], "normalvectorinterpolator (class in map2loop.interpolators)": [[28, "map2loop.interpolators.NormalVectorInterpolator", false]], "numerator (map2loop.m2l_enums.datastate attribute)": [[35, "map2loop.m2l_enums.Datastate.numerator", false]], "numerator (map2loop.m2l_enums.datatype attribute)": [[36, "map2loop.m2l_enums.Datatype.numerator", false]], "numerator (map2loop.m2l_enums.errorstate attribute)": [[37, "map2loop.m2l_enums.ErrorState.numerator", false]], "numerator (map2loop.m2l_enums.intenum attribute)": [[38, "map2loop.m2l_enums.IntEnum.numerator", false]], "numerator (map2loop.m2l_enums.verboselevel attribute)": [[39, "map2loop.m2l_enums.VerboseLevel.numerator", false]], "numerator (map2loop.map2model_wrapper.verboselevel attribute)": [[42, "map2loop.map2model_wrapper.VerboseLevel.numerator", false]], "numerator (map2loop.mapdata.datastate attribute)": [[47, "map2loop.mapdata.Datastate.numerator", false]], "numerator (map2loop.mapdata.datatype attribute)": [[48, "map2loop.mapdata.Datatype.numerator", false]], "numerator (map2loop.mapdata.verboselevel attribute)": [[51, "map2loop.mapdata.VerboseLevel.numerator", false]], "numerator (map2loop.project.datatype attribute)": [[56, "map2loop.project.Datatype.numerator", false]], "numerator (map2loop.project.errorstate attribute)": [[58, "map2loop.project.ErrorState.numerator", false]], "numerator (map2loop.project.verboselevel attribute)": [[77, "map2loop.project.VerboseLevel.numerator", false]], "numerator (map2loop.sampler.datatype attribute)": [[81, "map2loop.sampler.Datatype.numerator", false]], "numerator (map2loop.thickness_calculator.datatype attribute)": [[102, "map2loop.thickness_calculator.Datatype.numerator", false]], "open_http_query() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.open_http_query", false]], "open_http_query() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.open_http_query", false]], "open_http_query() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.open_http_query", false]], "open_http_query() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.open_http_query", false]], "open_http_query() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.open_http_query", false]], "open_http_query() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.open_http_query", false]], "open_http_query() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.open_http_query", false]], "owndata (map2loop.interpolators.ndarray attribute)": [[32, "map2loop.interpolators.ndarray.OWNDATA", false]], "parse_fault_map() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.parse_fault_map", false]], "parse_fault_map() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.parse_fault_map", false]], "parse_fault_map() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.parse_fault_map", false]], "parse_fault_map() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.parse_fault_map", false]], "parse_fault_map() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.parse_fault_map", false]], "parse_fault_map() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.parse_fault_map", false]], "parse_fault_map() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.parse_fault_map", false]], "parse_fault_orientations() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.parse_fault_orientations", false]], "parse_fault_orientations() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.parse_fault_orientations", false]], "parse_fault_orientations() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.parse_fault_orientations", false]], "parse_fault_orientations() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.parse_fault_orientations", false]], "parse_fault_orientations() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.parse_fault_orientations", false]], "parse_fault_orientations() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.parse_fault_orientations", false]], "parse_fault_orientations() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.parse_fault_orientations", false]], "parse_fold_map() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.parse_fold_map", false]], "parse_fold_map() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.parse_fold_map", false]], "parse_fold_map() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.parse_fold_map", false]], "parse_fold_map() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.parse_fold_map", false]], "parse_fold_map() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.parse_fold_map", false]], "parse_fold_map() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.parse_fold_map", false]], "parse_fold_map() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.parse_fold_map", false]], "parse_geology_map() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.parse_geology_map", false]], "parse_geology_map() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.parse_geology_map", false]], "parse_geology_map() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.parse_geology_map", false]], "parse_geology_map() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.parse_geology_map", false]], "parse_geology_map() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.parse_geology_map", false]], "parse_geology_map() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.parse_geology_map", false]], "parse_geology_map() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.parse_geology_map", false]], "parse_structure_map() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.parse_structure_map", false]], "parse_structure_map() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.parse_structure_map", false]], "parse_structure_map() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.parse_structure_map", false]], "parse_structure_map() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.parse_structure_map", false]], "parse_structure_map() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.parse_structure_map", false]], "parse_structure_map() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.parse_structure_map", false]], "parse_structure_map() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.parse_structure_map", false]], "partition() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.partition", false]], "populate() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.populate", false]], "populate() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.populate", false]], "populate() (map2loop.project.stratigraphiccolumn method)": [[72, "map2loop.project.StratigraphicColumn.populate", false]], "populate() (map2loop.stratigraphic_column.stratigraphiccolumn method)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.populate", false]], "prod() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.prod", false]], "project (class in map2loop)": [[6, "map2loop.Project", false]], "project (class in map2loop.project)": [[63, "map2loop.project.Project", false]], "ptp() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.ptp", false]], "put() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.put", false]], "ravel() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.ravel", false]], "raw_data (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.raw_data", false]], "raw_data (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.raw_data", false]], "raw_data (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.raw_data", false]], "raw_data (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.raw_data", false]], "raw_data (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.raw_data", false]], "raw_data (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.raw_data", false]], "raw_data (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.raw_data", false]], "rbf (class in map2loop.interpolators)": [[29, "map2loop.interpolators.Rbf", false]], "read() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.read", false]], "read() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.read", false]], "read1() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.read1", false]], "read1() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.read1", false]], "readable() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.readable", false]], "readable() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.readable", false]], "readinto() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.readinto", false]], "readline() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.readline", false]], "readline() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.readline", false]], "readlines() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.readlines", false]], "readlines() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.readlines", false]], "real (map2loop.interpolators.ndarray attribute)": [[32, "id11", false], [32, "map2loop.interpolators.ndarray.real", false]], "real (map2loop.m2l_enums.datastate attribute)": [[35, "map2loop.m2l_enums.Datastate.real", false]], "real (map2loop.m2l_enums.datatype attribute)": [[36, "map2loop.m2l_enums.Datatype.real", false]], "real (map2loop.m2l_enums.errorstate attribute)": [[37, "map2loop.m2l_enums.ErrorState.real", false]], "real (map2loop.m2l_enums.intenum attribute)": [[38, "map2loop.m2l_enums.IntEnum.real", false]], "real (map2loop.m2l_enums.verboselevel attribute)": [[39, "map2loop.m2l_enums.VerboseLevel.real", false]], "real (map2loop.map2model_wrapper.verboselevel attribute)": [[42, "map2loop.map2model_wrapper.VerboseLevel.real", false]], "real (map2loop.mapdata.datastate attribute)": [[47, "map2loop.mapdata.Datastate.real", false]], "real (map2loop.mapdata.datatype attribute)": [[48, "map2loop.mapdata.Datatype.real", false]], "real (map2loop.mapdata.verboselevel attribute)": [[51, "map2loop.mapdata.VerboseLevel.real", false]], "real (map2loop.project.datatype attribute)": [[56, "map2loop.project.Datatype.real", false]], "real (map2loop.project.errorstate attribute)": [[58, "map2loop.project.ErrorState.real", false]], "real (map2loop.project.verboselevel attribute)": [[77, "map2loop.project.VerboseLevel.real", false]], "real (map2loop.sampler.datatype attribute)": [[81, "map2loop.sampler.Datatype.real", false]], "real (map2loop.thickness_calculator.datatype attribute)": [[102, "map2loop.thickness_calculator.Datatype.real", false]], "rebuild_sampled_basal_contacts() (in module map2loop.thickness_calculator)": [[115, "map2loop.thickness_calculator.rebuild_sampled_basal_contacts", false]], "rebuild_sampled_basal_contacts() (in module map2loop.utils)": [[131, "map2loop.utils.rebuild_sampled_basal_contacts", false]], "recreate_bounding_box_str() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.recreate_bounding_box_str", false]], "recreate_bounding_box_str() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.recreate_bounding_box_str", false]], "recreate_bounding_box_str() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.recreate_bounding_box_str", false]], "recreate_bounding_box_str() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.recreate_bounding_box_str", false]], "recreate_bounding_box_str() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.recreate_bounding_box_str", false]], "recreate_bounding_box_str() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.recreate_bounding_box_str", false]], "recreate_bounding_box_str() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.recreate_bounding_box_str", false]], "removefaultbyeventid() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.removeFaultByEventId", false]], "removefaultbyeventid() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.removeFaultByEventId", false]], "removefaultbyname() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.removeFaultByName", false]], "removefaultbyname() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.removeFaultByName", false]], "repeat() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.repeat", false]], "reset() (map2loop.map2model_wrapper.map2modelwrapper method)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.reset", false]], "reset() (map2loop.project.map2modelwrapper method)": [[61, "map2loop.project.Map2ModelWrapper.reset", false]], "reshape() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.reshape", false]], "resize() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.resize", false]], "rewind() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.rewind", false]], "round() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.round", false]], "run() (map2loop.map2model_wrapper.map2modelwrapper method)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.run", false]], "run() (map2loop.project.map2modelwrapper method)": [[61, "map2loop.project.Map2ModelWrapper.run", false]], "run_all() (map2loop.project method)": [[6, "map2loop.Project.run_all", false]], "run_all() (map2loop.project.project method)": [[63, "map2loop.project.Project.run_all", false]], "sample() (map2loop.project.sampler method)": [[64, "map2loop.project.Sampler.sample", false]], "sample() (map2loop.project.samplerdecimator method)": [[65, "map2loop.project.SamplerDecimator.sample", false]], "sample() (map2loop.project.samplerspacing method)": [[66, "map2loop.project.SamplerSpacing.sample", false]], "sample() (map2loop.sampler.sampler method)": [[83, "map2loop.sampler.Sampler.sample", false]], "sample() (map2loop.sampler.samplerdecimator method)": [[84, "map2loop.sampler.SamplerDecimator.sample", false]], "sample() (map2loop.sampler.samplerspacing method)": [[85, "map2loop.sampler.SamplerSpacing.sample", false]], "sample_map_data() (map2loop.project method)": [[6, "map2loop.Project.sample_map_data", false]], "sample_map_data() (map2loop.project.project method)": [[63, "map2loop.project.Project.sample_map_data", false]], "sampler (class in map2loop.project)": [[64, "map2loop.project.Sampler", false]], "sampler (class in map2loop.sampler)": [[83, "map2loop.sampler.Sampler", false]], "samplerdecimator (class in map2loop.project)": [[65, "map2loop.project.SamplerDecimator", false]], "samplerdecimator (class in map2loop.sampler)": [[84, "map2loop.sampler.SamplerDecimator", false]], "samplerspacing (class in map2loop.project)": [[66, "map2loop.project.SamplerSpacing", false]], "samplerspacing (class in map2loop.sampler)": [[85, "map2loop.sampler.SamplerSpacing", false]], "save_all_map_data() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.save_all_map_data", false]], "save_all_map_data() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.save_all_map_data", false]], "save_all_map_data() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.save_all_map_data", false]], "save_all_map_data() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.save_all_map_data", false]], "save_all_map_data() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.save_all_map_data", false]], "save_all_map_data() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.save_all_map_data", false]], "save_all_map_data() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.save_all_map_data", false]], "save_geotiff_raster() (map2loop.project method)": [[6, "map2loop.Project.save_geotiff_raster", false]], "save_geotiff_raster() (map2loop.project.project method)": [[63, "map2loop.project.Project.save_geotiff_raster", false]], "save_into_projectfile() (map2loop.project method)": [[6, "map2loop.Project.save_into_projectfile", false]], "save_into_projectfile() (map2loop.project.project method)": [[63, "map2loop.project.Project.save_into_projectfile", false]], "save_mapdata_to_files() (map2loop.project method)": [[6, "map2loop.Project.save_mapdata_to_files", false]], "save_mapdata_to_files() (map2loop.project.project method)": [[63, "map2loop.project.Project.save_mapdata_to_files", false]], "save_raw_map_data() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.save_raw_map_data", false]], "save_raw_map_data() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.save_raw_map_data", false]], "save_raw_map_data() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.save_raw_map_data", false]], "save_raw_map_data() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.save_raw_map_data", false]], "save_raw_map_data() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.save_raw_map_data", false]], "save_raw_map_data() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.save_raw_map_data", false]], "save_raw_map_data() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.save_raw_map_data", false]], "searchsorted() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.searchsorted", false]], "seek() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.seek", false]], "seek() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.seek", false]], "seekable() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.seekable", false]], "seekable() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.seekable", false]], "set_bounding_box() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.set_bounding_box", false]], "set_bounding_box() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.set_bounding_box", false]], "set_bounding_box() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.set_bounding_box", false]], "set_bounding_box() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.set_bounding_box", false]], "set_bounding_box() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.set_bounding_box", false]], "set_bounding_box() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.set_bounding_box", false]], "set_bounding_box() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.set_bounding_box", false]], "set_colour_filename() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.set_colour_filename", false]], "set_colour_filename() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.set_colour_filename", false]], "set_colour_filename() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.set_colour_filename", false]], "set_colour_filename() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.set_colour_filename", false]], "set_colour_filename() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.set_colour_filename", false]], "set_colour_filename() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.set_colour_filename", false]], "set_colour_filename() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.set_colour_filename", false]], "set_config_filename() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.set_config_filename", false]], "set_config_filename() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.set_config_filename", false]], "set_config_filename() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.set_config_filename", false]], "set_config_filename() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.set_config_filename", false]], "set_config_filename() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.set_config_filename", false]], "set_config_filename() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.set_config_filename", false]], "set_config_filename() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.set_config_filename", false]], "set_default_samplers() (map2loop.project method)": [[6, "map2loop.Project.set_default_samplers", false]], "set_default_samplers() (map2loop.project.project method)": [[63, "map2loop.project.Project.set_default_samplers", false]], "set_fault_orientation() (map2loop.project method)": [[6, "map2loop.Project.set_fault_orientation", false]], "set_fault_orientation() (map2loop.project.project method)": [[63, "map2loop.project.Project.set_fault_orientation", false]], "set_filename() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.set_filename", false]], "set_filename() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.set_filename", false]], "set_filename() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.set_filename", false]], "set_filename() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.set_filename", false]], "set_filename() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.set_filename", false]], "set_filename() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.set_filename", false]], "set_filename() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.set_filename", false]], "set_filenames_from_australian_state() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.set_filenames_from_australian_state", false]], "set_filenames_from_australian_state() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.set_filenames_from_australian_state", false]], "set_filenames_from_australian_state() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.set_filenames_from_australian_state", false]], "set_filenames_from_australian_state() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.set_filenames_from_australian_state", false]], "set_filenames_from_australian_state() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.set_filenames_from_australian_state", false]], "set_filenames_from_australian_state() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.set_filenames_from_australian_state", false]], "set_filenames_from_australian_state() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.set_filenames_from_australian_state", false]], "set_fit_request() (map2loop.interpolators.dbscan method)": [[24, "map2loop.interpolators.DBSCAN.set_fit_request", false]], "set_ignore_codes() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.set_ignore_codes", false]], "set_ignore_codes() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.set_ignore_codes", false]], "set_ignore_codes() (map2loop.project method)": [[6, "map2loop.Project.set_ignore_codes", false]], "set_ignore_codes() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.set_ignore_codes", false]], "set_ignore_codes() (map2loop.project.project method)": [[63, "map2loop.project.Project.set_ignore_codes", false]], "set_ignore_codes() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.set_ignore_codes", false]], "set_ignore_codes() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.set_ignore_codes", false]], "set_ignore_codes() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.set_ignore_codes", false]], "set_ignore_codes() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.set_ignore_codes", false]], "set_minimum_fault_length() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.set_minimum_fault_length", false]], "set_minimum_fault_length() (map2loop.project method)": [[6, "map2loop.Project.set_minimum_fault_length", false]], "set_minimum_fault_length() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.set_minimum_fault_length", false]], "set_minimum_fault_length() (map2loop.project.project method)": [[63, "map2loop.project.Project.set_minimum_fault_length", false]], "set_params() (map2loop.interpolators.dbscan method)": [[24, "map2loop.interpolators.DBSCAN.set_params", false]], "set_sampler() (map2loop.project method)": [[6, "map2loop.Project.set_sampler", false]], "set_sampler() (map2loop.project.project method)": [[63, "map2loop.project.Project.set_sampler", false]], "set_sorter() (map2loop.project method)": [[6, "map2loop.Project.set_sorter", false]], "set_sorter() (map2loop.project.project method)": [[63, "map2loop.project.Project.set_sorter", false]], "set_stratigraphic_unit_parameter_by_name() (map2loop.project.stratigraphiccolumn method)": [[72, "map2loop.project.StratigraphicColumn.set_stratigraphic_unit_parameter_by_name", false]], "set_stratigraphic_unit_parameter_by_name() (map2loop.stratigraphic_column.stratigraphiccolumn method)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.set_stratigraphic_unit_parameter_by_name", false]], "set_thickness_calculator() (map2loop.project method)": [[6, "map2loop.Project.set_thickness_calculator", false]], "set_thickness_calculator() (map2loop.project.project method)": [[63, "map2loop.project.Project.set_thickness_calculator", false]], "set_throw_calculator() (map2loop.project method)": [[6, "map2loop.Project.set_throw_calculator", false]], "set_throw_calculator() (map2loop.project.project method)": [[63, "map2loop.project.Project.set_throw_calculator", false]], "set_working_projection() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.set_working_projection", false]], "set_working_projection() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.set_working_projection", false]], "set_working_projection() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.set_working_projection", false]], "set_working_projection() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.set_working_projection", false]], "set_working_projection() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.set_working_projection", false]], "set_working_projection() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.set_working_projection", false]], "set_working_projection() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.set_working_projection", false]], "set_working_projection_on_map_data() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.set_working_projection_on_map_data", false]], "set_working_projection_on_map_data() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.set_working_projection_on_map_data", false]], "set_working_projection_on_map_data() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.set_working_projection_on_map_data", false]], "set_working_projection_on_map_data() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.set_working_projection_on_map_data", false]], "set_working_projection_on_map_data() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.set_working_projection_on_map_data", false]], "set_working_projection_on_map_data() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.set_working_projection_on_map_data", false]], "set_working_projection_on_map_data() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.set_working_projection_on_map_data", false]], "setfield() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.setfield", false]], "setflags() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.setflags", false]], "setup_grid() (map2loop.interpolators.dipdipdirectioninterpolator method)": [[25, "map2loop.interpolators.DipDipDirectionInterpolator.setup_grid", false]], "setup_grid() (map2loop.interpolators.interpolator method)": [[26, "map2loop.interpolators.Interpolator.setup_grid", false]], "setup_grid() (map2loop.interpolators.normalvectorinterpolator method)": [[28, "map2loop.interpolators.NormalVectorInterpolator.setup_grid", false]], "setup_grid() (map2loop.thickness_calculator.dipdipdirectioninterpolator method)": [[103, "map2loop.thickness_calculator.DipDipDirectionInterpolator.setup_grid", false]], "setup_interpolation() (map2loop.interpolators.dipdipdirectioninterpolator method)": [[25, "map2loop.interpolators.DipDipDirectionInterpolator.setup_interpolation", false]], "setup_interpolation() (map2loop.interpolators.interpolator method)": [[26, "map2loop.interpolators.Interpolator.setup_interpolation", false]], "setup_interpolation() (map2loop.interpolators.normalvectorinterpolator method)": [[28, "map2loop.interpolators.NormalVectorInterpolator.setup_interpolation", false]], "setup_interpolation() (map2loop.thickness_calculator.dipdipdirectioninterpolator method)": [[103, "map2loop.thickness_calculator.DipDipDirectionInterpolator.setup_interpolation", false]], "shape (map2loop.interpolators.ndarray attribute)": [[32, "id12", false], [32, "map2loop.interpolators.ndarray.shape", false]], "size (map2loop.interpolators.ndarray attribute)": [[32, "id13", false], [32, "map2loop.interpolators.ndarray.size", false]], "smooth (map2loop.interpolators.rbf attribute)": [[29, "map2loop.interpolators.Rbf.smooth", false]], "sort() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.sort", false]], "sort() (map2loop.project.sorter method)": [[67, "map2loop.project.Sorter.sort", false]], "sort() (map2loop.project.sorteragebased method)": [[68, "map2loop.project.SorterAgeBased.sort", false]], "sort() (map2loop.project.sorteralpha method)": [[69, "map2loop.project.SorterAlpha.sort", false]], "sort() (map2loop.project.sorterusehint method)": [[70, "map2loop.project.SorterUseHint.sort", false]], "sort() (map2loop.project.sorterusenetworkx method)": [[71, "map2loop.project.SorterUseNetworkX.sort", false]], "sort() (map2loop.sorter.sorter method)": [[90, "map2loop.sorter.Sorter.sort", false]], "sort() (map2loop.sorter.sorteragebased method)": [[91, "map2loop.sorter.SorterAgeBased.sort", false]], "sort() (map2loop.sorter.sorteralpha method)": [[92, "map2loop.sorter.SorterAlpha.sort", false]], "sort() (map2loop.sorter.sortermaximisecontacts method)": [[93, "map2loop.sorter.SorterMaximiseContacts.sort", false]], "sort() (map2loop.sorter.sorterobservationprojections method)": [[94, "map2loop.sorter.SorterObservationProjections.sort", false]], "sort() (map2loop.sorter.sorterusehint method)": [[95, "map2loop.sorter.SorterUseHint.sort", false]], "sort() (map2loop.sorter.sorterusenetworkx method)": [[96, "map2loop.sorter.SorterUseNetworkX.sort", false]], "sort_from_relationship_list() (map2loop.project.stratigraphiccolumn method)": [[72, "map2loop.project.StratigraphicColumn.sort_from_relationship_list", false]], "sort_from_relationship_list() (map2loop.stratigraphic_column.stratigraphiccolumn method)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.sort_from_relationship_list", false]], "sort_stratigraphic_column() (map2loop.project method)": [[6, "map2loop.Project.sort_stratigraphic_column", false]], "sort_stratigraphic_column() (map2loop.project.project method)": [[63, "map2loop.project.Project.sort_stratigraphic_column", false]], "sorted_units (map2loop.map2model_wrapper.map2modelwrapper attribute)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.sorted_units", false]], "sorted_units (map2loop.project.map2modelwrapper attribute)": [[61, "map2loop.project.Map2ModelWrapper.sorted_units", false]], "sorter (class in map2loop.project)": [[67, "map2loop.project.Sorter", false]], "sorter (class in map2loop.sorter)": [[90, "map2loop.sorter.Sorter", false]], "sorteragebased (class in map2loop.project)": [[68, "map2loop.project.SorterAgeBased", false]], "sorteragebased (class in map2loop.sorter)": [[91, "map2loop.sorter.SorterAgeBased", false]], "sorteralpha (class in map2loop.project)": [[69, "map2loop.project.SorterAlpha", false]], "sorteralpha (class in map2loop.sorter)": [[92, "map2loop.sorter.SorterAlpha", false]], "sortermaximisecontacts (class in map2loop.sorter)": [[93, "map2loop.sorter.SorterMaximiseContacts", false]], "sorterobservationprojections (class in map2loop.sorter)": [[94, "map2loop.sorter.SorterObservationProjections", false]], "sorterusehint (class in map2loop.project)": [[70, "map2loop.project.SorterUseHint", false]], "sorterusehint (class in map2loop.sorter)": [[95, "map2loop.sorter.SorterUseHint", false]], "sorterusenetworkx (class in map2loop.project)": [[71, "map2loop.project.SorterUseNetworkX", false]], "sorterusenetworkx (class in map2loop.sorter)": [[96, "map2loop.sorter.SorterUseNetworkX", false]], "squeeze() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.squeeze", false]], "std() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.std", false]], "stratigraphiccolumn (class in map2loop.project)": [[72, "map2loop.project.StratigraphicColumn", false]], "stratigraphiccolumn (class in map2loop.stratigraphic_column)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn", false]], "stratigraphicunitcolumns (map2loop.project.stratigraphiccolumn attribute)": [[72, "map2loop.project.StratigraphicColumn.stratigraphicUnitColumns", false]], "stratigraphicunitcolumns (map2loop.stratigraphic_column.stratigraphiccolumn attribute)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.stratigraphicUnitColumns", false]], "stratigraphicunits (map2loop.project.stratigraphiccolumn attribute)": [[72, "map2loop.project.StratigraphicColumn.stratigraphicUnits", false]], "stratigraphicunits (map2loop.stratigraphic_column.stratigraphiccolumn attribute)": [[99, "map2loop.stratigraphic_column.StratigraphicColumn.stratigraphicUnits", false]], "strides (map2loop.interpolators.ndarray attribute)": [[32, "id14", false], [32, "map2loop.interpolators.ndarray.strides", false]], "strike_dip_vector() (in module map2loop.interpolators)": [[33, "map2loop.interpolators.strike_dip_vector", false]], "strike_dip_vector() (in module map2loop.utils)": [[132, "map2loop.utils.strike_dip_vector", false]], "structuralpoint (class in map2loop.thickness_calculator)": [[106, "map2loop.thickness_calculator.StructuralPoint", false]], "structure_config (map2loop.config.config attribute)": [[12, "map2loop.config.Config.structure_config", false]], "structure_config (map2loop.mapdata.config attribute)": [[46, "map2loop.mapdata.Config.structure_config", false]], "sum() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.sum", false]], "summarise_data() (map2loop.deformation_history.deformationhistory method)": [[14, "map2loop.deformation_history.DeformationHistory.summarise_data", false]], "summarise_data() (map2loop.project.deformationhistory method)": [[57, "map2loop.project.DeformationHistory.summarise_data", false]], "summarise_fault_data() (map2loop.project method)": [[6, "map2loop.Project.summarise_fault_data", false]], "summarise_fault_data() (map2loop.project.project method)": [[63, "map2loop.project.Project.summarise_fault_data", false]], "swapaxes() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.swapaxes", false]], "t (map2loop.interpolators.ndarray attribute)": [[32, "id0", false], [32, "map2loop.interpolators.ndarray.T", false]], "take() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.take", false]], "tell() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.tell", false]], "tell() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.tell", false]], "thickness_calculator_label (map2loop.thickness_calculator.interpolatedstructure attribute)": [[104, "map2loop.thickness_calculator.InterpolatedStructure.thickness_calculator_label", false]], "thickness_calculator_label (map2loop.thickness_calculator.structuralpoint attribute)": [[106, "map2loop.thickness_calculator.StructuralPoint.thickness_calculator_label", false]], "thicknesscalculator (class in map2loop.project)": [[73, "map2loop.project.ThicknessCalculator", false]], "thicknesscalculator (class in map2loop.thickness_calculator)": [[107, "map2loop.thickness_calculator.ThicknessCalculator", false]], "thicknesscalculatoralpha (class in map2loop.project)": [[74, "map2loop.project.ThicknessCalculatorAlpha", false]], "thicknesscalculatoralpha (class in map2loop.thickness_calculator)": [[108, "map2loop.thickness_calculator.ThicknessCalculatorAlpha", false]], "throwcalculator (class in map2loop.project)": [[75, "map2loop.project.ThrowCalculator", false]], "throwcalculator (class in map2loop.throw_calculator)": [[119, "map2loop.throw_calculator.ThrowCalculator", false]], "throwcalculatoralpha (class in map2loop.project)": [[76, "map2loop.project.ThrowCalculatorAlpha", false]], "throwcalculatoralpha (class in map2loop.throw_calculator)": [[120, "map2loop.throw_calculator.ThrowCalculatorAlpha", false]], "tmp_path (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.tmp_path", false]], "tmp_path (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.tmp_path", false]], "tmp_path (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.tmp_path", false]], "tmp_path (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.tmp_path", false]], "tmp_path (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.tmp_path", false]], "tmp_path (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.tmp_path", false]], "tmp_path (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.tmp_path", false]], "to_bytes() (map2loop.m2l_enums.datastate method)": [[35, "map2loop.m2l_enums.Datastate.to_bytes", false]], "to_bytes() (map2loop.m2l_enums.datatype method)": [[36, "map2loop.m2l_enums.Datatype.to_bytes", false]], "to_bytes() (map2loop.m2l_enums.errorstate method)": [[37, "map2loop.m2l_enums.ErrorState.to_bytes", false]], "to_bytes() (map2loop.m2l_enums.intenum method)": [[38, "map2loop.m2l_enums.IntEnum.to_bytes", false]], "to_bytes() (map2loop.m2l_enums.verboselevel method)": [[39, "map2loop.m2l_enums.VerboseLevel.to_bytes", false]], "to_bytes() (map2loop.map2model_wrapper.verboselevel method)": [[42, "map2loop.map2model_wrapper.VerboseLevel.to_bytes", false]], "to_bytes() (map2loop.mapdata.datastate method)": [[47, "map2loop.mapdata.Datastate.to_bytes", false]], "to_bytes() (map2loop.mapdata.datatype method)": [[48, "map2loop.mapdata.Datatype.to_bytes", false]], "to_bytes() (map2loop.mapdata.verboselevel method)": [[51, "map2loop.mapdata.VerboseLevel.to_bytes", false]], "to_bytes() (map2loop.project.datatype method)": [[56, "map2loop.project.Datatype.to_bytes", false]], "to_bytes() (map2loop.project.errorstate method)": [[58, "map2loop.project.ErrorState.to_bytes", false]], "to_bytes() (map2loop.project.verboselevel method)": [[77, "map2loop.project.VerboseLevel.to_bytes", false]], "to_bytes() (map2loop.sampler.datatype method)": [[81, "map2loop.sampler.Datatype.to_bytes", false]], "to_bytes() (map2loop.thickness_calculator.datatype method)": [[102, "map2loop.thickness_calculator.Datatype.to_bytes", false]], "to_dict() (map2loop.config.config method)": [[12, "map2loop.config.Config.to_dict", false]], "to_dict() (map2loop.mapdata.config method)": [[46, "map2loop.mapdata.Config.to_dict", false]], "tobytes() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.tobytes", false]], "tofile() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.tofile", false]], "tolist() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.tolist", false]], "tostring() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.tostring", false]], "trace() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.trace", false]], "transpose() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.transpose", false]], "truncate() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.truncate", false]], "truncate() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.truncate", false]], "type() (map2loop.fault_orientation.faultorientation method)": [[17, "map2loop.fault_orientation.FaultOrientation.type", false]], "type() (map2loop.fault_orientation.faultorientationnearest method)": [[18, "map2loop.fault_orientation.FaultOrientationNearest.type", false]], "type() (map2loop.interpolators.dipdipdirectioninterpolator method)": [[25, "map2loop.interpolators.DipDipDirectionInterpolator.type", false]], "type() (map2loop.interpolators.interpolator method)": [[26, "map2loop.interpolators.Interpolator.type", false]], "type() (map2loop.interpolators.normalvectorinterpolator method)": [[28, "id0", false], [28, "map2loop.interpolators.NormalVectorInterpolator.type", false]], "type() (map2loop.project.faultorientation method)": [[59, "map2loop.project.FaultOrientation.type", false]], "type() (map2loop.project.faultorientationnearest method)": [[60, "map2loop.project.FaultOrientationNearest.type", false]], "type() (map2loop.project.sampler method)": [[64, "map2loop.project.Sampler.type", false]], "type() (map2loop.project.samplerdecimator method)": [[65, "map2loop.project.SamplerDecimator.type", false]], "type() (map2loop.project.samplerspacing method)": [[66, "map2loop.project.SamplerSpacing.type", false]], "type() (map2loop.project.sorter method)": [[67, "map2loop.project.Sorter.type", false]], "type() (map2loop.project.sorteragebased method)": [[68, "map2loop.project.SorterAgeBased.type", false]], "type() (map2loop.project.sorteralpha method)": [[69, "map2loop.project.SorterAlpha.type", false]], "type() (map2loop.project.sorterusehint method)": [[70, "map2loop.project.SorterUseHint.type", false]], "type() (map2loop.project.sorterusenetworkx method)": [[71, "map2loop.project.SorterUseNetworkX.type", false]], "type() (map2loop.project.thicknesscalculator method)": [[73, "map2loop.project.ThicknessCalculator.type", false]], "type() (map2loop.project.thicknesscalculatoralpha method)": [[74, "map2loop.project.ThicknessCalculatorAlpha.type", false]], "type() (map2loop.project.throwcalculator method)": [[75, "map2loop.project.ThrowCalculator.type", false]], "type() (map2loop.project.throwcalculatoralpha method)": [[76, "map2loop.project.ThrowCalculatorAlpha.type", false]], "type() (map2loop.sampler.sampler method)": [[83, "map2loop.sampler.Sampler.type", false]], "type() (map2loop.sampler.samplerdecimator method)": [[84, "map2loop.sampler.SamplerDecimator.type", false]], "type() (map2loop.sampler.samplerspacing method)": [[85, "map2loop.sampler.SamplerSpacing.type", false]], "type() (map2loop.sorter.sorter method)": [[90, "map2loop.sorter.Sorter.type", false]], "type() (map2loop.sorter.sorteragebased method)": [[91, "map2loop.sorter.SorterAgeBased.type", false]], "type() (map2loop.sorter.sorteralpha method)": [[92, "map2loop.sorter.SorterAlpha.type", false]], "type() (map2loop.sorter.sortermaximisecontacts method)": [[93, "map2loop.sorter.SorterMaximiseContacts.type", false]], "type() (map2loop.sorter.sorterobservationprojections method)": [[94, "map2loop.sorter.SorterObservationProjections.type", false]], "type() (map2loop.sorter.sorterusehint method)": [[95, "map2loop.sorter.SorterUseHint.type", false]], "type() (map2loop.sorter.sorterusenetworkx method)": [[96, "map2loop.sorter.SorterUseNetworkX.type", false]], "type() (map2loop.thickness_calculator.dipdipdirectioninterpolator method)": [[103, "map2loop.thickness_calculator.DipDipDirectionInterpolator.type", false]], "type() (map2loop.thickness_calculator.interpolatedstructure method)": [[104, "map2loop.thickness_calculator.InterpolatedStructure.type", false]], "type() (map2loop.thickness_calculator.structuralpoint method)": [[106, "map2loop.thickness_calculator.StructuralPoint.type", false]], "type() (map2loop.thickness_calculator.thicknesscalculator method)": [[107, "map2loop.thickness_calculator.ThicknessCalculator.type", false]], "type() (map2loop.thickness_calculator.thicknesscalculatoralpha method)": [[108, "map2loop.thickness_calculator.ThicknessCalculatorAlpha.type", false]], "type() (map2loop.throw_calculator.throwcalculator method)": [[119, "map2loop.throw_calculator.ThrowCalculator.type", false]], "type() (map2loop.throw_calculator.throwcalculatoralpha method)": [[120, "map2loop.throw_calculator.ThrowCalculatorAlpha.type", false]], "unit_fault_relationships (map2loop.map2model_wrapper.map2modelwrapper attribute)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.unit_fault_relationships", false]], "unit_fault_relationships (map2loop.project.map2modelwrapper attribute)": [[61, "map2loop.project.Map2ModelWrapper.unit_fault_relationships", false]], "unit_unit_relationships (map2loop.map2model_wrapper.map2modelwrapper attribute)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.unit_unit_relationships", false]], "unit_unit_relationships (map2loop.project.map2modelwrapper attribute)": [[61, "map2loop.project.Map2ModelWrapper.unit_unit_relationships", false]], "update_filename_with_bounding_box() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.update_filename_with_bounding_box", false]], "update_filename_with_bounding_box() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.update_filename_with_bounding_box", false]], "update_filename_with_bounding_box() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.update_filename_with_bounding_box", false]], "update_filename_with_bounding_box() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.update_filename_with_bounding_box", false]], "update_filename_with_bounding_box() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.update_filename_with_bounding_box", false]], "update_filename_with_bounding_box() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.update_filename_with_bounding_box", false]], "update_filename_with_bounding_box() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.update_filename_with_bounding_box", false]], "update_filename_with_projection() (map2loop.fault_orientation.mapdata method)": [[19, "map2loop.fault_orientation.MapData.update_filename_with_projection", false]], "update_filename_with_projection() (map2loop.mapdata.mapdata method)": [[50, "map2loop.mapdata.MapData.update_filename_with_projection", false]], "update_filename_with_projection() (map2loop.project.mapdata method)": [[62, "map2loop.project.MapData.update_filename_with_projection", false]], "update_filename_with_projection() (map2loop.sampler.mapdata method)": [[82, "map2loop.sampler.MapData.update_filename_with_projection", false]], "update_filename_with_projection() (map2loop.sorter.mapdata method)": [[89, "map2loop.sorter.MapData.update_filename_with_projection", false]], "update_filename_with_projection() (map2loop.thickness_calculator.mapdata method)": [[105, "map2loop.thickness_calculator.MapData.update_filename_with_projection", false]], "update_filename_with_projection() (map2loop.throw_calculator.mapdata method)": [[118, "map2loop.throw_calculator.MapData.update_filename_with_projection", false]], "update_from_dictionary() (map2loop.config.config method)": [[12, "map2loop.config.Config.update_from_dictionary", false]], "update_from_dictionary() (map2loop.mapdata.config method)": [[46, "map2loop.mapdata.Config.update_from_dictionary", false]], "update_from_file() (map2loop.config.config method)": [[12, "map2loop.config.Config.update_from_file", false]], "update_from_file() (map2loop.mapdata.config method)": [[46, "map2loop.mapdata.Config.update_from_file", false]], "update_from_legacy_file() (map2loop.config.config method)": [[12, "map2loop.config.Config.update_from_legacy_file", false]], "update_from_legacy_file() (map2loop.mapdata.config method)": [[46, "map2loop.mapdata.Config.update_from_legacy_file", false]], "uuid4() (in module map2loop.mapdata)": [[54, "map2loop.mapdata.uuid4", false]], "var() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.var", false]], "verbose_level (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.verbose_level", false]], "verbose_level (map2loop.map2model_wrapper.map2modelwrapper attribute)": [[41, "map2loop.map2model_wrapper.Map2ModelWrapper.verbose_level", false]], "verbose_level (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.verbose_level", false]], "verbose_level (map2loop.project.map2modelwrapper attribute)": [[61, "map2loop.project.Map2ModelWrapper.verbose_level", false]], "verbose_level (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.verbose_level", false]], "verbose_level (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.verbose_level", false]], "verbose_level (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.verbose_level", false]], "verbose_level (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.verbose_level", false]], "verbose_level (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.verbose_level", false]], "verboselevel (class in map2loop.m2l_enums)": [[39, "map2loop.m2l_enums.VerboseLevel", false]], "verboselevel (class in map2loop.map2model_wrapper)": [[42, "map2loop.map2model_wrapper.VerboseLevel", false]], "verboselevel (class in map2loop.mapdata)": [[51, "map2loop.mapdata.VerboseLevel", false]], "verboselevel (class in map2loop.project)": [[77, "map2loop.project.VerboseLevel", false]], "view() (map2loop.interpolators.ndarray method)": [[32, "map2loop.interpolators.ndarray.view", false]], "webcoverageservice() (in module map2loop.mapdata)": [[52, "map2loop.mapdata.WebCoverageService", false]], "working_projection (map2loop.fault_orientation.mapdata attribute)": [[19, "map2loop.fault_orientation.MapData.working_projection", false]], "working_projection (map2loop.mapdata.mapdata attribute)": [[50, "map2loop.mapdata.MapData.working_projection", false]], "working_projection (map2loop.project.mapdata attribute)": [[62, "map2loop.project.MapData.working_projection", false]], "working_projection (map2loop.sampler.mapdata attribute)": [[82, "map2loop.sampler.MapData.working_projection", false]], "working_projection (map2loop.sorter.mapdata attribute)": [[89, "map2loop.sorter.MapData.working_projection", false]], "working_projection (map2loop.thickness_calculator.mapdata attribute)": [[105, "map2loop.thickness_calculator.MapData.working_projection", false]], "working_projection (map2loop.throw_calculator.mapdata attribute)": [[118, "map2loop.throw_calculator.MapData.working_projection", false]], "writable() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.writable", false]], "writable() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.writable", false]], "write() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.write", false]], "write() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.write", false]], "writeable (map2loop.interpolators.ndarray attribute)": [[32, "map2loop.interpolators.ndarray.WRITEABLE", false]], "writebackifcopy (map2loop.interpolators.ndarray attribute)": [[32, "map2loop.interpolators.ndarray.WRITEBACKIFCOPY", false]], "writelines() (map2loop.mapdata.bytesio method)": [[45, "map2loop.mapdata.BytesIO.writelines", false]], "writelines() (map2loop.mapdata.gzipfile method)": [[49, "map2loop.mapdata.GzipFile.writelines", false]], "x (map2loop.interpolators.normalvectorinterpolator attribute)": [[28, "map2loop.interpolators.NormalVectorInterpolator.x", false]], "xi (map2loop.interpolators.normalvectorinterpolator attribute)": [[28, "map2loop.interpolators.NormalVectorInterpolator.xi", false]], "xi (map2loop.interpolators.rbf attribute)": [[29, "map2loop.interpolators.Rbf.xi", false]], "y (map2loop.interpolators.normalvectorinterpolator attribute)": [[28, "map2loop.interpolators.NormalVectorInterpolator.y", false]], "yi (map2loop.interpolators.normalvectorinterpolator attribute)": [[28, "map2loop.interpolators.NormalVectorInterpolator.yi", false]]}, "objects": {"": [[5, 0, 0, "-", "map2loop"]], "map2loop": [[6, 1, 1, "", "Project"], [7, 0, 0, "-", "aus_state_urls"], [11, 0, 0, "-", "config"], [13, 0, 0, "-", "deformation_history"], [15, 0, 0, "-", "fault_orientation"], [21, 0, 0, "-", "interpolators"], [34, 0, 0, "-", "m2l_enums"], [40, 0, 0, "-", "map2model_wrapper"], [43, 0, 0, "-", "mapdata"], [55, 0, 0, "-", "project"], [79, 0, 0, "-", "sampler"], [87, 0, 0, "-", "sorter"], [98, 0, 0, "-", "stratigraphic_column"], [100, 0, 0, "-", "thickness_calculator"], [116, 0, 0, "-", "throw_calculator"], [122, 0, 0, "-", "utils"], [133, 0, 0, "-", "version"]], "map2loop.Project": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "apply_colour_to_units"], [6, 2, 1, "", "calculate_stratigraphic_order"], [6, 2, 1, "", "calculate_unit_thicknesses"], [6, 2, 1, "", "draw_geology_map"], [6, 2, 1, "", "extract_geology_contacts"], [6, 2, 1, "", "get_fault_orientation"], [6, 2, 1, "", "get_minimum_fault_length"], [6, 2, 1, "", "get_sampler"], [6, 2, 1, "", "get_sorter"], [6, 2, 1, "", "get_thickness_calculator"], [6, 2, 1, "", "get_throw_calculator"], [6, 2, 1, "", "run_all"], [6, 2, 1, "", "sample_map_data"], [6, 2, 1, "", "save_geotiff_raster"], [6, 2, 1, "", "save_into_projectfile"], [6, 2, 1, "", "save_mapdata_to_files"], [6, 2, 1, "", "set_default_samplers"], [6, 2, 1, "", "set_fault_orientation"], [6, 2, 1, "", "set_ignore_codes"], [6, 2, 1, "", "set_minimum_fault_length"], [6, 2, 1, "", "set_sampler"], [6, 2, 1, "", "set_sorter"], [6, 2, 1, "", "set_thickness_calculator"], [6, 2, 1, "", "set_throw_calculator"], [6, 2, 1, "", "sort_stratigraphic_column"], [6, 2, 1, "", "summarise_fault_data"]], "map2loop.aus_state_urls": [[8, 1, 1, "", "AustraliaStateUrls"], [9, 3, 1, "", "load_clut"], [10, 3, 1, "", "load_config"]], "map2loop.aus_state_urls.AustraliaStateUrls": [[8, 2, 1, "", "__init__"]], "map2loop.config": [[12, 1, 1, "", "Config"]], "map2loop.config.Config": [[12, 2, 1, "", "__init__"], [12, 4, 1, "", "fault_config"], [12, 4, 1, "", "fold_config"], [12, 4, 1, "", "geology_config"], [12, 4, 1, "", "structure_config"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "update_from_dictionary"], [12, 2, 1, "", "update_from_file"], [12, 2, 1, "", "update_from_legacy_file"]], "map2loop.deformation_history": [[14, 1, 1, "", "DeformationHistory"]], "map2loop.deformation_history.DeformationHistory": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "addFault"], [14, 2, 1, "", "addFold"], [14, 4, 1, "", "faultColumns"], [14, 4, 1, "", "faults"], [14, 2, 1, "", "findfault"], [14, 2, 1, "", "findfold"], [14, 4, 1, "", "foldColumns"], [14, 4, 1, "", "folds"], [14, 2, 1, "", "get_fault_relationships_with_ids"], [14, 2, 1, "", "get_faults_for_export"], [14, 2, 1, "", "get_minimum_fault_length"], [14, 4, 1, "", "history"], [14, 4, 1, "", "minimum_fault_length_to_export"], [14, 2, 1, "", "populate"], [14, 2, 1, "", "removeFaultByEventId"], [14, 2, 1, "", "removeFaultByName"], [14, 2, 1, "", "set_minimum_fault_length"], [14, 2, 1, "", "summarise_data"]], "map2loop.fault_orientation": [[16, 1, 1, "", "ABC"], [17, 1, 1, "", "FaultOrientation"], [18, 1, 1, "", "FaultOrientationNearest"], [19, 1, 1, "", "MapData"], [20, 3, 1, "", "abstractmethod"]], "map2loop.fault_orientation.ABC": [[16, 2, 1, "", "__init__"]], "map2loop.fault_orientation.FaultOrientation": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "calculate"], [17, 2, 1, "", "type"]], "map2loop.fault_orientation.FaultOrientationNearest": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "calculate"], [18, 2, 1, "", "type"]], "map2loop.fault_orientation.MapData": [[19, 2, 1, "", "__init__"], [19, 4, 1, "", "basal_contacts"], [19, 4, 1, "", "bounding_box"], [19, 4, 1, "", "bounding_box_polygon"], [19, 4, 1, "", "bounding_box_str"], [19, 2, 1, "", "calculate_bounding_box_and_projection"], [19, 2, 1, "", "check_filename"], [19, 2, 1, "", "check_filenames"], [19, 2, 1, "", "check_map"], [19, 4, 1, "", "colour_filename"], [19, 2, 1, "", "colour_units"], [19, 4, 1, "", "config"], [19, 4, 1, "", "config_filename"], [19, 4, 1, "", "contacts"], [19, 4, 1, "", "data"], [19, 4, 1, "", "data_states"], [19, 4, 1, "", "dirtyflags"], [19, 2, 1, "", "export_wkt_format_files"], [19, 2, 1, "", "extract_all_contacts"], [19, 2, 1, "", "extract_basal_contacts"], [19, 4, 1, "", "filenames"], [19, 2, 1, "", "get_bounding_box"], [19, 2, 1, "", "get_colour_filename"], [19, 2, 1, "", "get_config_filename"], [19, 2, 1, "", "get_empty_dataframe"], [19, 2, 1, "", "get_filename"], [19, 2, 1, "", "get_ignore_codes"], [19, 2, 1, "", "get_map_data"], [19, 2, 1, "", "get_raw_map_data"], [19, 2, 1, "", "get_value_from_raster"], [19, 2, 1, "", "get_value_from_raster_df"], [19, 2, 1, "", "get_working_projection"], [19, 2, 1, "", "load_all_map_data"], [19, 2, 1, "", "load_map_data"], [19, 2, 1, "", "load_raster_map_data"], [19, 2, 1, "", "open_http_query"], [19, 2, 1, "", "parse_fault_map"], [19, 2, 1, "", "parse_fault_orientations"], [19, 2, 1, "", "parse_fold_map"], [19, 2, 1, "", "parse_geology_map"], [19, 2, 1, "", "parse_structure_map"], [19, 4, 1, "", "raw_data"], [19, 2, 1, "", "recreate_bounding_box_str"], [19, 2, 1, "", "save_all_map_data"], [19, 2, 1, "", "save_raw_map_data"], [19, 2, 1, "", "set_bounding_box"], [19, 2, 1, "", "set_colour_filename"], [19, 2, 1, "", "set_config_filename"], [19, 2, 1, "", "set_filename"], [19, 2, 1, "", "set_filenames_from_australian_state"], [19, 2, 1, "", "set_ignore_codes"], [19, 2, 1, "", "set_working_projection"], [19, 2, 1, "", "set_working_projection_on_map_data"], [19, 4, 1, "", "tmp_path"], [19, 2, 1, "", "update_filename_with_bounding_box"], [19, 2, 1, "", "update_filename_with_projection"], [19, 4, 1, "", "verbose_level"], [19, 4, 1, "", "working_projection"]], "map2loop.interpolators": [[22, 1, 1, "", "ABC"], [23, 1, 1, "", "Any"], [24, 1, 1, "", "DBSCAN"], [25, 1, 1, "", "DipDipDirectionInterpolator"], [26, 1, 1, "", "Interpolator"], [27, 1, 1, "", "LinearNDInterpolator"], [28, 1, 1, "", "NormalVectorInterpolator"], [29, 1, 1, "", "Rbf"], [30, 3, 1, "", "abstractmethod"], [31, 3, 1, "", "generate_grid"], [32, 1, 1, "", "ndarray"], [33, 3, 1, "", "strike_dip_vector"]], "map2loop.interpolators.ABC": [[22, 2, 1, "", "__init__"]], "map2loop.interpolators.Any": [[23, 2, 1, "", "__init__"]], "map2loop.interpolators.DBSCAN": [[24, 2, 1, "", "__init__"], [24, 4, 1, "", "components_"], [24, 4, 1, "", "core_sample_indices_"], [24, 4, 1, "", "feature_names_in_"], [24, 2, 1, "", "fit"], [24, 2, 1, "", "fit_predict"], [24, 2, 1, "", "get_metadata_routing"], [24, 2, 1, "", "get_params"], [24, 4, 1, "", "labels_"], [24, 4, 1, "", "n_features_in_"], [24, 2, 1, "", "set_fit_request"], [24, 2, 1, "", "set_params"]], "map2loop.interpolators.DipDipDirectionInterpolator": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "interpolate"], [25, 2, 1, "", "setup_grid"], [25, 2, 1, "", "setup_interpolation"], [25, 2, 1, "", "type"]], "map2loop.interpolators.Interpolator": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "interpolate"], [26, 2, 1, "", "setup_grid"], [26, 2, 1, "", "setup_interpolation"], [26, 2, 1, "", "type"]], "map2loop.interpolators.LinearNDInterpolator": [[27, 2, 1, "", "__call__"], [27, 2, 1, "", "__init__"]], "map2loop.interpolators.NormalVectorInterpolator": [[28, 2, 1, "", "__init__"], [28, 4, 1, "", "dataframe"], [28, 2, 1, "", "interpolate"], [28, 4, 1, "", "interpolator_label"], [28, 2, 1, "", "setup_grid"], [28, 2, 1, "", "setup_interpolation"], [28, 2, 1, "id0", "type"], [28, 4, 1, "", "x"], [28, 4, 1, "", "xi"], [28, 4, 1, "", "y"], [28, 4, 1, "", "yi"]], "map2loop.interpolators.Rbf": [[29, 4, 1, "", "A"], [29, 4, 1, "", "N"], [29, 2, 1, "", "__init__"], [29, 4, 1, "", "di"], [29, 4, 1, "", "epsilon"], [29, 4, 1, "", "function"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "nodes"], [29, 4, 1, "", "norm"], [29, 4, 1, "", "smooth"], [29, 4, 1, "", "xi"]], "map2loop.interpolators.ndarray": [[32, 4, 1, "", "ALIGNED"], [32, 4, 1, "", "BEHAVED"], [32, 4, 1, "", "CARRAY"], [32, 4, 1, "", "C_CONTIGUOUS"], [32, 4, 1, "", "FARRAY"], [32, 4, 1, "", "FNC"], [32, 4, 1, "", "FORC"], [32, 4, 1, "", "F_CONTIGUOUS"], [32, 4, 1, "", "OWNDATA"], [32, 4, 1, "id0", "T"], [32, 4, 1, "", "WRITEABLE"], [32, 4, 1, "", "WRITEBACKIFCOPY"], [32, 2, 1, "", "__init__"], [32, 2, 1, "", "all"], [32, 2, 1, "", "any"], [32, 2, 1, "", "argmax"], [32, 2, 1, "", "argmin"], [32, 2, 1, "", "argpartition"], [32, 2, 1, "", "argsort"], [32, 2, 1, "", "astype"], [32, 4, 1, "id1", "base"], [32, 2, 1, "", "byteswap"], [32, 2, 1, "", "choose"], [32, 2, 1, "", "clip"], [32, 2, 1, "", "compress"], [32, 2, 1, "", "conj"], [32, 2, 1, "", "conjugate"], [32, 2, 1, "", "copy"], [32, 4, 1, "id2", "ctypes"], [32, 2, 1, "", "cumprod"], [32, 2, 1, "", "cumsum"], [32, 4, 1, "id3", "data"], [32, 2, 1, "", "diagonal"], [32, 4, 1, "id4", "dtype"], [32, 2, 1, "", "dump"], [32, 2, 1, "", "dumps"], [32, 2, 1, "", "fill"], [32, 4, 1, "id5", "flags"], [32, 4, 1, "id6", "flat"], [32, 2, 1, "", "flatten"], [32, 2, 1, "", "getfield"], [32, 4, 1, "id7", "imag"], [32, 2, 1, "", "item"], [32, 2, 1, "", "itemset"], [32, 4, 1, "id8", "itemsize"], [32, 2, 1, "", "max"], [32, 2, 1, "", "mean"], [32, 2, 1, "", "min"], [32, 4, 1, "id9", "nbytes"], [32, 4, 1, "id10", "ndim"], [32, 2, 1, "", "newbyteorder"], [32, 2, 1, "", "nonzero"], [32, 2, 1, "", "partition"], [32, 2, 1, "", "prod"], [32, 2, 1, "", "ptp"], [32, 2, 1, "", "put"], [32, 2, 1, "", "ravel"], [32, 4, 1, "id11", "real"], [32, 2, 1, "", "repeat"], [32, 2, 1, "", "reshape"], [32, 2, 1, "", "resize"], [32, 2, 1, "", "round"], [32, 2, 1, "", "searchsorted"], [32, 2, 1, "", "setfield"], [32, 2, 1, "", "setflags"], [32, 4, 1, "id12", "shape"], [32, 4, 1, "id13", "size"], [32, 2, 1, "", "sort"], [32, 2, 1, "", "squeeze"], [32, 2, 1, "", "std"], [32, 4, 1, "id14", "strides"], [32, 2, 1, "", "sum"], [32, 2, 1, "", "swapaxes"], [32, 2, 1, "", "take"], [32, 2, 1, "", "tobytes"], [32, 2, 1, "", "tofile"], [32, 2, 1, "", "tolist"], [32, 2, 1, "", "tostring"], [32, 2, 1, "", "trace"], [32, 2, 1, "", "transpose"], [32, 2, 1, "", "var"], [32, 2, 1, "", "view"]], "map2loop.m2l_enums": [[35, 1, 1, "", "Datastate"], [36, 1, 1, "", "Datatype"], [37, 1, 1, "", "ErrorState"], [38, 1, 1, "", "IntEnum"], [39, 1, 1, "", "VerboseLevel"]], "map2loop.m2l_enums.Datastate": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "bit_count"], [35, 2, 1, "", "bit_length"], [35, 2, 1, "", "conjugate"], [35, 4, 1, "", "denominator"], [35, 2, 1, "", "from_bytes"], [35, 4, 1, "", "imag"], [35, 2, 1, "", "is_integer"], [35, 4, 1, "", "numerator"], [35, 4, 1, "", "real"], [35, 2, 1, "", "to_bytes"]], "map2loop.m2l_enums.Datatype": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "bit_count"], [36, 2, 1, "", "bit_length"], [36, 2, 1, "", "conjugate"], [36, 4, 1, "", "denominator"], [36, 2, 1, "", "from_bytes"], [36, 4, 1, "", "imag"], [36, 2, 1, "", "is_integer"], [36, 4, 1, "", "numerator"], [36, 4, 1, "", "real"], [36, 2, 1, "", "to_bytes"]], "map2loop.m2l_enums.ErrorState": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "as_integer_ratio"], [37, 2, 1, "", "bit_count"], [37, 2, 1, "", "bit_length"], [37, 2, 1, "", "conjugate"], [37, 4, 1, "", "denominator"], [37, 2, 1, "", "from_bytes"], [37, 4, 1, "", "imag"], [37, 2, 1, "", "is_integer"], [37, 4, 1, "", "numerator"], [37, 4, 1, "", "real"], [37, 2, 1, "", "to_bytes"]], "map2loop.m2l_enums.IntEnum": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "as_integer_ratio"], [38, 2, 1, "", "bit_count"], [38, 2, 1, "", "bit_length"], [38, 2, 1, "", "conjugate"], [38, 4, 1, "", "denominator"], [38, 2, 1, "", "from_bytes"], [38, 4, 1, "", "imag"], [38, 2, 1, "", "is_integer"], [38, 4, 1, "", "numerator"], [38, 4, 1, "", "real"], [38, 2, 1, "", "to_bytes"]], "map2loop.m2l_enums.VerboseLevel": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "as_integer_ratio"], [39, 2, 1, "", "bit_count"], [39, 2, 1, "", "bit_length"], [39, 2, 1, "", "conjugate"], [39, 4, 1, "", "denominator"], [39, 2, 1, "", "from_bytes"], [39, 4, 1, "", "imag"], [39, 2, 1, "", "is_integer"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "real"], [39, 2, 1, "", "to_bytes"]], "map2loop.map2model_wrapper": [[41, 1, 1, "", "Map2ModelWrapper"], [42, 1, 1, "", "VerboseLevel"]], "map2loop.map2model_wrapper.Map2ModelWrapper": [[41, 2, 1, "", "__init__"], [41, 4, 1, "", "fault_fault_relationships"], [41, 2, 1, "", "get_fault_fault_relationships"], [41, 2, 1, "", "get_sorted_units"], [41, 2, 1, "", "get_unit_fault_relationships"], [41, 2, 1, "", "get_unit_unit_relationships"], [41, 4, 1, "", "map_data"], [41, 2, 1, "", "reset"], [41, 2, 1, "", "run"], [41, 4, 1, "", "sorted_units"], [41, 4, 1, "", "unit_fault_relationships"], [41, 4, 1, "", "unit_unit_relationships"], [41, 4, 1, "", "verbose_level"]], "map2loop.map2model_wrapper.VerboseLevel": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "as_integer_ratio"], [42, 2, 1, "", "bit_count"], [42, 2, 1, "", "bit_length"], [42, 2, 1, "", "conjugate"], [42, 4, 1, "", "denominator"], [42, 2, 1, "", "from_bytes"], [42, 4, 1, "", "imag"], [42, 2, 1, "", "is_integer"], [42, 4, 1, "", "numerator"], [42, 4, 1, "", "real"], [42, 2, 1, "", "to_bytes"]], "map2loop.mapdata": [[44, 1, 1, "", "AustraliaStateUrls"], [45, 1, 1, "", "BytesIO"], [46, 1, 1, "", "Config"], [47, 1, 1, "", "Datastate"], [48, 1, 1, "", "Datatype"], [49, 1, 1, "", "GzipFile"], [50, 1, 1, "", "MapData"], [51, 1, 1, "", "VerboseLevel"], [52, 3, 1, "", "WebCoverageService"], [53, 3, 1, "", "generate_random_hex_colors"], [54, 3, 1, "", "uuid4"]], "map2loop.mapdata.AustraliaStateUrls": [[44, 2, 1, "", "__init__"]], "map2loop.mapdata.BytesIO": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "close"], [45, 4, 1, "", "closed"], [45, 2, 1, "", "detach"], [45, 2, 1, "", "fileno"], [45, 2, 1, "", "flush"], [45, 2, 1, "", "getbuffer"], [45, 2, 1, "", "getvalue"], [45, 2, 1, "", "isatty"], [45, 2, 1, "", "read"], [45, 2, 1, "", "read1"], [45, 2, 1, "", "readable"], [45, 2, 1, "", "readinto"], [45, 2, 1, "", "readline"], [45, 2, 1, "", "readlines"], [45, 2, 1, "", "seek"], [45, 2, 1, "", "seekable"], [45, 2, 1, "", "tell"], [45, 2, 1, "", "truncate"], [45, 2, 1, "", "writable"], [45, 2, 1, "", "write"], [45, 2, 1, "", "writelines"]], "map2loop.mapdata.Config": [[46, 2, 1, "", "__init__"], [46, 4, 1, "", "fault_config"], [46, 4, 1, "", "fold_config"], [46, 4, 1, "", "geology_config"], [46, 4, 1, "", "structure_config"], [46, 2, 1, "", "to_dict"], [46, 2, 1, "", "update_from_dictionary"], [46, 2, 1, "", "update_from_file"], [46, 2, 1, "", "update_from_legacy_file"]], "map2loop.mapdata.Datastate": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "as_integer_ratio"], [47, 2, 1, "", "bit_count"], [47, 2, 1, "", "bit_length"], [47, 2, 1, "", "conjugate"], [47, 4, 1, "", "denominator"], [47, 2, 1, "", "from_bytes"], [47, 4, 1, "", "imag"], [47, 2, 1, "", "is_integer"], [47, 4, 1, "", "numerator"], [47, 4, 1, "", "real"], [47, 2, 1, "", "to_bytes"]], "map2loop.mapdata.Datatype": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "as_integer_ratio"], [48, 2, 1, "", "bit_count"], [48, 2, 1, "", "bit_length"], [48, 2, 1, "", "conjugate"], [48, 4, 1, "", "denominator"], [48, 2, 1, "", "from_bytes"], [48, 4, 1, "", "imag"], [48, 2, 1, "", "is_integer"], [48, 4, 1, "", "numerator"], [48, 4, 1, "", "real"], [48, 2, 1, "", "to_bytes"]], "map2loop.mapdata.GzipFile": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "close"], [49, 2, 1, "", "detach"], [49, 2, 1, "", "fileno"], [49, 2, 1, "", "flush"], [49, 2, 1, "", "isatty"], [49, 5, 1, "", "mtime"], [49, 2, 1, "", "read"], [49, 2, 1, "", "read1"], [49, 2, 1, "", "readable"], [49, 2, 1, "", "readline"], [49, 2, 1, "", "readlines"], [49, 2, 1, "", "rewind"], [49, 2, 1, "", "seek"], [49, 2, 1, "", "seekable"], [49, 2, 1, "", "tell"], [49, 2, 1, "", "truncate"], [49, 2, 1, "", "writable"], [49, 2, 1, "", "write"], [49, 2, 1, "", "writelines"]], "map2loop.mapdata.MapData": [[50, 2, 1, "", "__init__"], [50, 4, 1, "", "basal_contacts"], [50, 4, 1, "", "bounding_box"], [50, 4, 1, "", "bounding_box_polygon"], [50, 4, 1, "", "bounding_box_str"], [50, 2, 1, "", "calculate_bounding_box_and_projection"], [50, 2, 1, "", "check_filename"], [50, 2, 1, "", "check_filenames"], [50, 2, 1, "", "check_map"], [50, 4, 1, "", "colour_filename"], [50, 2, 1, "", "colour_units"], [50, 4, 1, "", "config"], [50, 4, 1, "", "config_filename"], [50, 4, 1, "", "contacts"], [50, 4, 1, "", "data"], [50, 4, 1, "", "data_states"], [50, 4, 1, "", "dirtyflags"], [50, 2, 1, "", "export_wkt_format_files"], [50, 2, 1, "", "extract_all_contacts"], [50, 2, 1, "", "extract_basal_contacts"], [50, 4, 1, "", "filenames"], [50, 2, 1, "", "get_bounding_box"], [50, 2, 1, "", "get_colour_filename"], [50, 2, 1, "", "get_config_filename"], [50, 2, 1, "", "get_empty_dataframe"], [50, 2, 1, "", "get_filename"], [50, 2, 1, "", "get_ignore_codes"], [50, 2, 1, "", "get_map_data"], [50, 2, 1, "", "get_raw_map_data"], [50, 2, 1, "", "get_value_from_raster"], [50, 2, 1, "", "get_value_from_raster_df"], [50, 2, 1, "", "get_working_projection"], [50, 2, 1, "", "load_all_map_data"], [50, 2, 1, "", "load_map_data"], [50, 2, 1, "", "load_raster_map_data"], [50, 2, 1, "", "open_http_query"], [50, 2, 1, "", "parse_fault_map"], [50, 2, 1, "", "parse_fault_orientations"], [50, 2, 1, "", "parse_fold_map"], [50, 2, 1, "", "parse_geology_map"], [50, 2, 1, "", "parse_structure_map"], [50, 4, 1, "", "raw_data"], [50, 2, 1, "", "recreate_bounding_box_str"], [50, 2, 1, "", "save_all_map_data"], [50, 2, 1, "", "save_raw_map_data"], [50, 2, 1, "", "set_bounding_box"], [50, 2, 1, "", "set_colour_filename"], [50, 2, 1, "", "set_config_filename"], [50, 2, 1, "", "set_filename"], [50, 2, 1, "", "set_filenames_from_australian_state"], [50, 2, 1, "", "set_ignore_codes"], [50, 2, 1, "", "set_working_projection"], [50, 2, 1, "", "set_working_projection_on_map_data"], [50, 4, 1, "", "tmp_path"], [50, 2, 1, "", "update_filename_with_bounding_box"], [50, 2, 1, "", "update_filename_with_projection"], [50, 4, 1, "", "verbose_level"], [50, 4, 1, "", "working_projection"]], "map2loop.mapdata.VerboseLevel": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "as_integer_ratio"], [51, 2, 1, "", "bit_count"], [51, 2, 1, "", "bit_length"], [51, 2, 1, "", "conjugate"], [51, 4, 1, "", "denominator"], [51, 2, 1, "", "from_bytes"], [51, 4, 1, "", "imag"], [51, 2, 1, "", "is_integer"], [51, 4, 1, "", "numerator"], [51, 4, 1, "", "real"], [51, 2, 1, "", "to_bytes"]], "map2loop.project": [[56, 1, 1, "", "Datatype"], [57, 1, 1, "", "DeformationHistory"], [58, 1, 1, "", "ErrorState"], [59, 1, 1, "", "FaultOrientation"], [60, 1, 1, "", "FaultOrientationNearest"], [61, 1, 1, "", "Map2ModelWrapper"], [62, 1, 1, "", "MapData"], [63, 1, 1, "", "Project"], [64, 1, 1, "", "Sampler"], [65, 1, 1, "", "SamplerDecimator"], [66, 1, 1, "", "SamplerSpacing"], [67, 1, 1, "", "Sorter"], [68, 1, 1, "", "SorterAgeBased"], [69, 1, 1, "", "SorterAlpha"], [70, 1, 1, "", "SorterUseHint"], [71, 1, 1, "", "SorterUseNetworkX"], [72, 1, 1, "", "StratigraphicColumn"], [73, 1, 1, "", "ThicknessCalculator"], [74, 1, 1, "", "ThicknessCalculatorAlpha"], [75, 1, 1, "", "ThrowCalculator"], [76, 1, 1, "", "ThrowCalculatorAlpha"], [77, 1, 1, "", "VerboseLevel"], [78, 3, 1, "", "hex_to_rgb"]], "map2loop.project.Datatype": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "as_integer_ratio"], [56, 2, 1, "", "bit_count"], [56, 2, 1, "", "bit_length"], [56, 2, 1, "", "conjugate"], [56, 4, 1, "", "denominator"], [56, 2, 1, "", "from_bytes"], [56, 4, 1, "", "imag"], [56, 2, 1, "", "is_integer"], [56, 4, 1, "", "numerator"], [56, 4, 1, "", "real"], [56, 2, 1, "", "to_bytes"]], "map2loop.project.DeformationHistory": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "addFault"], [57, 2, 1, "", "addFold"], [57, 4, 1, "", "faultColumns"], [57, 4, 1, "", "faults"], [57, 2, 1, "", "findfault"], [57, 2, 1, "", "findfold"], [57, 4, 1, "", "foldColumns"], [57, 4, 1, "", "folds"], [57, 2, 1, "", "get_fault_relationships_with_ids"], [57, 2, 1, "", "get_faults_for_export"], [57, 2, 1, "", "get_minimum_fault_length"], [57, 4, 1, "", "history"], [57, 4, 1, "", "minimum_fault_length_to_export"], [57, 2, 1, "", "populate"], [57, 2, 1, "", "removeFaultByEventId"], [57, 2, 1, "", "removeFaultByName"], [57, 2, 1, "", "set_minimum_fault_length"], [57, 2, 1, "", "summarise_data"]], "map2loop.project.ErrorState": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "as_integer_ratio"], [58, 2, 1, "", "bit_count"], [58, 2, 1, "", "bit_length"], [58, 2, 1, "", "conjugate"], [58, 4, 1, "", "denominator"], [58, 2, 1, "", "from_bytes"], [58, 4, 1, "", "imag"], [58, 2, 1, "", "is_integer"], [58, 4, 1, "", "numerator"], [58, 4, 1, "", "real"], [58, 2, 1, "", "to_bytes"]], "map2loop.project.FaultOrientation": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "calculate"], [59, 2, 1, "", "type"]], "map2loop.project.FaultOrientationNearest": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "calculate"], [60, 2, 1, "", "type"]], "map2loop.project.Map2ModelWrapper": [[61, 2, 1, "", "__init__"], [61, 4, 1, "", "fault_fault_relationships"], [61, 2, 1, "", "get_fault_fault_relationships"], [61, 2, 1, "", "get_sorted_units"], [61, 2, 1, "", "get_unit_fault_relationships"], [61, 2, 1, "", "get_unit_unit_relationships"], [61, 4, 1, "", "map_data"], [61, 2, 1, "", "reset"], [61, 2, 1, "", "run"], [61, 4, 1, "", "sorted_units"], [61, 4, 1, "", "unit_fault_relationships"], [61, 4, 1, "", "unit_unit_relationships"], [61, 4, 1, "", "verbose_level"]], "map2loop.project.MapData": [[62, 2, 1, "", "__init__"], [62, 4, 1, "", "basal_contacts"], [62, 4, 1, "", "bounding_box"], [62, 4, 1, "", "bounding_box_polygon"], [62, 4, 1, "", "bounding_box_str"], [62, 2, 1, "", "calculate_bounding_box_and_projection"], [62, 2, 1, "", "check_filename"], [62, 2, 1, "", "check_filenames"], [62, 2, 1, "", "check_map"], [62, 4, 1, "", "colour_filename"], [62, 2, 1, "", "colour_units"], [62, 4, 1, "", "config"], [62, 4, 1, "", "config_filename"], [62, 4, 1, "", "contacts"], [62, 4, 1, "", "data"], [62, 4, 1, "", "data_states"], [62, 4, 1, "", "dirtyflags"], [62, 2, 1, "", "export_wkt_format_files"], [62, 2, 1, "", "extract_all_contacts"], [62, 2, 1, "", "extract_basal_contacts"], [62, 4, 1, "", "filenames"], [62, 2, 1, "", "get_bounding_box"], [62, 2, 1, "", "get_colour_filename"], [62, 2, 1, "", "get_config_filename"], [62, 2, 1, "", "get_empty_dataframe"], [62, 2, 1, "", "get_filename"], [62, 2, 1, "", "get_ignore_codes"], [62, 2, 1, "", "get_map_data"], [62, 2, 1, "", "get_raw_map_data"], [62, 2, 1, "", "get_value_from_raster"], [62, 2, 1, "", "get_value_from_raster_df"], [62, 2, 1, "", "get_working_projection"], [62, 2, 1, "", "load_all_map_data"], [62, 2, 1, "", "load_map_data"], [62, 2, 1, "", "load_raster_map_data"], [62, 2, 1, "", "open_http_query"], [62, 2, 1, "", "parse_fault_map"], [62, 2, 1, "", "parse_fault_orientations"], [62, 2, 1, "", "parse_fold_map"], [62, 2, 1, "", "parse_geology_map"], [62, 2, 1, "", "parse_structure_map"], [62, 4, 1, "", "raw_data"], [62, 2, 1, "", "recreate_bounding_box_str"], [62, 2, 1, "", "save_all_map_data"], [62, 2, 1, "", "save_raw_map_data"], [62, 2, 1, "", "set_bounding_box"], [62, 2, 1, "", "set_colour_filename"], [62, 2, 1, "", "set_config_filename"], [62, 2, 1, "", "set_filename"], [62, 2, 1, "", "set_filenames_from_australian_state"], [62, 2, 1, "", "set_ignore_codes"], [62, 2, 1, "", "set_working_projection"], [62, 2, 1, "", "set_working_projection_on_map_data"], [62, 4, 1, "", "tmp_path"], [62, 2, 1, "", "update_filename_with_bounding_box"], [62, 2, 1, "", "update_filename_with_projection"], [62, 4, 1, "", "verbose_level"], [62, 4, 1, "", "working_projection"]], "map2loop.project.Project": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "apply_colour_to_units"], [63, 2, 1, "", "calculate_stratigraphic_order"], [63, 2, 1, "", "calculate_unit_thicknesses"], [63, 2, 1, "", "draw_geology_map"], [63, 2, 1, "", "extract_geology_contacts"], [63, 2, 1, "", "get_fault_orientation"], [63, 2, 1, "", "get_minimum_fault_length"], [63, 2, 1, "", "get_sampler"], [63, 2, 1, "", "get_sorter"], [63, 2, 1, "", "get_thickness_calculator"], [63, 2, 1, "", "get_throw_calculator"], [63, 2, 1, "", "run_all"], [63, 2, 1, "", "sample_map_data"], [63, 2, 1, "", "save_geotiff_raster"], [63, 2, 1, "", "save_into_projectfile"], [63, 2, 1, "", "save_mapdata_to_files"], [63, 2, 1, "", "set_default_samplers"], [63, 2, 1, "", "set_fault_orientation"], [63, 2, 1, "", "set_ignore_codes"], [63, 2, 1, "", "set_minimum_fault_length"], [63, 2, 1, "", "set_sampler"], [63, 2, 1, "", "set_sorter"], [63, 2, 1, "", "set_thickness_calculator"], [63, 2, 1, "", "set_throw_calculator"], [63, 2, 1, "", "sort_stratigraphic_column"], [63, 2, 1, "", "summarise_fault_data"]], "map2loop.project.Sampler": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "sample"], [64, 2, 1, "", "type"]], "map2loop.project.SamplerDecimator": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "sample"], [65, 2, 1, "", "type"]], "map2loop.project.SamplerSpacing": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "sample"], [66, 2, 1, "", "type"]], "map2loop.project.Sorter": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "sort"], [67, 2, 1, "", "type"]], "map2loop.project.SorterAgeBased": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "sort"], [68, 2, 1, "", "type"]], "map2loop.project.SorterAlpha": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "sort"], [69, 2, 1, "", "type"]], "map2loop.project.SorterUseHint": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "sort"], [70, 2, 1, "", "type"]], "map2loop.project.SorterUseNetworkX": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "sort"], [71, 2, 1, "", "type"]], "map2loop.project.StratigraphicColumn": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "addLithologyUnit"], [72, 2, 1, "", "addStratigraphicUnit"], [72, 4, 1, "", "column"], [72, 2, 1, "", "findLithologyUnit"], [72, 2, 1, "", "findStratigraphicUnit"], [72, 4, 1, "", "groups"], [72, 4, 1, "", "lithologyUnitColumns"], [72, 4, 1, "", "lithologyUnits"], [72, 2, 1, "", "populate"], [72, 2, 1, "", "set_stratigraphic_unit_parameter_by_name"], [72, 2, 1, "", "sort_from_relationship_list"], [72, 4, 1, "", "stratigraphicUnitColumns"], [72, 4, 1, "", "stratigraphicUnits"]], "map2loop.project.ThicknessCalculator": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "compute"], [73, 2, 1, "", "type"]], "map2loop.project.ThicknessCalculatorAlpha": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "compute"], [74, 2, 1, "", "type"]], "map2loop.project.ThrowCalculator": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "compute"], [75, 2, 1, "", "type"]], "map2loop.project.ThrowCalculatorAlpha": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "compute"], [76, 2, 1, "", "type"]], "map2loop.project.VerboseLevel": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "as_integer_ratio"], [77, 2, 1, "", "bit_count"], [77, 2, 1, "", "bit_length"], [77, 2, 1, "", "conjugate"], [77, 4, 1, "", "denominator"], [77, 2, 1, "", "from_bytes"], [77, 4, 1, "", "imag"], [77, 2, 1, "", "is_integer"], [77, 4, 1, "", "numerator"], [77, 4, 1, "", "real"], [77, 2, 1, "", "to_bytes"]], "map2loop.sampler": [[80, 1, 1, "", "ABC"], [81, 1, 1, "", "Datatype"], [82, 1, 1, "", "MapData"], [83, 1, 1, "", "Sampler"], [84, 1, 1, "", "SamplerDecimator"], [85, 1, 1, "", "SamplerSpacing"], [86, 3, 1, "", "abstractmethod"]], "map2loop.sampler.ABC": [[80, 2, 1, "", "__init__"]], "map2loop.sampler.Datatype": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "as_integer_ratio"], [81, 2, 1, "", "bit_count"], [81, 2, 1, "", "bit_length"], [81, 2, 1, "", "conjugate"], [81, 4, 1, "", "denominator"], [81, 2, 1, "", "from_bytes"], [81, 4, 1, "", "imag"], [81, 2, 1, "", "is_integer"], [81, 4, 1, "", "numerator"], [81, 4, 1, "", "real"], [81, 2, 1, "", "to_bytes"]], "map2loop.sampler.MapData": [[82, 2, 1, "", "__init__"], [82, 4, 1, "", "basal_contacts"], [82, 4, 1, "", "bounding_box"], [82, 4, 1, "", "bounding_box_polygon"], [82, 4, 1, "", "bounding_box_str"], [82, 2, 1, "", "calculate_bounding_box_and_projection"], [82, 2, 1, "", "check_filename"], [82, 2, 1, "", "check_filenames"], [82, 2, 1, "", "check_map"], [82, 4, 1, "", "colour_filename"], [82, 2, 1, "", "colour_units"], [82, 4, 1, "", "config"], [82, 4, 1, "", "config_filename"], [82, 4, 1, "", "contacts"], [82, 4, 1, "", "data"], [82, 4, 1, "", "data_states"], [82, 4, 1, "", "dirtyflags"], [82, 2, 1, "", "export_wkt_format_files"], [82, 2, 1, "", "extract_all_contacts"], [82, 2, 1, "", "extract_basal_contacts"], [82, 4, 1, "", "filenames"], [82, 2, 1, "", "get_bounding_box"], [82, 2, 1, "", "get_colour_filename"], [82, 2, 1, "", "get_config_filename"], [82, 2, 1, "", "get_empty_dataframe"], [82, 2, 1, "", "get_filename"], [82, 2, 1, "", "get_ignore_codes"], [82, 2, 1, "", "get_map_data"], [82, 2, 1, "", "get_raw_map_data"], [82, 2, 1, "", "get_value_from_raster"], [82, 2, 1, "", "get_value_from_raster_df"], [82, 2, 1, "", "get_working_projection"], [82, 2, 1, "", "load_all_map_data"], [82, 2, 1, "", "load_map_data"], [82, 2, 1, "", "load_raster_map_data"], [82, 2, 1, "", "open_http_query"], [82, 2, 1, "", "parse_fault_map"], [82, 2, 1, "", "parse_fault_orientations"], [82, 2, 1, "", "parse_fold_map"], [82, 2, 1, "", "parse_geology_map"], [82, 2, 1, "", "parse_structure_map"], [82, 4, 1, "", "raw_data"], [82, 2, 1, "", "recreate_bounding_box_str"], [82, 2, 1, "", "save_all_map_data"], [82, 2, 1, "", "save_raw_map_data"], [82, 2, 1, "", "set_bounding_box"], [82, 2, 1, "", "set_colour_filename"], [82, 2, 1, "", "set_config_filename"], [82, 2, 1, "", "set_filename"], [82, 2, 1, "", "set_filenames_from_australian_state"], [82, 2, 1, "", "set_ignore_codes"], [82, 2, 1, "", "set_working_projection"], [82, 2, 1, "", "set_working_projection_on_map_data"], [82, 4, 1, "", "tmp_path"], [82, 2, 1, "", "update_filename_with_bounding_box"], [82, 2, 1, "", "update_filename_with_projection"], [82, 4, 1, "", "verbose_level"], [82, 4, 1, "", "working_projection"]], "map2loop.sampler.Sampler": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "sample"], [83, 2, 1, "", "type"]], "map2loop.sampler.SamplerDecimator": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "sample"], [84, 2, 1, "", "type"]], "map2loop.sampler.SamplerSpacing": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "sample"], [85, 2, 1, "", "type"]], "map2loop.sorter": [[88, 1, 1, "", "ABC"], [89, 1, 1, "", "MapData"], [90, 1, 1, "", "Sorter"], [91, 1, 1, "", "SorterAgeBased"], [92, 1, 1, "", "SorterAlpha"], [93, 1, 1, "", "SorterMaximiseContacts"], [94, 1, 1, "", "SorterObservationProjections"], [95, 1, 1, "", "SorterUseHint"], [96, 1, 1, "", "SorterUseNetworkX"], [97, 3, 1, "", "abstractmethod"]], "map2loop.sorter.ABC": [[88, 2, 1, "", "__init__"]], "map2loop.sorter.MapData": [[89, 2, 1, "", "__init__"], [89, 4, 1, "", "basal_contacts"], [89, 4, 1, "", "bounding_box"], [89, 4, 1, "", "bounding_box_polygon"], [89, 4, 1, "", "bounding_box_str"], [89, 2, 1, "", "calculate_bounding_box_and_projection"], [89, 2, 1, "", "check_filename"], [89, 2, 1, "", "check_filenames"], [89, 2, 1, "", "check_map"], [89, 4, 1, "", "colour_filename"], [89, 2, 1, "", "colour_units"], [89, 4, 1, "", "config"], [89, 4, 1, "", "config_filename"], [89, 4, 1, "", "contacts"], [89, 4, 1, "", "data"], [89, 4, 1, "", "data_states"], [89, 4, 1, "", "dirtyflags"], [89, 2, 1, "", "export_wkt_format_files"], [89, 2, 1, "", "extract_all_contacts"], [89, 2, 1, "", "extract_basal_contacts"], [89, 4, 1, "", "filenames"], [89, 2, 1, "", "get_bounding_box"], [89, 2, 1, "", "get_colour_filename"], [89, 2, 1, "", "get_config_filename"], [89, 2, 1, "", "get_empty_dataframe"], [89, 2, 1, "", "get_filename"], [89, 2, 1, "", "get_ignore_codes"], [89, 2, 1, "", "get_map_data"], [89, 2, 1, "", "get_raw_map_data"], [89, 2, 1, "", "get_value_from_raster"], [89, 2, 1, "", "get_value_from_raster_df"], [89, 2, 1, "", "get_working_projection"], [89, 2, 1, "", "load_all_map_data"], [89, 2, 1, "", "load_map_data"], [89, 2, 1, "", "load_raster_map_data"], [89, 2, 1, "", "open_http_query"], [89, 2, 1, "", "parse_fault_map"], [89, 2, 1, "", "parse_fault_orientations"], [89, 2, 1, "", "parse_fold_map"], [89, 2, 1, "", "parse_geology_map"], [89, 2, 1, "", "parse_structure_map"], [89, 4, 1, "", "raw_data"], [89, 2, 1, "", "recreate_bounding_box_str"], [89, 2, 1, "", "save_all_map_data"], [89, 2, 1, "", "save_raw_map_data"], [89, 2, 1, "", "set_bounding_box"], [89, 2, 1, "", "set_colour_filename"], [89, 2, 1, "", "set_config_filename"], [89, 2, 1, "", "set_filename"], [89, 2, 1, "", "set_filenames_from_australian_state"], [89, 2, 1, "", "set_ignore_codes"], [89, 2, 1, "", "set_working_projection"], [89, 2, 1, "", "set_working_projection_on_map_data"], [89, 4, 1, "", "tmp_path"], [89, 2, 1, "", "update_filename_with_bounding_box"], [89, 2, 1, "", "update_filename_with_projection"], [89, 4, 1, "", "verbose_level"], [89, 4, 1, "", "working_projection"]], "map2loop.sorter.Sorter": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "sort"], [90, 2, 1, "", "type"]], "map2loop.sorter.SorterAgeBased": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "sort"], [91, 2, 1, "", "type"]], "map2loop.sorter.SorterAlpha": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "sort"], [92, 2, 1, "", "type"]], "map2loop.sorter.SorterMaximiseContacts": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "sort"], [93, 2, 1, "", "type"]], "map2loop.sorter.SorterObservationProjections": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "sort"], [94, 2, 1, "", "type"]], "map2loop.sorter.SorterUseHint": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "sort"], [95, 2, 1, "", "type"]], "map2loop.sorter.SorterUseNetworkX": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "sort"], [96, 2, 1, "", "type"]], "map2loop.stratigraphic_column": [[99, 1, 1, "", "StratigraphicColumn"]], "map2loop.stratigraphic_column.StratigraphicColumn": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "addLithologyUnit"], [99, 2, 1, "", "addStratigraphicUnit"], [99, 4, 1, "", "column"], [99, 2, 1, "", "findLithologyUnit"], [99, 2, 1, "", "findStratigraphicUnit"], [99, 4, 1, "", "groups"], [99, 4, 1, "", "lithologyUnitColumns"], [99, 4, 1, "", "lithologyUnits"], [99, 2, 1, "", "populate"], [99, 2, 1, "", "set_stratigraphic_unit_parameter_by_name"], [99, 2, 1, "", "sort_from_relationship_list"], [99, 4, 1, "", "stratigraphicUnitColumns"], [99, 4, 1, "", "stratigraphicUnits"]], "map2loop.thickness_calculator": [[101, 1, 1, "", "ABC"], [102, 1, 1, "", "Datatype"], [103, 1, 1, "", "DipDipDirectionInterpolator"], [104, 1, 1, "", "InterpolatedStructure"], [105, 1, 1, "", "MapData"], [106, 1, 1, "", "StructuralPoint"], [107, 1, 1, "", "ThicknessCalculator"], [108, 1, 1, "", "ThicknessCalculatorAlpha"], [109, 3, 1, "", "abstractmethod"], [110, 3, 1, "", "calculate_endpoints"], [111, 3, 1, "", "create_points"], [112, 3, 1, "", "find_segment_strike_from_pt"], [113, 3, 1, "", "mean"], [114, 3, 1, "", "multiline_to_line"], [115, 3, 1, "", "rebuild_sampled_basal_contacts"]], "map2loop.thickness_calculator.ABC": [[101, 2, 1, "", "__init__"]], "map2loop.thickness_calculator.Datatype": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "as_integer_ratio"], [102, 2, 1, "", "bit_count"], [102, 2, 1, "", "bit_length"], [102, 2, 1, "", "conjugate"], [102, 4, 1, "", "denominator"], [102, 2, 1, "", "from_bytes"], [102, 4, 1, "", "imag"], [102, 2, 1, "", "is_integer"], [102, 4, 1, "", "numerator"], [102, 4, 1, "", "real"], [102, 2, 1, "", "to_bytes"]], "map2loop.thickness_calculator.DipDipDirectionInterpolator": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "interpolate"], [103, 2, 1, "", "setup_grid"], [103, 2, 1, "", "setup_interpolation"], [103, 2, 1, "", "type"]], "map2loop.thickness_calculator.InterpolatedStructure": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "compute"], [104, 4, 1, "", "thickness_calculator_label"], [104, 2, 1, "", "type"]], "map2loop.thickness_calculator.MapData": [[105, 2, 1, "", "__init__"], [105, 4, 1, "", "basal_contacts"], [105, 4, 1, "", "bounding_box"], [105, 4, 1, "", "bounding_box_polygon"], [105, 4, 1, "", "bounding_box_str"], [105, 2, 1, "", "calculate_bounding_box_and_projection"], [105, 2, 1, "", "check_filename"], [105, 2, 1, "", "check_filenames"], [105, 2, 1, "", "check_map"], [105, 4, 1, "", "colour_filename"], [105, 2, 1, "", "colour_units"], [105, 4, 1, "", "config"], [105, 4, 1, "", "config_filename"], [105, 4, 1, "", "contacts"], [105, 4, 1, "", "data"], [105, 4, 1, "", "data_states"], [105, 4, 1, "", "dirtyflags"], [105, 2, 1, "", "export_wkt_format_files"], [105, 2, 1, "", "extract_all_contacts"], [105, 2, 1, "", "extract_basal_contacts"], [105, 4, 1, "", "filenames"], [105, 2, 1, "", "get_bounding_box"], [105, 2, 1, "", "get_colour_filename"], [105, 2, 1, "", "get_config_filename"], [105, 2, 1, "", "get_empty_dataframe"], [105, 2, 1, "", "get_filename"], [105, 2, 1, "", "get_ignore_codes"], [105, 2, 1, "", "get_map_data"], [105, 2, 1, "", "get_raw_map_data"], [105, 2, 1, "", "get_value_from_raster"], [105, 2, 1, "", "get_value_from_raster_df"], [105, 2, 1, "", "get_working_projection"], [105, 2, 1, "", "load_all_map_data"], [105, 2, 1, "", "load_map_data"], [105, 2, 1, "", "load_raster_map_data"], [105, 2, 1, "", "open_http_query"], [105, 2, 1, "", "parse_fault_map"], [105, 2, 1, "", "parse_fault_orientations"], [105, 2, 1, "", "parse_fold_map"], [105, 2, 1, "", "parse_geology_map"], [105, 2, 1, "", "parse_structure_map"], [105, 4, 1, "", "raw_data"], [105, 2, 1, "", "recreate_bounding_box_str"], [105, 2, 1, "", "save_all_map_data"], [105, 2, 1, "", "save_raw_map_data"], [105, 2, 1, "", "set_bounding_box"], [105, 2, 1, "", "set_colour_filename"], [105, 2, 1, "", "set_config_filename"], [105, 2, 1, "", "set_filename"], [105, 2, 1, "", "set_filenames_from_australian_state"], [105, 2, 1, "", "set_ignore_codes"], [105, 2, 1, "", "set_working_projection"], [105, 2, 1, "", "set_working_projection_on_map_data"], [105, 4, 1, "", "tmp_path"], [105, 2, 1, "", "update_filename_with_bounding_box"], [105, 2, 1, "", "update_filename_with_projection"], [105, 4, 1, "", "verbose_level"], [105, 4, 1, "", "working_projection"]], "map2loop.thickness_calculator.StructuralPoint": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "compute"], [106, 4, 1, "", "thickness_calculator_label"], [106, 2, 1, "", "type"]], "map2loop.thickness_calculator.ThicknessCalculator": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "compute"], [107, 2, 1, "", "type"]], "map2loop.thickness_calculator.ThicknessCalculatorAlpha": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "compute"], [108, 2, 1, "", "type"]], "map2loop.throw_calculator": [[117, 1, 1, "", "ABC"], [118, 1, 1, "", "MapData"], [119, 1, 1, "", "ThrowCalculator"], [120, 1, 1, "", "ThrowCalculatorAlpha"], [121, 3, 1, "", "abstractmethod"]], "map2loop.throw_calculator.ABC": [[117, 2, 1, "", "__init__"]], "map2loop.throw_calculator.MapData": [[118, 2, 1, "", "__init__"], [118, 4, 1, "", "basal_contacts"], [118, 4, 1, "", "bounding_box"], [118, 4, 1, "", "bounding_box_polygon"], [118, 4, 1, "", "bounding_box_str"], [118, 2, 1, "", "calculate_bounding_box_and_projection"], [118, 2, 1, "", "check_filename"], [118, 2, 1, "", "check_filenames"], [118, 2, 1, "", "check_map"], [118, 4, 1, "", "colour_filename"], [118, 2, 1, "", "colour_units"], [118, 4, 1, "", "config"], [118, 4, 1, "", "config_filename"], [118, 4, 1, "", "contacts"], [118, 4, 1, "", "data"], [118, 4, 1, "", "data_states"], [118, 4, 1, "", "dirtyflags"], [118, 2, 1, "", "export_wkt_format_files"], [118, 2, 1, "", "extract_all_contacts"], [118, 2, 1, "", "extract_basal_contacts"], [118, 4, 1, "", "filenames"], [118, 2, 1, "", "get_bounding_box"], [118, 2, 1, "", "get_colour_filename"], [118, 2, 1, "", "get_config_filename"], [118, 2, 1, "", "get_empty_dataframe"], [118, 2, 1, "", "get_filename"], [118, 2, 1, "", "get_ignore_codes"], [118, 2, 1, "", "get_map_data"], [118, 2, 1, "", "get_raw_map_data"], [118, 2, 1, "", "get_value_from_raster"], [118, 2, 1, "", "get_value_from_raster_df"], [118, 2, 1, "", "get_working_projection"], [118, 2, 1, "", "load_all_map_data"], [118, 2, 1, "", "load_map_data"], [118, 2, 1, "", "load_raster_map_data"], [118, 2, 1, "", "open_http_query"], [118, 2, 1, "", "parse_fault_map"], [118, 2, 1, "", "parse_fault_orientations"], [118, 2, 1, "", "parse_fold_map"], [118, 2, 1, "", "parse_geology_map"], [118, 2, 1, "", "parse_structure_map"], [118, 4, 1, "", "raw_data"], [118, 2, 1, "", "recreate_bounding_box_str"], [118, 2, 1, "", "save_all_map_data"], [118, 2, 1, "", "save_raw_map_data"], [118, 2, 1, "", "set_bounding_box"], [118, 2, 1, "", "set_colour_filename"], [118, 2, 1, "", "set_config_filename"], [118, 2, 1, "", "set_filename"], [118, 2, 1, "", "set_filenames_from_australian_state"], [118, 2, 1, "", "set_ignore_codes"], [118, 2, 1, "", "set_working_projection"], [118, 2, 1, "", "set_working_projection_on_map_data"], [118, 4, 1, "", "tmp_path"], [118, 2, 1, "", "update_filename_with_bounding_box"], [118, 2, 1, "", "update_filename_with_projection"], [118, 4, 1, "", "verbose_level"], [118, 4, 1, "", "working_projection"]], "map2loop.throw_calculator.ThrowCalculator": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "compute"], [119, 2, 1, "", "type"]], "map2loop.throw_calculator.ThrowCalculatorAlpha": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "compute"], [120, 2, 1, "", "type"]], "map2loop.utils": [[123, 3, 1, "", "calculate_endpoints"], [124, 3, 1, "", "create_points"], [125, 3, 1, "", "find_segment_strike_from_pt"], [126, 3, 1, "", "generate_grid"], [127, 3, 1, "", "generate_random_hex_colors"], [128, 3, 1, "", "hex_to_rgb"], [129, 3, 1, "", "multiline_to_line"], [130, 3, 1, "", "normal_vector_to_dipdirection_dip"], [131, 3, 1, "", "rebuild_sampled_basal_contacts"], [132, 3, 1, "", "strike_dip_vector"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "terms": {"": [1, 14, 24, 32, 33, 35, 36, 37, 38, 39, 41, 42, 47, 48, 49, 51, 56, 57, 58, 61, 77, 81, 102, 106, 130, 132, 134, 141, 142, 145, 147, 148], "0": [3, 4, 24, 27, 29, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 66, 77, 78, 81, 85, 102, 113, 128, 135, 137, 145], "00": [4, 135], "000": 32, "000000": [19, 50, 62, 82, 89, 105, 118], "01dc0bb": 1, "025de10": 1, "03bcbcc": 1, "0439da8": 1, "0479ea1": 1, "052de43": 1, "06413ad": 1, "06ce94d": 1, "085975628": 134, "085d4eb": 1, "08c9f5e": 1, "08e647b": 1, "09b0cb8": 1, "09c53d6": 1, "0a99ac8": 1, "0acf2e4": 1, "0ad6983": 1, "0b100101": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "0b1101": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "0d": 32, "0dba31f": 1, "0e": 32, "0e0bfa7": 1, "0e9ecc8": 1, "0fa6537": 1, "0j": 32, "0x1": 32, "0x100": 32, "0x2233": 32, "0x3322": 32, "0x7ff2fc1fc200": 32, "0x7ff2fc1fce60": 32, "0x7ff2fc1ff320": 32, "1": [4, 24, 27, 29, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 65, 73, 77, 78, 81, 84, 102, 106, 107, 113, 128, 135, 141, 145], "10": [24, 27, 32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 65, 77, 81, 84, 102, 104], "100": 145, "1000": 145, "100m": 148, "10f4fde": 1, "11": [32, 145], "1145": 24, "11a005d": 1, "11f3a04": 1, "12": [3, 4, 32, 135, 145], "1200": 134, "122": 1, "123": 32, "125": 1, "1284": 32, "13": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102, 113], "13090": 32, "130af98": 1, "1344": 32, "14": [32, 145], "15": 32, "15123ac": 1, "1529856466": 134, "15b543b": 1, "16": 32, "16130c6": 1, "165bc17": 1, "16801d2": 1, "16a0247": 1, "16a3b88": 1, "17": [24, 32], "1798": 32, "18": 32, "182079b": 1, "184e522": 1, "19": [24, 32], "1996": 24, "1a08401": 1, "1a2b3c": [53, 127], "1a2ed67": 1, "1a4299": 1, "1a8210d": 1, "1ae2d2d": 1, "1bf6600": 1, "1d": 32, "1d03505": 1, "1fe8c40": 1, "1j": 32, "2": [24, 27, 29, 32, 45, 49, 113, 137, 141, 145], "20": [29, 32, 134], "200": 3, "2000": 145, "2017": 24, "21": [32, 113], "22": 32, "224": 32, "226": 24, "22db166": 1, "23": 32, "231": 24, "2312": 32, "23aeb06": 1, "23c3d76": 1, "23e6b8b": 1, "24": [1, 24], "241444f": 1, "2495a89": 1, "25": [6, 24, 63], "250805": 134, "256": 32, "258254e": 1, "264b4c0": 1, "2689a3a": 1, "26aeba6": 1, "26e4971": 1, "274beca": 1, "2826": 32, "28350": [3, 19, 50, 62, 82, 89, 105, 118], "28354": [134, 145], "286560": 3, "29632": 146, "2a30da4": 1, "2bef09f": 1, "2d": [27, 32], "2f8816b": 1, "2f931c5": 1, "2fffb69": 1, "2nd": 24, "3": [24, 29, 32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 53, 56, 58, 77, 81, 102, 113, 127, 141, 143, 144, 145], "30": [24, 32, 52, 106], "3000": 3, "301242f": 1, "3068335": 24, "31005864": 3, "31962608": 32, "32": 32, "3200": [3, 134], "323": 32, "328058686": 134, "33": 1, "3314828": 1, "3340": 32, "3347751": 1, "336682": 134, "360": 1, "36d59bc": 1, "36ddcca": 1, "37": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "371a2a2": 1, "375": 113, "37f5a96": 1, "38": 1, "3854": 32, "3857": [6, 63], "390b864": 1, "39187f7": 1, "39c65a7": 1, "3c01767": 1, "3d": [1, 134, 142, 143, 145, 146], "3e7688d": 1, "3ed1ea7": 1, "4": [6, 29, 32, 63, 113, 141], "40": 32, "40028a8": 1, "4052eca": 1, "416d101": 1, "42": 24, "4294967296": 32, "4368": 32, "450b372": 1, "47c8d9b": 1, "48": 32, "480": 32, "4882": 32, "48a19e0": 1, "48ac7cb": 1, "48c1093": 1, "4acb184": 1, "4cf51b7": 1, "4d5e6f": [53, 127], "4d66b8f": 1, "4e6348b": 1, "4eb720a": 1, "5": [24, 27, 29, 32, 113], "50": [29, 66, 85, 148], "500": [66, 85], "50751a9": 1, "513": 32, "515": [3, 4, 135], "515687": 3, "51738879026": 3, "527de6c": 1, "5396": 32, "54d5969": 1, "55688fe": 1, "55bc845": 1, "5614446": 1, "5625": 113, "562666": 3, "57407786": 3, "57c2263": 1, "5852551": 145, "58535bf": 1, "5908499": 145, "5910": 32, "59c677c": 1, "59fe775": 1, "5b0ace7": 1, "5b5b503": 1, "5bd773b": 1, "5be5208": 1, "5c525af": 1, "5e": 32, "5e7e5ec": 1, "5e84484": 1, "5f79706": 1, "6": [6, 19, 32, 35, 36, 37, 38, 39, 42, 47, 48, 50, 51, 56, 58, 62, 63, 77, 81, 82, 89, 102, 105, 118, 145], "602635": 145, "615985c": 1, "615d19a": 1, "625": 113, "62e75b0": 1, "6359937": 1, "6405084": 134, "642618": 145, "6458336": 134, "646be9e": 1, "65b23fd": 1, "67023438857": 146, "672bece": 1, "6776e25": 1, "678f25e": 1, "67b453b": 1, "6864d7d": 1, "6926a45": 1, "6acd2d5": 1, "6b311d6": 1, "6b42cdc": 1, "6e064b1": 1, "6e9b068": 1, "6ed00c9": 1, "6ffe6bf": 1, "7": [24, 32, 113, 145], "70710678": 32, "722b98c": 1, "73": 1, "73dd77f": 1, "7493446": 3, "75": 113, "750acbd": 1, "7521273": 3, "76593407": 3, "76d7897": 1, "770": 32, "77b322f": 1, "79791f1": 1, "79cd333": 1, "7a19f34": 1, "7b25639": 1, "7bdd346": 1, "7cbf143": 1, "7dfd91c": 1, "7f8e9d": [53, 127], "8": [24, 32, 113, 144, 145], "80": 24, "80e4445": 1, "813": 32, "8182e50": 1, "81f54fe": 1, "82054df": 1, "84b846a": 1, "85ddcb3": 1, "860106543": 3, "86148a5": 1, "8755": 32, "87713d6": 1, "87863c7": 1, "883b497": 1, "8888": 134, "8889": 134, "89fd60f": 1, "8a137c": 1, "8a55469": 1, "8b4ade0": 1, "9": [27, 32, 49, 145], "90": 141, "900a50d": 1, "917cee6": 1, "9209c25": 1, "9211826": 1, "921539395": 134, "92f73a5": 1, "936b495": 1, "93d47bf": 1, "94af4d9": 1, "951e7f": 1, "9623d48": 1, "968504e": 1, "97bfe16": 1, "98098fc": 1, "999": 137, "9a3e86a": 1, "9b341ad": 1, "9d15efd": 1, "9d57d95": 1, "9de740f": 1, "9e0f977": 1, "9ecd5b4": 1, "9f817be": 1, "A": [6, 12, 14, 19, 20, 24, 28, 29, 30, 32, 41, 45, 46, 49, 50, 53, 57, 61, 62, 63, 72, 78, 82, 86, 89, 97, 99, 104, 105, 106, 109, 110, 111, 115, 118, 121, 123, 124, 127, 128, 131, 141], "As": [32, 147, 148], "At": [23, 49], "BE": 145, "By": [32, 148], "For": [24, 27, 28, 29, 32, 73, 104, 106, 107, 137], "If": [24, 27, 29, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 73, 77, 81, 102, 106, 107, 113, 134, 136, 137, 141, 142, 144, 145, 146, 147, 148], "In": [24, 32, 70, 95, 136, 141, 142, 144, 145, 146, 147, 148], "It": [24, 28, 32, 49, 104, 106, 141, 142, 146], "NOT": [137, 145], "No": 32, "Not": 24, "OR": 24, "One": [24, 32], "Or": 144, "TO": 145, "That": 134, "The": [6, 12, 14, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 72, 73, 77, 78, 81, 82, 85, 86, 89, 97, 99, 102, 103, 104, 105, 107, 109, 110, 112, 114, 115, 118, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 142, 145, 146, 147, 148], "Then": [32, 134], "There": [32, 136, 145, 146, 148], "These": 32, "To": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102, 134, 136, 141, 144, 145, 147, 148], "With": 144, "__": 24, "__call__": 27, "__init__": [6, 8, 12, 14, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 117, 118, 119, 120, 147, 148], "__main__": 32, "__new__": 32, "_array_interface_": 32, "_as_parameter_": 32, "_auto_exampl": 4, "_auto_examples_jupyt": 2, "_auto_examples_python": 2, "_bufferediobas": 45, "_ctype": 32, "_dataset": 1, "_intern": 32, "_rbf": [25, 28, 103], "_type_": [19, 50, 62, 82, 89, 105, 118], "a04fb2a": 1, "a0ef130": 1, "a4165b3": 1, "a5ccb0f": 1, "a5fbdbc": 1, "a716933": 1, "a800455": 1, "a9040b0": 1, "a916343": 1, "a_list": 32, "a_tolist": 32, "aaai": 24, "aab8c8c": 1, "ab": 49, "ab6f276": 1, "abbrevi": [19, 50, 62, 82, 89, 105, 118], "abc": [17, 25, 26, 59, 64, 67, 73, 75, 83, 90, 103, 107, 119, 147, 148], "abcmeta": [20, 30, 86, 97, 109, 121], "abl": 146, "about": [32, 141, 148], "abov": [23, 32, 134, 136, 141, 144, 145, 148], "absolut": [24, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 77, 81, 102, 141], "abstract": [17, 20, 25, 26, 28, 30, 59, 64, 67, 73, 75, 83, 86, 90, 97, 103, 104, 106, 107, 109, 119, 121, 147, 148], "abstractmethod": [147, 148], "accept": [24, 32, 49], "access": [1, 17, 18, 32, 49, 59, 60, 67, 68, 69, 70, 71, 73, 74, 75, 76, 90, 91, 92, 93, 94, 95, 96, 104, 106, 107, 108, 119, 120, 136, 137, 142, 144, 147, 148], "accord": 32, "account": 147, "accross": 145, "achiev": 136, "acm": 24, "across": 147, "act": [6, 19, 32, 50, 62, 63, 82, 89, 105, 118], "action": 1, "actual": [1, 32], "ad": [1, 24, 27, 32, 45, 49, 73, 74, 104, 106, 107, 108, 143, 144, 147, 148], "adapt": [1, 33, 130, 132], "add": [1, 14, 17, 19, 50, 57, 59, 62, 72, 73, 74, 75, 76, 82, 89, 99, 104, 105, 106, 107, 108, 118, 119, 120, 141, 144, 147, 148], "addfault": [14, 57], "addfold": [14, 57], "addit": [1, 24, 142, 144], "addition": 32, "addlithologyunit": [72, 99], "address": 147, "addstratigraphicunit": [72, 99], "adjac": [6, 63, 69, 92, 93, 94, 145, 147, 148], "adjust": 29, "ae6739": 1, "af29ab6": 1, "affect": [24, 32, 145], "aforement": 141, "after": [1, 32, 45, 49, 136, 137, 147, 148], "ag": [6, 63, 68, 91, 137, 141, 145, 147, 148], "again": [1, 32], "agre": 1, "ailler": 134, "algorithm": [6, 24, 32, 63, 68, 69, 70, 71, 91, 92, 93, 94, 95, 96, 145, 146], "alia": [24, 32], "align": 32, "all": [1, 2, 3, 6, 14, 17, 18, 19, 20, 23, 24, 30, 32, 41, 45, 49, 50, 57, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 104, 105, 106, 107, 108, 109, 118, 119, 120, 121, 135, 136, 145, 146, 147, 148], "alloc": 32, "allow": [1, 24, 32, 145], "almost": [32, 144], "along": [6, 27, 32, 63, 66, 85, 145], "alpha": [74, 76, 78, 108, 120, 128, 137], "alphabet": 147, "alreadi": [19, 32, 49, 50, 62, 82, 89, 105, 118, 134], "also": [1, 32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102, 106, 136, 137, 141, 145, 146, 147, 148], "alt_rocktype_column": [137, 141], "alt_unit": 141, "alt_unitname_column": [137, 141], "alter": [32, 145], "altern": [6, 32, 63, 137, 141, 143], "although": 32, "altitud": 1, "alwai": [29, 32, 45, 49], "amax": 32, "amin": 32, "ammend": [14, 57], "among": 32, "an": [6, 12, 16, 22, 23, 24, 26, 29, 32, 33, 35, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 51, 56, 58, 63, 77, 78, 80, 81, 88, 101, 102, 106, 117, 128, 132, 134, 136, 137, 141, 144, 145, 146, 147, 148], "anaconda": [145, 146], "angl": [33, 41, 61, 110, 123, 132], "ani": [14, 19, 20, 25, 28, 30, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 50, 51, 56, 57, 58, 62, 77, 81, 82, 86, 89, 97, 102, 103, 105, 109, 118, 121, 134, 136, 137, 141, 145, 147, 148], "anoth": [24, 32, 134, 136], "api": [24, 32], "appar": 148, "appear": [32, 145], "appli": [6, 32, 63], "applic": [24, 49, 145, 146], "apply_colour_to_unit": [6, 63], "approach": 32, "appropri": [1, 19, 24, 32, 50, 62, 82, 89, 105, 118, 145], "approxim": [29, 45], "apt": 146, "ar": [1, 6, 14, 19, 20, 23, 24, 27, 29, 30, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 50, 51, 56, 57, 58, 62, 63, 72, 73, 74, 77, 78, 81, 82, 86, 89, 97, 99, 102, 104, 105, 106, 107, 108, 109, 118, 121, 128, 134, 136, 137, 141, 145, 146, 147, 148], "arang": 32, "arbitrari": [27, 32], "arbitrarili": 32, "archiv": 32, "area": [32, 104, 141, 145], "arg": [23, 29, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 51, 56, 58, 77, 81, 102, 147, 148], "arg1": [20, 30, 86, 97, 109, 121], "arg2": [20, 30, 86, 97, 109, 121], "argmax": 32, "argmin": 32, "argn": [20, 30, 86, 97, 109, 121], "argpartit": 32, "argsort": 32, "argument": [24, 29, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 77, 81, 102], "arial": 3, "arithmet": [32, 113], "armit": 134, "around": [1, 6, 32, 41, 61, 63], "arr": 32, "arr_t": 32, "arrai": [1, 24, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102, 111, 124, 132], "as_integer_ratio": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "as_paramet": 32, "as_strid": 32, "assign": [1, 17, 18, 32, 59, 60, 73, 74, 106, 107, 108, 145], "associ": [32, 136], "assum": [23, 24, 29], "astyp": 32, "attach": 137, "attempt": [19, 32, 50, 62, 74, 76, 82, 89, 105, 106, 108, 118, 120, 145, 147], "attract": 24, "attribut": [1, 8, 14, 29, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 51, 56, 57, 58, 61, 72, 77, 81, 99, 102, 142, 143, 145, 146], "attributeerror": [32, 49], "au": [1, 145], "australia": [2, 4, 134, 135, 145], "australian": [3, 19, 50, 62, 82, 89, 105, 118], "auth": 52, "auto": [24, 27], "automat": 142, "avail": [1, 17, 18, 29, 32, 49, 59, 60, 67, 68, 69, 70, 71, 73, 74, 75, 76, 90, 91, 92, 93, 94, 95, 96, 104, 106, 107, 108, 119, 120, 147, 148], "averag": [24, 29, 32, 74, 108], "avgdisplac": [75, 76, 119, 120], "avgdownthrowdir": [75, 76, 119, 120], "avoid": [1, 24, 32, 106], "ax": [3, 32, 141], "axi": [27, 32, 145], "axial": [137, 141], "axis1": 32, "axis2": 32, "ayla": 1, "azimuth": [110, 123], "azimuth_deg": [110, 123], "b": [32, 45, 49, 78, 128], "b26d4dd": 1, "b2c6638": 1, "b2f8ea0": 1, "b312176": 1, "b368c19": 1, "b4e6247": 1, "b743de4": 1, "back": [1, 32], "backslash": 145, "backward": 32, "ball_tre": 24, "balltre": 24, "barycentr": 27, "basal": [19, 50, 62, 73, 74, 75, 76, 82, 89, 104, 105, 106, 107, 108, 115, 118, 119, 120, 131, 145, 148], "basal_constact": 1, "basal_contact": [3, 6, 19, 50, 62, 63, 73, 74, 75, 76, 82, 89, 104, 105, 106, 107, 108, 115, 118, 119, 120, 131, 148], "basal_unit": [73, 74, 75, 76, 106, 107, 108, 119, 120, 148], "base": [1, 3, 6, 8, 12, 14, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 115, 117, 118, 119, 120, 131, 134, 145, 147, 148], "baseestim": 24, "basestream": 49, "basetyp": 32, "bash": 144, "basi": [25, 28, 29, 103], "basic": [19, 50, 62, 82, 89, 105, 118, 145], "bbox": [110, 123], "bbox_3d": [3, 134], "bbox_str": [19, 50, 62, 82, 89, 105, 118], "bcee039": 1, "bdbe907": 1, "bea7e7a": 1, "beartyp": [1, 147, 148], "becaus": [1, 32, 147, 148], "becom": [32, 141], "bed": [137, 141], "bedding_text": 137, "been": [19, 45, 49, 50, 62, 82, 89, 105, 118, 145, 147, 148], "befor": [1, 6, 19, 27, 32, 41, 50, 61, 62, 63, 82, 89, 105, 118, 143], "begin": [1, 32, 35, 36, 37, 38, 39, 42, 47, 48, 49, 51, 56, 58, 77, 81, 102, 143], "behav": 32, "behavior": 32, "behaviour": [1, 32], "behind": 32, "being": [1, 6, 24, 32, 63, 141], "below": [24, 32, 136, 137, 141, 145, 147, 148], "beoi": 137, "best": [3, 134, 141, 145, 146, 148], "beta": 1, "better": 1, "between": [3, 19, 24, 29, 32, 50, 62, 66, 67, 68, 69, 70, 71, 82, 85, 89, 90, 91, 92, 93, 94, 95, 96, 104, 105, 106, 118, 137, 141, 147], "bewar": 32, "bf100b2": 1, "bfebedc": 1, "big": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "bin": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "binari": [32, 35, 36, 37, 38, 39, 42, 47, 48, 49, 51, 56, 58, 77, 81, 102], "bind": 1, "bit": [1, 32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "bit_count": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "bit_length": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "blank": [19, 50, 62, 82, 89, 105, 118, 137, 141], "block": [1, 32, 45, 49], "blockingioerror": 49, "bo": 141, "bob": 145, "bool": [6, 12, 19, 24, 27, 32, 46, 50, 62, 63, 82, 89, 105, 118], "boolean": [1, 19, 32, 50, 62, 82, 89, 105, 118], "boolgeeda_iron_form": 3, "borrow": 32, "both": [32, 104, 148], "bottom": [73, 74, 106, 107, 108, 145], "bound": [3, 19, 24, 25, 26, 28, 31, 45, 50, 62, 82, 89, 103, 105, 110, 118, 123, 126, 134, 145], "boundari": [6, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 63, 66, 77, 81, 85, 102], "bounding_box": [3, 6, 19, 25, 26, 28, 31, 50, 62, 63, 82, 89, 103, 105, 118, 126, 134, 145], "bounding_box_polygon": [19, 50, 62, 82, 89, 105, 118], "bounding_box_str": [19, 50, 62, 82, 89, 105, 118], "box": [3, 19, 25, 26, 28, 31, 50, 62, 82, 89, 103, 105, 110, 118, 123, 126, 134], "boyan": 134, "branch": 1, "break": [1, 32], "brief": [147, 148], "brockman": [1, 134], "brockman_iron_form": 3, "brodar": 134, "brute": 24, "buffer": [32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 77, 81, 102], "bufferediobas": 49, "bug": 32, "build": [1, 143], "built": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102, 134], "builtin": 32, "bulk": 24, "bunjinah_form": 3, "bypass": 32, "byte": [32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 77, 81, 102], "bytearrai": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "byteord": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "bytesio": [32, 49], "byteswap": 32, "c": [20, 27, 30, 32, 86, 97, 109, 121, 141, 144, 145], "c0ec36b": 1, "c1": 27, "c125c63": 1, "c1bf893": 1, "c2c020f": 1, "c31bb1c": 1, "c3339a6": 1, "c36995d": 1, "c475513": 1, "c5cf102": 1, "c643721": 1, "c652d84": 1, "c775ed9": 1, "c7e42a6": 1, "c975f6f": 1, "c_contigu": 32, "c_doubl": 32, "c_int": 32, "c_intp": 32, "c_long": 32, "c_long_array_2": 32, "c_longlong": 32, "c_short": 32, "c_uint": 32, "c_uint32": 32, "c_uint64": 32, "c_ulong": 32, "c_void_p": 32, "ca": 32, "calc": 1, "calcul": [1, 3, 6, 17, 18, 19, 24, 32, 33, 50, 59, 60, 62, 63, 73, 74, 75, 76, 82, 89, 104, 105, 106, 107, 108, 110, 118, 119, 120, 123, 130, 132, 141, 143, 145, 146, 147], "calculate_bounding_box_and_project": [19, 50, 62, 82, 89, 105, 118], "calculate_stratigraphic_ord": [6, 63], "calculate_unit_thick": [6, 63], "call": [20, 30, 32, 45, 86, 97, 109, 121, 136, 137, 141, 143, 145], "callabl": [24, 29], "can": [1, 20, 24, 27, 29, 30, 32, 33, 45, 49, 86, 97, 109, 121, 132, 134, 136, 137, 141, 142, 144, 145, 146, 147, 148], "canada": 134, "cannot": [3, 20, 27, 30, 32, 49, 86, 97, 109, 121], "capabl": [141, 147, 148], "card": 134, "cardin": 137, "carrai": 32, "cartesian": [19, 50, 62, 82, 89, 105, 118], "case": [1, 24, 29, 32, 49, 66, 70, 85, 95, 134, 136, 145], "cast": 32, "catch": [1, 147, 148], "catchal": [1, 17, 18, 59, 60, 67, 68, 69, 70, 71, 73, 74, 75, 76, 90, 91, 92, 93, 94, 95, 96, 104, 106, 107, 108, 119, 120, 147, 148], "caus": [32, 147, 148], "cbb5489": 1, "cbd05f2": 1, "cc833bb": 1, "cd": [145, 146], "cdd3eab": 1, "cdist": 29, "ceg": 32, "cell": 145, "certain": 32, "cf0de5b": 1, "cf21a6b": 1, "chain": 1, "chang": [1, 24, 27, 32, 45, 49, 137, 141, 143, 146, 147, 148], "channel": [1, 144], "charact": 49, "check": [1, 19, 23, 24, 27, 32, 50, 62, 82, 89, 105, 106, 118, 136, 144, 145, 146], "check_filenam": [19, 50, 62, 82, 89, 105, 118], "check_map": [19, 50, 62, 82, 89, 105, 118], "checker": [1, 23], "choic": 32, "choos": [3, 24, 32, 145, 146], "chunk": 24, "ci": 1, "circumst": 32, "ckdtree": 24, "clarif": [1, 136], "clariti": 1, "clash": 1, "class": [1, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 147, 148], "classif": [137, 141], "clear": 32, "cli": 144, "click": [144, 145], "clip": [19, 32, 50, 62, 82, 89, 105, 110, 118, 123], "clone": 144, "clongdoubl": 32, "close": [32, 45, 49], "closer": [112, 125], "closest": [32, 112, 125], "cloughtocher2dinterpol": 27, "cluster": 24, "clustermixin": 24, "clut": [1, 6, 63], "clut_file_legaci": [6, 63, 145], "clut_filenam": [6, 63, 145], "coars": [137, 141], "coarser": [141, 148], "code": [1, 2, 3, 6, 19, 32, 33, 50, 53, 62, 63, 78, 82, 89, 105, 118, 127, 128, 130, 132, 134, 136, 137, 141, 143, 144, 145], "collaps": 32, "collect": [147, 148], "colloc": 1, "colmn": [72, 99], "color": [53, 78, 127, 128], "colorbar": 27, "colour": [1, 6, 19, 50, 62, 63, 82, 89, 105, 118, 142, 143, 145, 146], "colour_filenam": [19, 50, 62, 82, 89, 105, 118], "colour_unit": [19, 50, 62, 82, 89, 105, 118], "column": [1, 6, 12, 14, 19, 32, 33, 41, 46, 50, 57, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 82, 84, 85, 89, 90, 99, 104, 105, 106, 107, 108, 115, 118, 119, 120, 130, 131, 132, 136, 143, 147, 148], "com": 144, "combin": 148, "come": [32, 144], "command": [136, 144, 145, 146], "comment": [1, 145], "compar": [32, 148], "comparison": 1, "compat": [23, 32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "compil": 32, "complement": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "complet": [137, 147, 148], "complex": [24, 27, 32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102, 141], "complex128": 32, "complexwarn": 32, "compli": [25, 26, 28, 31, 103, 126], "complianc": 1, "complic": 32, "compon": [1, 24, 33, 130, 132], "components_": 24, "compos": 144, "compress": [32, 49], "compresslevel": 49, "comput": [1, 24, 73, 74, 75, 76, 104, 106, 107, 108, 119, 120, 148], "concat": 1, "concern": 145, "conda": [1, 144, 145, 146], "condit": 32, "confer": 24, "config": [1, 19, 50, 62, 82, 89, 105, 118, 142, 143, 144, 145, 146], "config_dictionari": [6, 63], "config_filenam": [6, 19, 50, 62, 63, 82, 89, 105, 118, 145], "configur": [6, 63], "conj": 32, "conjug": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "connect": [1, 45], "consecut": 32, "consid": [24, 29], "consist": [1, 19, 24, 50, 62, 82, 89, 105, 118], "consol": [6, 19, 41, 50, 61, 62, 63, 82, 89, 105, 118, 146], "consolid": 134, "constant": 29, "construct": [24, 27, 32], "constructor": [32, 49], "consum": 32, "contact": [1, 3, 6, 19, 50, 62, 63, 67, 68, 69, 70, 71, 73, 74, 75, 76, 82, 89, 90, 91, 92, 93, 94, 95, 96, 104, 105, 106, 107, 108, 112, 115, 118, 119, 120, 125, 131, 141, 145, 146, 147, 148], "contain": [6, 12, 14, 19, 24, 25, 26, 28, 31, 32, 46, 50, 57, 62, 63, 64, 66, 67, 72, 73, 74, 75, 76, 82, 83, 85, 89, 90, 99, 103, 105, 106, 107, 108, 111, 115, 118, 119, 120, 124, 126, 131, 134, 136, 137, 141, 142, 144, 145, 147, 148], "container_nameorid": 144, "containeris": 144, "content": [32, 45, 136], "context": 24, "contigu": [27, 32, 147], "continu": 145, "contribut": 144, "control": [32, 49, 147, 148], "conveni": 32, "convent": [1, 24, 137], "convers": [1, 32], "convert": [1, 12, 24, 32, 35, 36, 37, 38, 39, 42, 46, 47, 48, 51, 56, 58, 77, 78, 81, 102, 114, 128, 129, 137, 141, 142], "convex": 27, "cooki": 52, "coordin": [19, 27, 28, 29, 31, 50, 62, 82, 89, 105, 110, 111, 115, 118, 123, 124, 126, 131, 134, 145], "copi": [24, 32, 137], "copyto": 32, "core": [24, 32], "core_sample_indices_": 24, "correct": [1, 14, 27, 32, 57, 145, 146], "correctli": [1, 145], "correspond": [32, 33, 115, 130, 131, 132, 141], "could": [32, 141, 147, 148], "count": [1, 32, 35, 36, 37, 38, 39, 42, 47, 48, 49, 51, 56, 58, 77, 81, 102], "cover": [32, 134, 137, 141], "cr": 145, "crash": 32, "creat": [1, 6, 16, 19, 22, 32, 50, 62, 63, 80, 82, 88, 89, 101, 105, 111, 117, 118, 124, 136, 142, 143, 146, 147, 148], "creation": [32, 136], "csr_matrix": 24, "csv": [6, 19, 50, 62, 63, 82, 89, 105, 118, 142, 143, 145, 146], "ctype": 32, "ctypeslib": 32, "cube": 27, "cubic": [27, 29], "cumprod": 32, "cumsum": 32, "cumul": 32, "current": [32, 45, 49, 94, 141, 145], "curvatur": 27, "cusersbobdocumentslithologi": 145, "cutoff": [6, 14, 57, 63], "cycl": [19, 50, 62, 82, 89, 105, 118], "d": [24, 27, 29, 32, 113, 137, 141, 145, 146], "d0e38db": 1, "d0ed967": 1, "d2df267": 1, "d49a53f": 1, "d615498": 1, "d85ffb9": 1, "d8804de": 1, "d90df18": 1, "data": [1, 6, 12, 14, 17, 18, 19, 24, 25, 26, 27, 28, 29, 31, 32, 41, 45, 46, 49, 50, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 99, 103, 104, 105, 106, 107, 108, 113, 115, 118, 119, 120, 126, 131, 134, 136, 142, 143, 145, 146, 147, 148], "data_a": 32, "data_st": [19, 50, 62, 82, 89, 105, 118], "data_typ": [25, 103], "databas": 24, "datafil": 1, "datafram": [1, 6, 14, 17, 18, 19, 25, 26, 28, 41, 50, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 99, 103, 104, 105, 106, 107, 108, 110, 115, 118, 119, 120, 123, 131, 147, 148], "dataset": [1, 19, 24, 50, 62, 82, 89, 105, 118], "datatyp": [3, 6, 19, 32, 50, 62, 63, 82, 89, 105, 118, 145, 147, 148], "datayp": [6, 63], "date": 137, "datetim": 145, "db6ac5b": 1, "dc4d8cc": 1, "dc7c6da": 1, "dc85b2e": 1, "dcbad85": 1, "dd": 141, "dd4f365": 1, "dd99e15": 1, "ddof": 32, "de": 134, "deal": 1, "dealloc": 32, "debug": 1, "decent": 141, "decid": [136, 137, 145], "decim": [32, 65, 66, 84, 85, 113, 145], "declar": [1, 20, 30, 86, 97, 109, 121], "decor": [20, 30, 86, 97, 109, 121], "deefe49": 1, "deep": [24, 32], "def": [20, 30, 86, 97, 109, 121, 147, 148], "default": [1, 6, 12, 14, 19, 24, 25, 27, 28, 29, 31, 32, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 65, 66, 72, 77, 78, 81, 82, 84, 85, 89, 99, 102, 103, 105, 118, 126, 128, 137, 141, 148], "default_rng": [27, 29], "defin": [1, 3, 6, 19, 24, 32, 41, 50, 61, 62, 63, 82, 89, 105, 106, 118, 134, 137, 141, 143], "definit": [147, 148], "deform": [14, 57, 141], "deformation_histori": [6, 63], "deformationhistori": [6, 63], "degre": [33, 106, 110, 123, 132, 141], "delaunai": 27, "delet": [1, 137], "dem": [1, 142, 146], "demonstr": [137, 141], "denomin": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "denser": 24, "densiti": 24, "depend": [1, 24, 32, 49, 106, 144, 145, 146, 147, 148], "deploi": 1, "deprec": [1, 32], "depth": 32, "deriv": [17, 20, 25, 26, 30, 59, 64, 67, 73, 75, 83, 86, 90, 97, 103, 107, 109, 119, 121, 147, 148], "desc": 141, "desciption_column": 141, "describ": [32, 145, 146], "descript": [1, 29, 32, 137, 141, 147, 148], "description_column": [137, 141], "descriptn": 137, "descriptor": [20, 30, 32, 45, 86, 97, 109, 121], "design": 141, "desir": [32, 136], "despit": 32, "detach": [45, 49], "detail": [1, 3, 24, 32, 134, 141], "determin": [6, 29, 32, 35, 36, 37, 38, 39, 42, 47, 48, 49, 51, 56, 58, 63, 77, 81, 102, 148], "determinist": 106, "develop": [134, 143], "deviat": [32, 104, 106], "devic": 45, "df": [19, 50, 62, 82, 89, 105, 118], "di": 29, "diag": 32, "diagon": 32, "dict": [6, 12, 14, 19, 24, 25, 26, 28, 31, 32, 46, 50, 57, 62, 63, 72, 82, 89, 99, 103, 105, 110, 118, 123, 126], "dictionari": [1, 6, 12, 25, 26, 28, 31, 32, 46, 63, 103, 126, 136], "differ": [19, 27, 32, 50, 62, 82, 89, 105, 106, 118, 136, 141, 145, 146], "difficult": [141, 147, 148], "digit": [6, 63, 141, 142], "dim": 32, "dimens": [27, 29, 32, 106], "dimension": 32, "dip": [1, 33, 104, 106, 130, 132, 137, 141], "dip_column": [137, 141], "dip_dir": 137, "dip_est": 137, "dip_null_valu": 137, "dipdir": 1, "dipdir_column": [137, 141], "dipdir_flag": 137, "dipestimate_column": 137, "dipestimate_text": 137, "dir": 1, "direct": [31, 32, 94, 126, 130, 137, 141], "directli": [32, 145, 146], "directori": [1, 6, 19, 50, 62, 63, 82, 89, 105, 118, 134, 145, 146], "dirti": [19, 50, 62, 82, 89, 105, 118], "dirtyflag": [19, 50, 62, 82, 89, 105, 118], "disabl": 45, "discern": 49, "disconnect": [45, 49], "discourag": 32, "discov": 24, "discoveri": 24, "discret": 134, "discuss": 1, "distanc": [3, 24, 25, 28, 29, 66, 85, 103, 106, 110, 123, 143], "distinct": 32, "do": [29, 32, 49, 141, 145, 146, 147, 148], "doc": 1, "docker": [1, 134, 143], "dockerfil": 1, "docstr": 1, "document": [24, 29, 32, 134, 137, 145, 146], "documentaion": 1, "doe": [1, 32, 45, 49, 106], "doesn": [1, 32, 49, 141], "doi": 24, "domain": 29, "don": [137, 141, 145], "done": [32, 70, 95], "doubl": [1, 145], "dowload": 145, "download": [1, 2, 3, 144], "draw_geology_map": [6, 63], "dtm": [1, 6, 19, 50, 62, 63, 82, 89, 104, 105, 118, 142, 145, 146], "dtm_filenam": [6, 63, 145], "dtype": [14, 32, 57, 72, 99], "duck": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "dump": 32, "duplic": [1, 24], "dure": 24, "e": [19, 24, 29, 32, 50, 62, 78, 82, 89, 105, 118, 128, 137, 141, 142, 144, 145, 146], "e08e010": 1, "e118f6a": 1, "e1778b7": 1, "e263389": 1, "e35f0b6": 1, "e43968c": 1, "e46c45": 1, "e479875": 1, "e6315c4": 1, "e877d93": 1, "e8b1ada": 1, "e9d7add": 1, "ea6d0cd": 1, "eac8ab2": 1, "each": [6, 14, 19, 24, 27, 29, 32, 33, 45, 49, 50, 57, 62, 63, 82, 89, 93, 104, 105, 106, 111, 118, 124, 130, 132, 141, 145, 147, 148], "eachoth": 145, "eas": 142, "easier": [1, 32, 141], "easiest": 136, "east": [19, 50, 62, 82, 89, 105, 118, 134], "ecb1092": 1, "ecd1e44": 1, "ecosystem": 142, "edit": [1, 136, 144], "efe4b9d": 1, "effect": [24, 49], "eg": [137, 141], "egd": 145, "egg": 141, "either": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102, 134, 137], "element": [19, 24, 32, 45, 50, 62, 82, 89, 105, 111, 118, 124, 136, 137], "els": [1, 32], "empti": [1, 19, 32, 45, 49, 50, 62, 82, 89, 105, 113, 118, 137, 145], "emu": 141, "emu_egg_fault": 141, "enabl": 142, "enable_metadata_rout": 24, "encapsul": 24, "end": [1, 3, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 77, 81, 102, 141], "endian": 32, "endpoint": [1, 110, 123], "engin": 134, "enlarg": 32, "enough": 32, "ensur": [1, 27, 137, 141, 145, 146, 147, 148], "enter": 145, "entir": [32, 45], "entri": [6, 19, 32, 50, 62, 63, 82, 89, 105, 118], "enum": [19, 38, 50, 62, 82, 89, 105, 118], "env": 1, "environ": [1, 144, 145, 146], "eof": [45, 49], "ep": 24, "epsg": [3, 6, 19, 50, 62, 63, 82, 89, 105, 118, 134, 145], "epsilon": 29, "equal": [27, 32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "equiv": 32, "equival": [24, 32, 45, 49], "eric": 134, "errant": 1, "error": [24, 32, 145], "ester": 24, "estim": [6, 18, 24, 41, 60, 61, 63, 74, 76, 104, 108, 120, 137], "etc": [32, 141], "euclidean": [24, 29], "evalu": 32, "even": [32, 134, 147, 148], "event": [14, 57, 141], "eventid": [14, 57], "ever": 145, "everi": [23, 65, 66, 84, 85, 145], "everyon": 144, "everyth": 1, "exactli": 32, "examin": 32, "exampl": [1, 3, 4, 24, 27, 29, 32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 53, 56, 58, 77, 81, 102, 127, 134, 135, 136, 137, 141, 142, 144, 145, 146, 147, 148], "exce": 49, "except": [1, 32, 49, 147], "exec": 144, "execut": [4, 17, 28, 41, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 104, 107, 108, 119, 120, 135, 147, 148], "exhibit": 32, "exist": [1, 24, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 51, 56, 58, 77, 81, 102, 106, 115, 131, 147, 148], "exp": 29, "expand": 24, "expect": [32, 145, 146], "expens": 32, "explain": [141, 145, 146], "explan": [32, 136, 137, 146], "explanatori": 145, "export": [1, 14, 57, 143], "export_wkt_format_fil": [19, 50, 62, 82, 89, 105, 118], "expos": 32, "express": 143, "extend": [134, 147, 148], "extens": [6, 19, 50, 62, 63, 82, 89, 105, 118, 134], "extent": [6, 63, 143], "extra": 137, "extract": [6, 19, 50, 62, 63, 82, 89, 105, 118], "extract_all_contact": [19, 50, 62, 82, 89, 105, 118], "extract_basal_contact": [19, 50, 62, 82, 89, 105, 118], "extract_geology_contact": [6, 63], "ey": 32, "f": [32, 113, 137, 141], "f08c42a": 1, "f0e82e2": 1, "f10270d": 1, "f1879ce": 1, "f25d27": 136, "f3766a8": 1, "f401": 1, "f5a0ffb": 1, "f627f83": 1, "f69b42f": 1, "f6a2207": 1, "f6ec60f": 1, "f6f59cf": 1, "f703832": 1, "f71945": 136, "f7cbd78": 1, "f81d9b4": 1, "f8ccac7": 1, "f8d6d2c": 1, "f90159a": 1, "f9f56cc": 1, "f_contigu": 32, "fa": 32, "fa3e4bb": 1, "fac": 32, "factori": 52, "fail": [19, 32, 50, 62, 82, 89, 105, 118], "failur": [19, 50, 62, 82, 89, 105, 118], "fair": 144, "fals": [6, 12, 19, 24, 27, 32, 35, 36, 37, 38, 39, 42, 45, 46, 47, 48, 49, 50, 51, 56, 58, 62, 63, 77, 81, 82, 89, 102, 105, 118, 137, 145], "far": 49, "farrai": 32, "faster": 32, "fastest": 49, "fault": [1, 3, 6, 12, 14, 17, 18, 19, 41, 46, 50, 57, 59, 60, 61, 62, 63, 72, 75, 76, 82, 89, 99, 105, 118, 119, 120, 137, 141, 142, 143, 145, 147], "fault1": [41, 61], "fault2": [41, 61], "fault_config": [12, 46], "fault_fault_relationship": [14, 41, 57, 61], "fault_filenam": [6, 63, 145], "fault_nam": 136, "fault_observ": [14, 57], "fault_orient": [3, 6, 59, 60, 63], "fault_orientation_filenam": [6, 63], "fault_relationship": [14, 57], "fault_text": 137, "fault_trac": [17, 18, 59, 60], "faultcolumn": [14, 57], "faultorient": [6, 18, 60, 63], "faults_map_data": [14, 57], "fb44fef": 1, "fbcf10d": 1, "fc86b89": 1, "fd263c2": 1, "fda68e6": 1, "fdip": [137, 141], "fdipdir": [137, 141], "fdipest": 137, "fdipnul": [137, 141], "featur": [24, 137, 141, 142, 145, 147, 148], "feature_names_in_": 24, "featureid": [1, 115, 131], "fed": [6, 63], "feedback": 145, "feee724": 1, "feel": 137, "few": 1, "fid": 32, "field": [1, 32, 49, 137, 141, 147, 148], "file": [1, 3, 4, 6, 12, 19, 32, 45, 46, 49, 50, 62, 63, 82, 89, 105, 118, 135, 142, 143, 144], "file_map": [12, 46], "filenam": [1, 6, 12, 19, 32, 46, 49, 50, 62, 63, 82, 89, 105, 118], "fileno": [32, 45, 49], "fileobj": 49, "fill": [1, 27, 32, 75, 76, 119, 120, 137, 145], "fill_valu": 27, "filter": [14, 57], "final": [32, 136, 147, 148], "find": [1, 14, 19, 24, 32, 50, 57, 62, 72, 82, 89, 99, 104, 105, 106, 112, 115, 118, 125, 131, 134, 136, 141, 144], "findfault": [14, 57], "findfold": [14, 57], "findlithologyunit": [72, 99], "findstratigraphicunit": [72, 99], "fine": [32, 141], "finish": [147, 148], "first": [27, 32, 49, 134, 141, 147], "fit": [24, 32, 141], "fit_predict": 24, "fix": [32, 134], "flag": [1, 3, 6, 19, 32, 50, 62, 63, 82, 89, 105, 118, 137, 145], "flake8": 1, "flat": 32, "flatit": 32, "flatten": [29, 32], "flavour": 144, "float": [1, 6, 14, 19, 24, 26, 27, 29, 32, 33, 35, 36, 37, 38, 39, 42, 47, 48, 50, 51, 56, 57, 58, 62, 63, 66, 72, 77, 78, 81, 82, 85, 89, 99, 102, 105, 110, 112, 118, 123, 125, 128, 132], "float32": 32, "float64": 32, "float_": 32, "flush": [45, 49], "fnc": 32, "fo": [6, 63], "fold": [1, 6, 12, 14, 19, 46, 50, 57, 62, 63, 72, 82, 89, 99, 105, 118, 137, 141], "fold_config": [12, 46], "fold_filenam": [6, 63, 145], "fold_text": 137, "foldcolumn": [14, 57], "folder": [1, 144, 145], "foldname_column": 137, "foliat": [137, 141], "follow": [25, 26, 28, 31, 32, 103, 106, 126, 134, 136, 137, 142, 144, 145, 146], "forc": [1, 17, 26, 32, 59, 64, 67, 73, 75, 83, 90, 107, 119, 141, 147, 148], "forg": 144, "forgot": 1, "form": [19, 24, 32, 50, 62, 82, 89, 105, 118], "format": [1, 6, 19, 25, 26, 28, 31, 32, 50, 62, 63, 82, 89, 103, 105, 118, 126, 141, 142, 145, 147], "former": 32, "formula": [104, 106], "fortescue_group": 3, "fortran": 32, "forward": 144, "found": [24, 32, 147], "four": 32, "fraction": 113, "frame": [6, 14, 17, 18, 19, 41, 50, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 99, 104, 105, 106, 107, 108, 118, 119, 120, 147, 148], "free": [32, 137], "from": [1, 3, 4, 6, 12, 14, 17, 19, 20, 23, 24, 25, 26, 27, 29, 30, 32, 33, 45, 46, 49, 50, 57, 59, 62, 63, 64, 67, 73, 74, 75, 76, 82, 83, 86, 89, 90, 97, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 118, 119, 120, 121, 124, 125, 130, 131, 132, 134, 135, 136, 137, 142, 145, 146, 147, 148], "from_byt": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "frombuff": 32, "fromfil": 32, "full": [3, 6, 32, 49, 63, 65, 66, 84, 85, 115, 131, 145], "fulli": 32, "funcobj": [20, 30, 86, 97, 109, 121], "function": [1, 6, 7, 15, 21, 24, 25, 28, 29, 32, 41, 43, 49, 52, 55, 61, 63, 79, 87, 100, 103, 116, 122, 145, 147, 148], "funtion": 145, "further": [24, 32, 136], "futur": [1, 32, 106], "g": [19, 24, 29, 32, 50, 62, 78, 82, 89, 105, 118, 128, 137, 141, 142, 145, 146], "g2": 141, "ga": 1, "galleri": [2, 3, 135], "gamma": 1, "gap": 141, "garbag": 32, "gaussian": 29, "gdal": 1, "gener": [1, 2, 3, 32, 53, 54, 106, 127, 134, 137, 141, 142, 145, 146], "gentl": 137, "geo": [65, 66, 73, 74, 75, 76, 84, 85, 104, 106, 107, 108, 119, 120, 148], "geodatafram": [6, 14, 17, 18, 19, 50, 57, 59, 60, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 82, 83, 84, 85, 89, 99, 104, 105, 106, 107, 108, 115, 118, 119, 120, 131, 147, 148], "geograph": 1, "geoloci": 134, "geolog": [1, 73, 106, 107, 134, 142, 143, 145], "geologi": [1, 3, 6, 12, 19, 46, 50, 62, 63, 82, 89, 105, 118, 137, 145, 147], "geology_config": [12, 46], "geology_filenam": [6, 63, 145], "geology_map_data": [72, 99], "geometr": [147, 148], "geometri": [3, 66, 73, 74, 75, 76, 85, 106, 107, 108, 112, 114, 115, 119, 120, 125, 129, 131, 141, 148], "geopanda": [1, 14, 18, 19, 50, 57, 60, 62, 64, 65, 66, 72, 73, 74, 75, 76, 82, 83, 84, 85, 89, 99, 104, 105, 106, 107, 108, 115, 118, 119, 120, 131, 147, 148], "geophys": 134, "geopnt_id": [137, 141], "geoseri": [112, 125], "geospati": 134, "geotiff": [1, 6, 19, 50, 62, 63, 82, 89, 105, 118], "get": [1, 6, 14, 19, 24, 32, 45, 50, 57, 62, 63, 82, 89, 105, 118, 136, 143, 144, 145], "get_bounding_box": [19, 50, 62, 82, 89, 105, 118], "get_colour_filenam": [19, 50, 62, 82, 89, 105, 118], "get_config_filenam": [19, 50, 62, 82, 89, 105, 118], "get_empty_datafram": [19, 50, 62, 82, 89, 105, 118], "get_fault_fault_relationship": [41, 61], "get_fault_orient": [6, 63], "get_fault_relationships_with_id": [14, 57], "get_faults_for_export": [14, 57], "get_filenam": [19, 50, 62, 82, 89, 105, 118], "get_ignore_cod": [19, 50, 62, 82, 89, 105, 118], "get_map_data": [19, 50, 62, 82, 89, 105, 118, 147, 148], "get_metadata_rout": 24, "get_minimum_fault_length": [6, 14, 57, 63], "get_param": 24, "get_raw_map_data": [19, 50, 62, 82, 89, 105, 118], "get_sampl": [6, 63], "get_sort": [6, 63], "get_sorted_unit": [41, 61], "get_thickness_calcul": [6, 63], "get_throw_calcul": [6, 63], "get_unit_fault_relationship": [41, 61], "get_unit_unit_relationship": [41, 61], "get_value_from_rast": [19, 50, 62, 82, 89, 105, 118], "get_value_from_raster_df": [19, 50, 62, 82, 89, 105, 118], "get_working_project": [19, 50, 62, 82, 89, 105, 118], "getbuff": 45, "getfield": 32, "getsizeof": 32, "getter": [14, 17, 18, 25, 26, 28, 32, 41, 57, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 103, 104, 106, 107, 108, 119, 120, 147, 148], "getvalu": 45, "gh": 1, "gi": [134, 141, 142], "giraud": 134, "git": 144, "github": [134, 144, 147], "gitignor": 1, "give": [32, 147, 148], "given": [24, 28, 29, 32, 33, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 73, 77, 81, 102, 104, 106, 107, 110, 112, 123, 125, 132, 137, 145], "glitch": 141, "glossari": 24, "go": [1, 3, 29, 134], "good": [24, 29, 32], "gpd": 1, "gpu": 134, "grab": 106, "grammar": 1, "graph": [24, 71, 96, 145], "graphic": 134, "great": 144, "greater": [29, 32], "grid": [1, 25, 26, 27, 28, 31, 103, 126], "grid_resolut": [31, 126], "griddata": 27, "grose": 134, "group": [67, 72, 90, 99, 137, 141, 147, 148], "group_": 137, "group_column": [137, 141], "guarante": [147, 148], "gui": 134, "guid": [1, 24, 32, 141, 142, 145], "guillaum": 134, "gzip": 49, "gzipfil": 32, "h": 24, "ha": [1, 19, 20, 24, 30, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 50, 51, 56, 58, 62, 77, 81, 82, 86, 89, 97, 102, 105, 109, 118, 121, 145, 147, 148], "had": [24, 32], "half": 106, "hamerslei": [1, 2, 4, 135], "hand": 141, "handl": 1, "hardwar": 32, "hash": 137, "have": [1, 23, 24, 27, 32, 49, 134, 137, 141, 145, 146, 147, 148], "header": [49, 52], "heapsort": 32, "height": [1, 19, 50, 62, 82, 89, 105, 118], "help": [141, 142, 145, 146], "helper": [16, 22, 80, 88, 101, 117], "here": [24, 32, 134, 144, 145], "hex": [1, 32, 53, 78, 127, 128, 136], "hex_color": [78, 128], "hex_to_rgb": 1, "high": [24, 134], "higher": [24, 32], "highli": 106, "hint": [1, 49, 67, 68, 69, 70, 71, 90, 91, 92, 93, 94, 95, 96, 147], "histori": [14, 57], "hit": 134, "hjson": [1, 142, 145, 146], "hold": [6, 19, 32, 35, 36, 37, 38, 39, 42, 47, 48, 50, 51, 56, 58, 62, 63, 77, 81, 82, 89, 102, 105, 118], "hole": [1, 141], "homogen": 32, "hop": 144, "host": [19, 35, 36, 37, 38, 39, 42, 47, 48, 50, 51, 56, 58, 62, 77, 81, 82, 89, 102, 105, 118, 134], "how": [6, 19, 24, 32, 41, 50, 61, 62, 63, 82, 89, 105, 118, 134, 137, 141, 147, 148], "howev": [32, 49, 141], "html": 1, "http": [19, 27, 50, 62, 82, 89, 105, 118, 134, 144], "hull": 27, "hyphon": 1, "hypot": 27, "i": [1, 3, 6, 12, 14, 17, 18, 19, 20, 23, 24, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 104, 105, 106, 107, 108, 109, 112, 113, 118, 119, 120, 121, 125, 128, 130, 132, 134, 136, 137, 141, 142, 144, 145, 146, 147, 148], "i1": 32, "i2": 32, "i8": 32, "id": [1, 14, 57, 66, 72, 73, 74, 75, 76, 85, 99, 106, 107, 108, 115, 119, 120, 131, 137, 141, 144, 148], "identifi": [19, 50, 62, 82, 89, 105, 118, 143], "idwinterpol": [25, 103], "ie": [65, 66, 84, 85, 134, 141], "ignor": [1, 6, 14, 19, 24, 32, 50, 57, 62, 63, 82, 89, 105, 118, 137, 145], "ignore_cod": 137, "illustr": 32, "iloc": [112, 125], "imag": [1, 19, 32, 35, 36, 37, 38, 39, 42, 47, 48, 50, 51, 56, 58, 62, 77, 81, 82, 89, 102, 105, 118, 141], "imagin": 32, "imaginari": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "immin": 49, "implement": [24, 28, 32, 45, 49, 104, 106, 134, 145, 147, 148], "impli": [32, 49], "import": [1, 3, 24, 27, 29, 32, 113, 134, 145, 148], "importantli": 136, "improv": 142, "inbuilt": 137, "includ": [1, 24, 32, 49, 137, 141, 146], "incommensur": 27, "incompat": 32, "incomplet": 45, "inconveni": 144, "incorpor": 134, "incorrect": [1, 106], "increas": [24, 29, 32, 137], "indent": 1, "independ": 32, "index": [6, 32, 63], "index1": [41, 61, 67, 90, 147], "index2": [41, 61, 67, 90, 147], "indic": [6, 19, 20, 23, 24, 30, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 50, 51, 56, 58, 62, 63, 77, 81, 82, 86, 89, 97, 102, 105, 109, 118, 121, 137, 141], "indirect": 32, "individu": 32, "infer": 32, "info": 1, "inform": [1, 6, 14, 24, 32, 57, 63, 72, 99, 137, 141, 145, 146, 147, 148], "inherit": [16, 22, 32, 80, 88, 101, 117], "inhibit": 24, "init": 1, "initi": 32, "initial_byt": 45, "initialis": [6, 14, 17, 18, 19, 25, 26, 28, 41, 50, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 99, 103, 104, 105, 106, 107, 108, 118, 119, 120, 147, 148], "inplac": [1, 32], "input": [1, 27, 29, 32, 111, 114, 124, 129, 134, 141, 142, 146], "insert": 32, "insert_alternative_rocktyp": 137, "insert_alternative_unitname_cod": 137, "insert_bedding_text": 137, "insert_cover_unit_codes_to_ignor": 137, "insert_descript": 137, "insert_dip": 137, "insert_dip_direct": 137, "insert_dip_estim": 137, "insert_fault_nam": 137, "insert_fault_text": 137, "insert_feature_typ": 137, "insert_fold_descript": 137, "insert_fold_nam": 137, "insert_fold_text": 137, "insert_group": 137, "insert_id": 137, "insert_intrusive_text": 137, "insert_max_ag": 137, "insert_min_ag": 137, "insert_output_folder_name_her": 145, "insert_overturn": 137, "insert_overturned_descript": 137, "insert_rocktype1": 137, "insert_sill_text": 137, "insert_structure_descript": 137, "insert_supergroup": 137, "insert_syncline_text": 137, "insert_unitnam": 137, "insert_volcanic_text": 137, "insid": [24, 32, 144], "inspect": [136, 143, 145], "instal": [1, 143, 145, 146], "instanc": [19, 23, 24, 29, 32, 49, 50, 62, 82, 89, 105, 118, 134, 143, 147, 148], "instanti": [20, 30, 32, 86, 97, 109, 121], "instead": [1, 24, 27, 32], "int": [6, 14, 19, 24, 25, 26, 28, 29, 31, 32, 35, 36, 37, 38, 39, 42, 47, 48, 50, 51, 53, 56, 57, 58, 62, 63, 65, 72, 77, 81, 82, 84, 89, 99, 102, 103, 105, 110, 118, 123, 126, 127], "int16": 32, "int32": 32, "int8": 32, "int_": 32, "int_typ": 32, "integ": [1, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 77, 81, 102, 141], "intend": 32, "intenum": [19, 35, 36, 37, 39, 42, 47, 48, 50, 51, 56, 58, 62, 77, 81, 82, 89, 102, 105, 118], "interact": [6, 32, 49, 63, 134], "interchang": 32, "interest": [145, 147, 148], "interfac": 32, "intern": [24, 29], "interp": 27, "interpn": 27, "interpol": [1, 103, 104, 106, 126], "interpolator_label": 28, "interpret": [32, 49], "intersect": 106, "introselect": 32, "intrus": [1, 137, 141], "intrusive_text": 137, "invalid": 1, "invers": [25, 28, 29, 32, 103], "invok": [32, 49], "io": [45, 49, 134], "ipynb": 3, "irrespect": 141, "is_integ": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "isatti": [45, 49], "isinst": 1, "isn": [141, 147], "isoformat": 145, "issu": [1, 49, 141, 144, 147], "issubclass": 1, "issue_templ": 1, "item": 32, "items": 32, "itemset": 32, "iter": [32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 51, 56, 58, 77, 81, 102, 104], "its": [14, 20, 24, 30, 32, 45, 49, 57, 72, 86, 97, 99, 109, 121, 144], "itself": [24, 32], "itter": 145, "j": [1, 24, 32], "jeremi": 134, "jessel": 134, "job": 24, "joblib": 24, "join": [1, 145], "json": [1, 6, 12, 19, 46, 50, 62, 63, 82, 89, 105, 118, 143], "jump": 32, "jupyt": [2, 3, 134, 143, 144], "just": [1, 32, 134, 136, 137, 144], "k": 32, "kd_tree": 24, "keep": [1, 32], "keepdim": 32, "kei": [32, 136], "kemp": 134, "kept": 32, "keyword": [12, 24, 29, 32, 46], "kind": 32, "know": 145, "knowledg": 24, "known": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102, 137], "kriegel": 24, "kth": 32, "kwarg": [6, 23, 29, 32, 45, 63], "kwd": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "l": [1, 104, 106], "label": [17, 18, 19, 24, 25, 26, 27, 28, 50, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 118, 119, 120, 147, 148], "labels_": 24, "lachlan": 134, "larg": [24, 141], "larger": 32, "last": [32, 49], "later": 137, "latitud": 145, "latter": 24, "laurent": 134, "lavavu": 1, "layer": [1, 6, 63, 72, 99, 141], "layerid": [67, 72, 90, 99, 147], "layout": 32, "lazi": 1, "leader": 134, "leaf": 24, "leaf_siz": 24, "least": [24, 32, 49], "leav": [32, 137, 145], "led": 134, "left": [32, 49, 137], "legaci": [1, 6, 63, 137, 141, 145], "legacy_format": [12, 19, 46, 50, 62, 82, 89, 105, 118], "legend": 27, "length": [1, 3, 6, 14, 27, 32, 35, 36, 37, 38, 39, 42, 47, 48, 49, 51, 56, 57, 58, 63, 67, 68, 69, 70, 71, 77, 81, 90, 91, 92, 93, 94, 95, 96, 102, 104, 145, 146, 147], "less": [1, 106], "let": [1, 134], "letter": 32, "level": [1, 32, 49, 134], "lexsort": 32, "lg": 1, "lib": 32, "librari": [1, 32, 141, 142, 145], "libtiff": 1, "light": 1, "like": [24, 32, 45, 137, 141, 145, 146, 147, 148], "limit": [32, 45], "lindsai": 134, "line": [1, 6, 32, 45, 49, 63, 66, 85, 104, 106, 110, 112, 114, 123, 125, 129, 134, 137, 141, 145, 147, 148], "linear": [24, 27, 29, 137, 141, 142, 145, 147, 148], "linestr": [3, 66, 85, 110, 112, 114, 115, 123, 125, 129, 131, 137, 142, 143, 145], "link": [1, 19, 50, 62, 82, 89, 105, 118, 144], "linspac": [27, 29], "lint": 1, "linter": 1, "linux": 1, "list": [6, 14, 19, 25, 26, 27, 28, 32, 33, 41, 45, 49, 50, 53, 57, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 84, 89, 90, 91, 92, 93, 94, 95, 96, 99, 103, 104, 105, 106, 107, 108, 111, 118, 119, 120, 124, 127, 132, 145, 146, 147, 148], "litholog": 136, "lithologi": [72, 99, 106, 137, 142, 145], "lithologyunit": [72, 99], "lithologyunitcolumn": [72, 99], "littl": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "ll": [136, 137, 144, 145, 146], "load": [1, 3, 19, 32, 50, 62, 82, 89, 105, 118], "load_all_map_data": [19, 50, 62, 82, 89, 105, 118], "load_map_data": [19, 50, 62, 82, 89, 105, 118], "load_raster_map_data": [19, 50, 62, 82, 89, 105, 118], "local": [1, 32, 145], "local_sourc": [145, 146], "locat": [1, 32, 73, 74, 75, 76, 104, 106, 107, 108, 119, 120, 148], "lock": 32, "log": [6, 19, 29, 41, 50, 61, 62, 63, 82, 89, 105, 118], "long": [32, 141], "longdoubl": 32, "longer": [147, 148], "longitud": 145, "look": [6, 14, 19, 32, 50, 57, 62, 63, 72, 82, 89, 99, 105, 118, 147], "lookup": [19, 50, 62, 82, 89, 105, 118], "loop": [1, 6, 32, 63, 134, 141, 142, 145, 146], "loop3d": [1, 3, 134, 141, 142, 143, 144], "loop3d_file_nam": 145, "loop_filenam": [6, 63], "loop_project_filenam": [3, 6, 63, 134, 145], "loopstructur": [33, 130, 132, 134, 141, 142, 143, 145], "lose": 32, "lost": 32, "low": [24, 32], "lower": [12, 19, 24, 46, 50, 62, 69, 82, 89, 92, 105, 118], "lowercas": [1, 32], "lowest": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "lp_c_uint": 32, "lpf": 1, "m": [6, 24, 29, 63], "m2l": 1, "m2l_data_tmp": [6, 63], "m2l_enum": [3, 6, 19, 41, 50, 61, 62, 63, 82, 89, 105, 118, 134, 145], "m2lv2": [19, 50, 62, 82, 89, 105, 118], "m2model": 1, "machin": 32, "made": [32, 145], "magnitud": 27, "mai": [1, 20, 24, 30, 32, 45, 49, 86, 97, 106, 109, 115, 121, 131, 134, 141, 144, 145], "main": [6, 41, 61, 63], "mainli": 1, "maintain": 32, "major": 32, "make": [1, 6, 32, 63, 134, 136, 141, 147, 148], "manag": 144, "mani": [27, 32], "manifest": 1, "manual": [136, 141], "map": [6, 12, 14, 17, 18, 19, 24, 25, 26, 28, 31, 32, 41, 46, 50, 57, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 73, 74, 75, 76, 82, 89, 90, 91, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 118, 119, 120, 126, 134, 142, 143, 146, 147, 148], "map2loop": [1, 141, 143, 147, 148], "map2loop_dev_1": 144, "map2model": [1, 6, 19, 41, 50, 61, 62, 63, 82, 89, 105, 118, 147], "map2modelwrapp": [6, 63], "map_data": [1, 3, 6, 17, 18, 41, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 104, 106, 107, 108, 119, 120, 147, 148], "mapdata": [6, 17, 18, 41, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 104, 106, 107, 108, 119, 120, 147, 148], "mapdata_parse_structur": 1, "mark": 134, "marra_mamba_iron_form": 3, "master": 1, "match": [1, 6, 32, 63, 137, 145, 148], "math": 32, "matplotlib": 27, "matrix": [24, 29, 32], "max": [27, 32, 68, 91, 141, 147, 148], "max_ag": 141, "max_age_ma": 137, "maxag": [67, 90, 147], "maxage_column": [137, 141], "maxi": [3, 25, 26, 28, 31, 103, 110, 123, 126, 134, 145], "maximum": [24, 32, 45, 93, 137, 141, 145], "maxx": [3, 25, 26, 28, 31, 103, 110, 123, 126, 134, 145], "mb": [4, 135], "mean": [24, 32, 65, 66, 84, 85, 134, 137], "meantim": 141, "measur": [106, 112, 125, 137, 141, 145], "mechan": [20, 24, 30, 86, 97, 109, 121], "median": [104, 106], "mem": [4, 135], "member": [38, 141], "memori": [24, 32, 45], "merg": 1, "mergesort": 32, "meshgrid": 27, "messag": [1, 19, 50, 62, 82, 89, 105, 118], "meta": 24, "metaclass": [20, 30, 86, 97, 109, 121], "metadata": 24, "metadata_rout": 24, "metadatarequest": 24, "meter": [73, 106, 107, 145], "method": [6, 8, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 117, 118, 119, 120, 121, 136, 147, 148], "metr": [6, 63, 66, 67, 68, 69, 70, 71, 85, 90, 91, 92, 93, 94, 95, 96, 147], "metric": 24, "metric_param": 24, "middle_unit": 145, "might": 147, "min": [27, 32, 68, 91, 141, 147, 148], "min_ag": 141, "min_age_ma": 137, "min_sampl": 24, "minag": [67, 90, 147], "minage_column": [137, 141], "mine": 24, "mini": [3, 25, 26, 28, 31, 103, 110, 123, 126, 134, 145], "minim": [27, 134], "minimum": [3, 14, 32, 57, 137, 141, 145], "minimum_fault_length_to_export": [14, 57], "minkowski": 24, "minor": 1, "minut": [1, 3, 145], "minx": [3, 25, 26, 28, 31, 103, 110, 123, 126, 134, 145], "miss": [1, 19, 32, 50, 62, 82, 89, 105, 118, 147], "mode": [24, 29, 32, 49], "model": [134, 136, 142, 143, 146], "model_nam": 145, "moder": 137, "modif": [1, 19, 32, 49, 50, 62, 82, 89, 105, 118], "modifi": [19, 32, 50, 62, 82, 89, 105, 118, 148], "modul": [1, 5, 6, 24, 32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 63, 77, 81, 102, 145], "moment": 49, "monash": 134, "more": [1, 24, 29, 32, 49, 106, 134, 137, 145, 147], "most": [24, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 77, 81, 102, 137, 141, 148], "move": [1, 32], "mtime": 49, "much": [6, 19, 41, 50, 61, 62, 63, 82, 89, 105, 118, 145, 147, 148], "multi": 1, "multidimension": 32, "multilin": [114, 115, 129, 131], "multilinestr": [66, 85, 114, 115, 129, 131], "multipl": [1, 24, 32, 49], "multipolgon": [66, 85], "multiquadr": 29, "must": [6, 24, 27, 29, 32, 35, 36, 37, 38, 39, 42, 47, 48, 49, 51, 56, 58, 63, 66, 67, 73, 74, 75, 76, 77, 81, 85, 90, 102, 106, 107, 108, 119, 120, 147, 148], "my_abstract_method": [20, 30, 86, 97, 109, 121], "mysort": 147, "mythicknesscalcul": 148, "n": [24, 27, 29, 32, 49, 53, 127, 141], "n_core_sampl": 24, "n_featur": 24, "n_features_in_": 24, "n_job": 24, "n_sampl": [24, 29], "name": [1, 6, 12, 14, 17, 18, 19, 24, 25, 26, 28, 32, 35, 36, 37, 38, 39, 42, 46, 47, 48, 50, 51, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 107, 108, 118, 119, 120, 136, 141, 142, 143, 144, 146, 147, 148], "name_column": [137, 141], "nan": [1, 27, 32], "nativ": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "natur": 24, "navig": [136, 144], "nbyte": 32, "ncdump": [145, 146], "nd": 32, "ndarrai": [24, 25, 26, 27, 28, 29, 31, 33, 103, 111, 124, 126, 130, 132], "ndarray_subclass": 32, "ndim": [27, 32], "ndinterpolatorbas": 27, "nearest": [18, 24, 27, 32, 60], "nearestndinterpol": 27, "nearestneighbor": 24, "neat": 1, "neccessari": 145, "necessari": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "need": [1, 32, 49, 136, 137, 141, 142, 144, 145, 146, 147, 148], "neg": [24, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 77, 81, 102], "neighbor": [24, 27, 106], "neighborhood": 24, "neighbour": 145, "nest": [24, 32, 136], "netcdf4": [145, 146], "networkx": [71, 96], "never": 32, "new": [1, 32, 45, 49, 115, 131, 145, 147, 148], "new_arr": 32, "new_ord": 32, "new_shap": 32, "newbyteord": 32, "newbytord": 32, "newli": 32, "newlin": [45, 49], "next": [32, 45, 143], "ni": [25, 26, 28, 103], "nodal": 29, "node": 29, "nois": 24, "noisi": 24, "nomenclatur": 1, "non": [32, 45, 49], "none": [3, 6, 19, 24, 25, 31, 32, 35, 36, 37, 38, 39, 41, 42, 45, 47, 48, 49, 50, 51, 52, 53, 56, 58, 61, 62, 63, 64, 65, 66, 77, 81, 82, 83, 84, 85, 89, 102, 103, 105, 118, 126, 127, 137, 145], "nonzero": [24, 32], "norm": 29, "normal": [20, 28, 30, 32, 86, 97, 109, 121, 130], "normal_vector": 130, "north": [19, 50, 62, 82, 89, 105, 118, 134, 137], "north_east": 137, "note": [19, 23, 24, 27, 32, 45, 50, 62, 65, 66, 74, 82, 84, 85, 89, 105, 108, 118, 134, 137, 143, 145, 146], "notebook": [2, 3, 134, 143, 144], "noth": 45, "now": [1, 32, 145, 146], "nowtim": 145, "np": [1, 24, 27, 29, 32], "npoint": 27, "nsw": [6, 19, 50, 62, 63, 82, 89, 105, 118], "nt": [6, 19, 50, 62, 63, 82, 89, 105, 118], "nth": 145, "num": 137, "number": [24, 26, 29, 31, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 53, 56, 58, 69, 77, 81, 92, 102, 112, 115, 125, 126, 127, 131, 141, 145], "numer": [32, 35, 36, 37, 38, 39, 42, 47, 48, 49, 51, 56, 58, 77, 81, 102, 137, 145], "numpi": [1, 14, 24, 25, 27, 28, 29, 31, 32, 33, 57, 72, 99, 103, 111, 124, 126, 130, 132], "nvalu": 27, "nx3": 1, "o": [24, 32, 45, 49, 145], "ob": 1, "obj": 32, "object": [1, 6, 8, 12, 14, 16, 19, 22, 23, 24, 25, 28, 29, 32, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 61, 62, 63, 72, 77, 80, 81, 82, 88, 89, 99, 101, 102, 103, 105, 110, 111, 117, 118, 123, 124, 137], "objectid": 137, "objectid_column": [137, 141], "observ": [14, 57, 94], "obtain": 32, "occupi": 32, "occur": [24, 32], "offset": [32, 45, 49, 143], "ok": [1, 27], "old": [1, 12, 46], "oldest": [73, 74, 75, 76, 104, 106, 107, 108, 119, 120, 145, 148], "oldest_unit": 145, "omiss": 32, "omit": [32, 45, 49], "onc": [32, 106, 137, 141, 145, 146], "one": [1, 24, 32, 45, 49, 94, 106, 134, 136, 145, 147, 148], "ones": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "onli": [1, 24, 32, 49, 65, 66, 70, 84, 85, 95, 106, 146], "onlin": 1, "onto": [32, 146], "onward": 145, "opac": [78, 128], "open": [19, 32, 49, 50, 62, 82, 89, 105, 118, 144], "open_http_queri": [19, 50, 62, 82, 89, 105, 118], "oper": [32, 45], "opposit": 32, "opt": 137, "optic": 24, "optim": [24, 32], "option": [1, 6, 12, 19, 24, 27, 29, 31, 32, 41, 45, 46, 49, 50, 61, 62, 63, 65, 66, 78, 82, 84, 85, 89, 105, 118, 126, 128, 137, 141, 142, 145, 146], "order": [6, 14, 27, 32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 57, 58, 63, 72, 73, 74, 76, 77, 81, 99, 102, 104, 107, 108, 120, 141, 142, 143, 145, 146, 148], "org": 27, "orient": [1, 6, 17, 18, 19, 50, 59, 60, 62, 63, 82, 89, 104, 105, 118, 137, 141, 142, 145, 147, 148], "orientation_typ": 137, "origin": [1, 19, 24, 35, 36, 37, 38, 39, 42, 47, 48, 49, 50, 51, 56, 58, 62, 77, 81, 82, 89, 102, 105, 115, 118, 131, 134], "orthogon": 104, "oserror": [45, 49], "other": [24, 29, 32, 49, 74, 108, 134, 137, 147, 148], "otherwis": [19, 24, 32, 49, 50, 62, 82, 89, 105, 118, 145], "our": [24, 32, 134], "out": [1, 19, 32, 50, 62, 82, 89, 105, 118, 137], "outlin": 134, "output": [1, 3, 6, 19, 29, 32, 41, 50, 61, 62, 63, 82, 89, 105, 118, 134, 136, 141, 142, 143, 144], "output_dir": [19, 50, 62, 82, 89, 105, 118], "outsid": 27, "over": [32, 45, 104], "overal": 104, "overcom": 32, "overflow": 32, "overflowerror": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "overlai": [6, 63], "overrid": [6, 63], "overridden": [20, 30, 86, 97, 109, 121], "overturn": [137, 141], "overturned_column": [137, 141], "overturned_text": 137, "overview": 106, "overwrit": 1, "overwrite_loopprojectfil": [3, 6, 63], "own": [32, 136, 137, 145, 147, 148], "owndata": 32, "owner": 32, "owslib": 1, "p": [24, 32, 134, 144], "packag": [134, 144], "package_data": 1, "page": [142, 146], "pair": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "pairwise_dist": 24, "panda": [6, 14, 17, 18, 19, 25, 26, 28, 41, 50, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 99, 103, 104, 105, 106, 107, 108, 118, 119, 120, 147, 148], "parallel": 24, "parallel_backend": 24, "param": [6, 24, 63, 78, 128], "paramet": [1, 6, 12, 14, 17, 18, 19, 24, 25, 26, 27, 28, 29, 31, 32, 33, 41, 46, 50, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 99, 103, 104, 105, 107, 108, 110, 111, 112, 114, 115, 118, 119, 120, 123, 124, 125, 126, 127, 129, 130, 131, 132, 143], "parent": 32, "pars": [14, 19, 41, 50, 57, 61, 62, 72, 82, 89, 99, 105, 118, 147], "parse_fault_map": [19, 50, 62, 82, 89, 105, 118], "parse_fault_orient": [19, 50, 62, 82, 89, 105, 118], "parse_fold_map": [19, 50, 62, 82, 89, 105, 118], "parse_geology_map": [19, 50, 62, 82, 89, 105, 118], "parse_structure_map": [19, 50, 62, 82, 89, 105, 118], "part": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102, 134], "partial": 32, "particular": 32, "partit": 32, "pass": [1, 24, 29, 32, 106, 141, 145, 146, 147, 148], "passthrough": 134, "password": 134, "path": [1, 6, 12, 19, 32, 46, 50, 62, 63, 82, 89, 105, 118, 145, 146], "pathlib": [1, 32], "pcolormesh": 27, "peak": 32, "per": [1, 32, 144], "perform": [24, 27, 28, 106], "perhap": 32, "permut": 32, "perpendicular": 106, "pick": 106, "pickl": 32, "piec": [141, 146], "piecewis": 27, "pin": 1, "pip": [1, 144], "pipe": 49, "pipelin": 24, "pirot": 134, "pixel": [6, 63], "pixel_s": [6, 63], "place": 32, "placehold": 1, "plane": 27, "platform": 32, "pleas": [1, 24, 136, 137, 141, 142, 145, 146], "plot": [3, 6, 27, 63], "plot_dbscan": 24, "plot_hamerslei": [3, 4, 135], "plt": 27, "plugin": [147, 148], "plung": 141, "po": 45, "point": [1, 3, 6, 19, 23, 24, 26, 27, 28, 29, 31, 32, 50, 62, 63, 65, 66, 82, 84, 85, 89, 104, 105, 106, 110, 111, 112, 115, 118, 123, 124, 125, 126, 131, 137, 142, 143, 145], "pointer": [32, 41, 49, 61], "points_from_xi": 1, "pointwis": 24, "polygon": [1, 19, 50, 62, 66, 82, 85, 89, 105, 118, 137, 142, 143, 145], "polylin": [6, 19, 50, 62, 63, 82, 89, 105, 118], "polyon": [6, 63], "poppler": 1, "popul": [14, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 57, 58, 72, 77, 81, 99, 102], "port": 134, "portland": 24, "posit": [29, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 77, 81, 102], "possess": 32, "possibl": [24, 32, 74, 108, 145], "possibli": 32, "potenti": [147, 148], "power": [24, 144, 147, 148], "pp": 24, "pr": 1, "pre": 24, "precis": 32, "precomput": [24, 27], "predict": [24, 94], "prefer": 32, "prepar": [28, 41, 61], "present": [24, 147], "preserv": 32, "preset": 1, "press": 24, "prevent": [1, 32], "previou": 32, "previous": 32, "print": [1, 32], "prior": 145, "prioritis": [69, 92, 93, 147], "privat": 32, "probabl": 144, "problem": [1, 24, 32, 147, 148], "procedur": 1, "proceed": 24, "process": [6, 28, 41, 61, 63, 115, 131, 134, 146, 147, 148], "processor": 24, "prod": 32, "produc": [32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 77, 81, 102, 142, 145, 146], "product": 32, "prof": 134, "program": [142, 143, 146], "proj": [1, 3, 134, 145, 147, 148], "proj_str": [19, 50, 62, 82, 89, 105, 118], "project": [1, 19, 41, 50, 82, 89, 105, 118, 134, 137, 143, 146, 147, 148], "prompt": [145, 146], "properli": [1, 32], "properti": [20, 29, 30, 32, 49, 86, 97, 109, 121], "protocol": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "provid": [12, 16, 22, 24, 27, 32, 46, 49, 80, 88, 101, 117, 134, 141, 142, 145, 146], "ptp": 32, "public": 32, "pull": 1, "pure": [70, 95], "purpos": 32, "put": 32, "py": [1, 3, 4, 19, 24, 50, 62, 82, 89, 105, 118, 135], "pyarray_resolvewritebackifcopi": 32, "pypi": 32, "pyplot": 27, "pytest": 1, "python": [1, 2, 3, 32, 134, 136, 141, 142, 144, 145, 147, 148], "python3": 1, "qgi": [137, 143, 146], "qhull": 27, "qld": [6, 19, 50, 62, 63, 82, 89, 105, 118], "qualnam": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "queri": 24, "question": 1, "quick": 32, "quicksort": 32, "quintic": 29, "quotat": 137, "r": [29, 32, 49, 78, 128, 145], "r1": [137, 141], "r2": 141, "radial": [25, 28, 29, 103], "radiu": 29, "radius_neighbors_graph": 24, "rais": [6, 19, 24, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 50, 51, 56, 58, 62, 63, 77, 81, 82, 89, 102, 105, 113, 118, 147], "randint": 32, "random": [1, 19, 27, 29, 32, 49, 50, 53, 54, 62, 82, 89, 105, 118, 127], "randomli": [53, 127], "rang": [78, 128], "rank": 1, "rare": 32, "raster": [19, 50, 62, 82, 89, 105, 118], "rather": [145, 147, 148], "ratio": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "ration": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "ravel": 32, "raw": [19, 32, 45, 49, 50, 62, 82, 89, 105, 118, 145], "raw_data": [19, 50, 62, 82, 89, 105, 118], "rb": 49, "rbf": [1, 25, 28, 103], "rbfi": 29, "rbfinterpol": 29, "re": [136, 145], "reach": [45, 49], "read": [24, 32, 45, 49], "read1": [45, 49], "read_fil": 1, "readabl": [45, 49], "readinto": 45, "readlin": [45, 49], "readm": 1, "real": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "realloc": 32, "rearrang": 32, "reason": 147, "rebuild": [115, 131], "rebuilt": [115, 131], "recarrai": 32, "receiv": 146, "recent": [32, 137], "recogn": 49, "recommend": 144, "recov": [1, 32], "recreat": 32, "recreate_bounding_box_str": [19, 50, 62, 82, 89, 105, 118], "rectilinear": 27, "recurs": 32, "reduc": 24, "refcheck": 32, "refer": [24, 27, 32, 41, 61, 141, 142, 145, 146], "referenc": [1, 32], "reflect": 32, "region": [134, 142, 145, 147, 148], "regular": [27, 32, 49], "regulargridinterpol": 27, "reinterpret": 32, "rel": [1, 45, 49, 141], "relat": 32, "relationship": [1, 6, 14, 41, 57, 61, 63, 67, 68, 69, 70, 71, 72, 90, 91, 92, 93, 94, 95, 96, 99, 145, 147], "relationshiplist": [72, 99], "releas": 1, "relev": [24, 32, 141, 142, 145], "reliabl": 32, "remain": [1, 32, 147], "rememb": [134, 136], "remot": [1, 19, 50, 62, 82, 89, 105, 118, 134], "remov": [1, 14, 24, 32, 57, 147, 148], "removefaultbyeventid": [14, 57], "removefaultbynam": [14, 57], "renam": 1, "repeat": 32, "repeatedli": 45, "replac": [1, 19, 32, 50, 62, 82, 89, 105, 118, 136, 141, 145, 147, 148], "repo": [1, 144, 147], "report": 49, "reprenum": 38, "repres": [19, 32, 35, 36, 37, 38, 39, 42, 47, 48, 50, 51, 56, 58, 62, 77, 81, 82, 89, 102, 105, 110, 111, 112, 115, 118, 123, 124, 125, 131, 134, 141, 146], "represent": [12, 32, 35, 36, 37, 38, 39, 42, 46, 47, 48, 51, 56, 58, 77, 81, 102], "reproject": [19, 50, 62, 82, 89, 105, 118], "request": [1, 14, 19, 24, 27, 35, 36, 37, 38, 39, 42, 47, 48, 50, 51, 56, 57, 58, 62, 72, 77, 81, 82, 89, 99, 102, 105, 118], "requir": [1, 19, 20, 24, 30, 32, 50, 62, 82, 86, 89, 97, 105, 109, 118, 121, 134, 137, 143, 145, 146], "requrei": 1, "rescal": 27, "reset": [6, 41, 61, 63], "reshap": [27, 32], "resiz": 32, "resolut": [1, 145], "resourc": 134, "respect": [32, 130, 134], "rest": [1, 32, 137], "restrict": 32, "result": [29, 32, 49], "retain": [24, 32, 45], "retriev": [19, 45, 50, 62, 82, 89, 105, 118], "return": [1, 6, 12, 14, 17, 18, 19, 24, 25, 26, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 147, 148], "revers": [1, 32], "revert": 1, "review": 1, "revisit": 24, "rewind": 49, "rework": 1, "rgb": [78, 128], "rgba": [78, 128], "rhr": 141, "rid": 145, "right": [1, 137, 141], "rng": [27, 29], "robin": 134, "rock": [136, 141], "rocktyp": [137, 141], "rocktype1": 137, "rocktype2": 137, "rocktype_column": [137, 141], "roi": [1, 3, 134], "roigin": 1, "role": 142, "round": 32, "rout": 24, "row": [32, 33, 112, 125, 130, 132, 147], "rrggbb": [78, 128], "rst": 32, "rt": 1, "ruff": 1, "rule": 141, "run": [1, 3, 6, 24, 41, 61, 63, 136, 142, 143, 144, 146], "run_al": [3, 6, 63, 134, 145], "runtim": [1, 23], "runtimeerror": 32, "s0": [137, 141], "s1": [32, 137], "s3": 32, "sa": [1, 6, 19, 50, 62, 63, 82, 89, 105, 118, 134], "safe": 32, "safer": 32, "same": [32, 137, 147, 148], "same_kind": 32, "samp": 145, "sampl": [1, 3, 6, 24, 25, 26, 28, 63, 64, 65, 66, 73, 74, 83, 84, 85, 103, 104, 106, 107, 108, 113, 115, 131, 143], "sample_map_data": [6, 63], "sample_weight": 24, "sampled_basal_contact": [115, 131], "sampled_contact": [1, 112, 115, 125, 131], "sampler": [1, 3, 6, 63, 65, 66, 145], "samplerdecim": 145, "samplerspac": [3, 145], "sander": 24, "satisfi": [32, 49], "save": [1, 6, 19, 50, 62, 63, 82, 89, 105, 118, 145, 146], "save_all_map_data": [19, 50, 62, 82, 89, 105, 118], "save_contact": [19, 50, 62, 82, 89, 105, 118], "save_geotiff_rast": [6, 63], "save_into_projectfil": [6, 63], "save_mapdata_to_fil": [6, 63], "save_path": [6, 63], "save_pre_checked_map_data": [6, 63], "save_raw_map_data": [19, 50, 62, 82, 89, 105, 118], "scalar": 32, "scale": 141, "scatter": 29, "schubert": 24, "scipi": [25, 27, 28, 29, 103], "script": [1, 3], "scroll": [145, 146], "searchsort": 32, "second": [3, 32, 137], "secondari": [137, 141], "section": [32, 137, 141, 145, 146], "see": [1, 19, 24, 29, 32, 50, 62, 82, 89, 105, 118, 134, 136, 137, 141, 144, 145, 146], "seed": [32, 53, 127], "seek": [45, 49], "seek_cur": 49, "seek_end": 49, "seek_set": 49, "seekabl": [45, 49], "seen": [24, 147, 148], "segment": [6, 32, 63, 110, 112, 115, 123, 125, 131], "segnum": 1, "segnum_test": 1, "select": [6, 19, 32, 41, 49, 50, 61, 62, 63, 82, 89, 105, 118, 143], "self": [20, 24, 29, 30, 32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 86, 97, 102, 109, 121, 147, 148], "sent": [6, 19, 41, 50, 61, 62, 63, 82, 89, 105, 118], "sep": 32, "separ": [32, 49], "sequenc": [32, 73, 106, 107, 141, 145], "seri": [112, 125, 146], "server": [1, 144], "set": [1, 6, 14, 19, 24, 28, 32, 45, 50, 57, 62, 63, 72, 82, 89, 99, 104, 105, 118, 130, 136, 137, 141, 142, 143, 147, 148], "set_bounding_box": [19, 50, 62, 82, 89, 105, 118], "set_colour_filenam": [19, 50, 62, 82, 89, 105, 118], "set_config": 24, "set_config_filenam": [19, 50, 62, 82, 89, 105, 118], "set_default_sampl": [6, 63], "set_fault_orient": [6, 63], "set_filenam": [19, 50, 62, 82, 89, 105, 118], "set_filenames_from_australian_st": [19, 50, 62, 82, 89, 105, 118], "set_fit_request": 24, "set_ignore_cod": [6, 19, 50, 62, 63, 82, 89, 105, 118], "set_minimum_fault_length": [6, 14, 57, 63, 145], "set_param": 24, "set_sampl": [3, 6, 63, 145], "set_sort": [3, 6, 63, 145, 147], "set_stratigraphic_unit_parameter_by_nam": [72, 99], "set_thickness_calcul": [6, 63, 148], "set_throw_calcul": [6, 63], "set_working_project": [19, 50, 62, 82, 89, 105, 118], "set_working_projection_on_map_data": [19, 50, 62, 82, 89, 105, 118], "setfield": 32, "setflag": 32, "setter": [147, 148], "setup": [25, 26, 28, 31, 103, 126, 137, 144], "setup_grid": [1, 25, 26, 28, 103], "setup_interpol": [25, 26, 28, 103], "sever": [145, 146], "sf": [137, 141], "sg": 136, "sh": 1, "shade": 27, "shape": [1, 19, 24, 27, 29, 32, 50, 62, 82, 89, 105, 110, 111, 112, 118, 123, 124, 125, 143, 145, 146], "shape_a": 32, "shapefil": [6, 19, 50, 62, 63, 82, 89, 105, 118, 137, 142, 143, 145, 147, 148], "share": 32, "shell": 144, "shoot": 143, "short": [1, 32, 49], "shorter": [14, 57], "shortest": 104, "should": [1, 23, 24, 25, 26, 28, 31, 32, 45, 49, 103, 126, 141], "show": [1, 27, 32, 136, 144], "shown": [136, 137, 141, 145, 147, 148], "shp": [6, 19, 50, 62, 63, 82, 89, 105, 118, 145], "shrink": 32, "side": [32, 148], "sign": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "signific": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "sill": 137, "sill_text": 137, "similar": [24, 32, 136, 146], "similarli": [32, 49], "simpl": [24, 32, 141, 145], "simplest": [147, 148], "simpli": 32, "simplifi": [1, 32], "simul": 49, "simultan": 32, "sin": [104, 106], "sinc": 32, "singl": [1, 32, 33, 114, 129, 132, 141, 145, 147], "situat": 106, "size": [6, 24, 32, 45, 49, 63], "skip": [1, 32, 145], "sklearn": 24, "slice": [14, 32, 57, 72, 99], "slowest": 49, "small": [1, 134], "smaller": 32, "smooth": [27, 29], "smoother": 144, "snap": 141, "so": [1, 3, 17, 18, 24, 32, 45, 49, 59, 60, 67, 68, 69, 70, 71, 73, 74, 75, 76, 90, 91, 92, 93, 94, 95, 96, 104, 106, 107, 108, 119, 120, 136, 137, 141, 145, 147, 148], "socket": 49, "softwar": [134, 144], "solv": [1, 106], "some": [1, 24, 27, 32, 144, 145, 147], "some_dtyp": 32, "someth": 32, "sometim": [32, 141], "somewher": 1, "sort": [6, 32, 41, 61, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 90, 91, 92, 93, 94, 95, 96, 99, 104, 106, 107, 108, 119, 120, 145, 147, 148], "sort_from_relationship_list": [72, 99], "sort_stratigraphic_column": [6, 63], "sorted_unit": [41, 61], "sorter": [1, 3, 6, 32, 63, 68, 69, 70, 71, 75, 119, 143, 146, 147], "sorter_label": 147, "sorteragebas": [3, 145, 146], "sorteralpha": [3, 145], "sorterbaseclass": 147, "sorterbeta": 145, "sortermaximisecontact": 3, "sorterobservationproject": 3, "sorterusehint": [3, 145], "sorterusenetworkx": [3, 145], "sourc": [2, 3, 19, 50, 62, 82, 89, 105, 118, 144], "south": 134, "space": [1, 32, 66, 85, 141, 145], "spars": 24, "spatial": [1, 24, 29], "spatial_data": [64, 65, 66, 83, 84, 85], "speak": 145, "special": [1, 23], "specif": [1, 6, 19, 32, 50, 52, 62, 63, 72, 82, 89, 99, 105, 118, 136, 137, 141, 145], "specifi": [1, 3, 6, 19, 32, 49, 50, 62, 63, 82, 89, 105, 118, 134, 136, 137, 141, 142, 145], "speed": [24, 32], "spelt": 32, "sphinx": [1, 2, 3], "sqrt": [29, 32], "squar": 24, "squeez": 32, "stabl": 32, "standard": [16, 22, 32, 80, 88, 101, 104, 106, 117], "start": [29, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 49, 51, 56, 58, 77, 81, 102, 110, 123, 143, 145], "start_point": [110, 123], "stat": 1, "state": [1, 3, 6, 9, 10, 19, 45, 49, 50, 62, 63, 82, 89, 105, 118, 134, 145], "statement": [1, 23], "static": 23, "statisticserror": 113, "std": 32, "stdin": 32, "steep": 137, "step": [1, 32, 141, 142, 143], "still": [1, 24, 32, 147, 148], "stop": 134, "storag": 32, "store": [1, 6, 19, 24, 28, 32, 50, 62, 63, 82, 89, 104, 105, 106, 118, 136], "str": [1, 6, 12, 14, 17, 18, 19, 24, 25, 26, 28, 29, 32, 46, 50, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 99, 103, 104, 105, 106, 107, 108, 118, 119, 120, 128, 147, 148], "stratigraph": [1, 3, 6, 19, 41, 50, 61, 62, 63, 72, 73, 74, 76, 82, 89, 99, 104, 105, 106, 107, 108, 118, 120, 136, 137, 141, 143], "stratigraphi": [136, 147, 148], "stratigraphic_column": [6, 19, 50, 62, 63, 82, 89, 105, 118, 136], "stratigraphic_ord": [73, 74, 75, 76, 104, 106, 107, 108, 119, 120, 148], "stratigraphic_order_hint": [67, 68, 69, 70, 71, 90, 91, 92, 93, 94, 95, 96, 147], "stratigraphic_unit": [19, 50, 62, 82, 89, 105, 118], "stratigraphiccolumn": [6, 63], "stratigraphicunit": [72, 99], "stratigraphicunitcolumn": [72, 99], "stream": [45, 49], "stride": [32, 65, 84], "stride_trick": 32, "strides_a": 32, "strike": [1, 33, 106, 112, 125, 132, 137, 141], "string": [6, 19, 24, 28, 32, 49, 50, 53, 62, 63, 82, 89, 104, 105, 106, 118, 127, 137, 141, 145], "structpoint": 1, "structtype_column": [137, 141], "structur": [1, 6, 12, 17, 19, 25, 26, 28, 32, 41, 46, 50, 59, 61, 62, 63, 64, 67, 73, 74, 75, 82, 83, 89, 90, 103, 104, 105, 106, 107, 108, 112, 118, 119, 125, 137, 141, 145, 146, 147, 148], "structura": [6, 63], "structuralpoint": 1, "structure_config": [12, 46], "structure_data": [25, 26, 28, 73, 74, 103, 104, 106, 107, 108], "structure_filenam": [6, 63, 145], "structypei": 137, "strucuturalpoint": 106, "studi": 145, "style": 32, "sub": [24, 32], "subclass": [17, 18, 25, 26, 28, 32, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 103, 104, 106, 107, 108, 119, 120, 147, 148], "subfold": 1, "subobject": 24, "subok": 32, "subsequ": 32, "success": [19, 50, 62, 82, 89, 105, 118], "successfulli": 146, "suggest": [1, 32], "suit": 145, "suitabl": 32, "sum": [32, 148], "summari": [6, 14, 57, 63, 72, 99], "summarise_data": [14, 57], "summarise_fault_data": [6, 63], "super": [20, 30, 86, 97, 109, 121], "supergroup": [137, 141, 147, 148], "supergroup_column": [137, 141], "supersuit": [137, 141], "support": [32, 35, 36, 37, 38, 39, 42, 47, 48, 49, 51, 56, 58, 77, 81, 102], "sure": [1, 32, 136], "surfac": [141, 145], "survei": 134, "swap": 32, "swapax": 32, "sy": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "synclin": [1, 134, 137], "synform_text": 137, "syntax": 32, "system": [24, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102, 141], "systemerror": 32, "t": [1, 32, 49, 104, 134, 137, 141, 145, 147], "t0": 145, "t1": 145, "ta": [6, 19, 50, 62, 63, 82, 89, 105, 118], "tabl": [1, 6, 19, 50, 62, 63, 82, 89, 105, 118, 137, 143, 145], "tabul": 146, "tag": 1, "take": [29, 32, 65, 66, 68, 69, 70, 71, 74, 76, 84, 85, 91, 92, 93, 94, 95, 96, 104, 108, 120, 141, 145, 146, 147, 148], "take_best": [1, 3, 6, 63, 145], "target": 29, "task": 148, "team": 134, "tell": [32, 45, 49, 148], "temp": 1, "templat": [1, 143, 146, 147, 148], "temporari": [6, 19, 50, 62, 63, 82, 89, 105, 118], "tenth": [65, 84], "term": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102, 137, 145], "termin": [49, 144, 145, 146], "terrain": [6, 63], "test": [1, 6, 32, 49, 63], "text": [32, 49, 137, 141, 145, 146], "th": 32, "than": [1, 14, 29, 32, 57, 106, 145, 147, 148], "thank": 1, "thei": [19, 32, 50, 62, 82, 89, 105, 118, 137, 141], "them": [1, 3, 24, 32, 137, 141, 147, 148], "themselv": 32, "thi": [1, 6, 14, 19, 24, 27, 28, 29, 32, 33, 45, 49, 50, 57, 62, 63, 65, 66, 68, 69, 70, 71, 74, 82, 84, 85, 89, 91, 92, 93, 94, 95, 96, 104, 105, 106, 108, 118, 130, 132, 134, 136, 137, 141, 144, 145, 146, 147, 148], "thick": [1, 3, 6, 63, 73, 74, 104, 106, 107, 108, 143, 147], "thickness_calcul": [1, 6, 63], "thickness_calculator_label": [104, 106, 148], "thicknesscalc": 1, "thicknesscalcul": [1, 6, 63, 74, 104, 106, 108, 148], "thicknesscalculatorbaseclass": 148, "thicknesscalculatorbeta": 1, "thicknesscalculatorgamma": 1, "thicknesscalul": [6, 63], "thicknessmedian": [1, 104, 106], "thicknessstddev": [104, 106], "thin_plat": 29, "thing": 1, "thomson": 134, "those": 147, "three": 141, "through": [19, 29, 32, 50, 62, 82, 89, 105, 118, 136, 145, 146, 147], "throughout": [1, 141], "throw": [1, 6, 17, 59, 63, 75, 76, 119, 120], "throw_calcul": [6, 63], "throwcalcul": [6, 63, 76, 120], "ti": 32, "tif": [6, 63], "time": [1, 3, 14, 24, 32, 49, 57, 72, 99, 145], "timeout": [1, 52], "timespec": 145, "timestamp": 49, "timsort": 32, "tini": 1, "tinker": 144, "tip": 143, "titl": 1, "tmp": 1, "tmp_path": [6, 19, 50, 62, 63, 82, 89, 105, 118, 145], "to_byt": [35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "to_dict": [1, 12, 46], "tobyt": 32, "tod": 24, "todo": 32, "tofil": 32, "toggl": 32, "token": 134, "tolist": 32, "too": 1, "tool": [134, 141, 145, 146], "top": [3, 73, 74, 104, 106, 107, 108, 134, 145], "topolog": [71, 96, 145], "tostr": 32, "total": [3, 4, 24, 32, 45, 49, 135], "toward": 141, "trace": [18, 32, 60, 137, 141], "traceback": 32, "train": 24, "transact": 24, "transform": [141, 142], "transport": 32, "transpos": [1, 32], "travers": 32, "tree": 24, "tri": 1, "trial": 145, "triangl": 27, "triangul": 27, "trigger": 1, "trivial": 49, "troubl": [32, 143], "true": [3, 19, 23, 24, 32, 35, 36, 37, 38, 39, 42, 45, 47, 48, 50, 51, 56, 58, 62, 77, 81, 82, 89, 102, 104, 105, 118, 137, 145], "truli": 32, "truncat": [45, 49], "try": [1, 141], "tty": 45, "tupl": [6, 19, 31, 32, 50, 62, 63, 78, 82, 89, 105, 110, 111, 118, 123, 124, 126, 128], "turee_creek_group": 3, "turn": 141, "tutori": 141, "two": [1, 24, 29, 32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102, 106, 111, 124], "txt": 144, "type": [1, 6, 12, 14, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 32, 35, 36, 37, 38, 39, 41, 42, 46, 47, 48, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 106, 107, 108, 118, 119, 120, 128, 137, 141, 147, 148], "typecod": 32, "typeerror": [6, 32, 63], "typo": 1, "u": [32, 141], "u2": 32, "uic": 32, "uint32": 32, "uint8": 32, "ultim": 32, "unavail": 1, "uncalcul": 1, "unchang": [24, 32, 45, 49], "uncompress": 49, "unconstrain": 23, "undefin": 32, "under": [29, 32, 146], "underli": [32, 45, 49], "underlin": 1, "underscor": 141, "undocu": 32, "unexpect": 1, "union": [33, 111, 114, 124, 129, 132], "uniqu": [1, 53, 115, 127, 131, 137, 141], "unit": [1, 6, 19, 27, 41, 50, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 89, 90, 91, 92, 93, 94, 95, 96, 99, 104, 105, 106, 107, 108, 115, 118, 119, 120, 131, 137, 141, 142, 143, 145, 147, 148], "unit_fault_relationship": [41, 61], "unit_nam": 136, "unit_relationship": [67, 68, 69, 70, 71, 90, 91, 92, 93, 94, 95, 96, 147], "unit_unit_relationship": [41, 61], "unitnam": [137, 147], "unitname1": [41, 61, 67, 90, 147], "unitname2": [41, 61, 67, 90, 147], "unitname_column": [137, 141], "units_relationship": [67, 68, 69, 70, 71, 90, 91, 92, 93, 94, 95, 96, 147], "univers": 134, "unless": [20, 24, 30, 32, 49, 86, 97, 109, 121], "unlik": [27, 32], "unnecessari": 1, "unpack": 32, "unpickl": 32, "unpin": 1, "unsaf": 32, "unspecifi": 32, "unstructur": 27, "unsus": 1, "until": [45, 49], "unus": [45, 49], "unzip": [19, 50, 62, 82, 89, 105, 118], "up": [6, 19, 28, 32, 49, 50, 62, 63, 82, 89, 105, 118, 137, 141, 142, 143, 144], "upd": 1, "updat": [1, 6, 12, 19, 24, 32, 46, 50, 62, 63, 82, 89, 105, 118], "update_filename_with_bounding_box": [19, 50, 62, 82, 89, 105, 118], "update_filename_with_project": [19, 50, 62, 82, 89, 105, 118], "update_from_dictionari": [12, 46], "update_from_fil": [12, 46], "update_from_legacy_fil": [12, 46], "upper": [1, 32], "upscal": 141, "url": [1, 12, 19, 46, 50, 52, 62, 82, 89, 105, 118], "us": [1, 3, 6, 14, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 41, 42, 45, 47, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 64, 67, 68, 69, 70, 71, 73, 75, 77, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 109, 115, 117, 118, 119, 121, 131, 134, 141, 142, 143, 146, 147, 148], "usag": [20, 24, 30, 86, 97, 109, 121], "use_australian_state_data": [3, 6, 63, 134], "useabl": 142, "user": [1, 6, 24, 32, 63, 142, 147, 148], "user_defined_stratigraphic_column": [6, 63, 145], "usual": [32, 45, 49, 141], "util": [1, 24], "uuid": 54, "uwa": 134, "v": 32, "v3": 1, "val": [1, 32], "valid": [19, 50, 62, 82, 89, 105, 118], "valu": [1, 6, 17, 19, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 42, 47, 48, 49, 50, 51, 56, 58, 59, 62, 63, 65, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 89, 99, 102, 103, 105, 107, 108, 118, 119, 120, 126, 128, 132, 136, 137, 141, 145, 148], "valueerror": [6, 19, 32, 50, 62, 63, 82, 89, 105, 118], "var": 32, "vari": 32, "variabl": [1, 32, 141, 142, 143, 145, 146], "varianc": 32, "varibl": 1, "ve": [137, 141, 145, 146], "vector": [1, 24, 28, 33, 130, 132], "verbos": 1, "verbose_level": [3, 6, 19, 41, 50, 61, 62, 63, 82, 89, 105, 118, 145], "verboselevel": [3, 6, 19, 41, 50, 61, 62, 63, 82, 89, 105, 118, 134, 145], "veri": [32, 136], "version": [1, 6, 12, 18, 24, 27, 32, 46, 52, 60, 63, 74, 76, 104, 106, 108, 120, 137], "verson": 1, "vi": 1, "via": [32, 143, 145, 146], "vic": [6, 19, 50, 62, 63, 82, 89, 105, 118], "view": [23, 32, 45, 136], "virtual": 146, "visualis": 134, "void": 32, "volcan": 137, "volcanic_text": 137, "w": [32, 49], "wa": [1, 3, 6, 19, 32, 49, 50, 62, 63, 82, 89, 105, 118, 134, 147], "wa_output": 3, "wai": [16, 22, 24, 32, 80, 88, 101, 117, 136, 148], "wan": 145, "want": [19, 32, 50, 62, 82, 89, 105, 118, 136, 137, 141, 144, 145, 147, 148], "warn": [1, 144], "wb": 49, "wc": [1, 52], "we": [27, 32, 134, 144, 147], "websit": 146, "weeli_wolli_form": 3, "weight": [24, 25, 28, 103], "well": [1, 24, 29, 32, 49, 136, 144], "were": 32, "western": [2, 4, 134, 135], "what": [32, 134, 145], "whatev": [137, 141, 145], "when": [24, 29, 32, 49, 145, 147], "whenc": [45, 49], "where": [1, 19, 24, 29, 32, 38, 50, 62, 78, 82, 89, 104, 105, 111, 112, 118, 124, 125, 128, 136, 145, 146, 147, 148], "wherea": 24, "wherev": [145, 146], "whether": [6, 12, 19, 32, 35, 36, 37, 38, 39, 42, 46, 47, 48, 49, 50, 51, 56, 58, 62, 63, 77, 81, 82, 89, 102, 105, 118, 137, 141, 145], "which": [3, 6, 18, 19, 24, 29, 32, 41, 49, 50, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 74, 76, 82, 84, 85, 89, 91, 92, 93, 94, 95, 96, 105, 108, 118, 120, 130, 136, 141, 142, 145, 146, 147, 148], "while": [24, 32, 147, 148], "white": 141, "whole": [147, 148], "whose": [32, 35, 36, 37, 38, 39, 42, 47, 48, 51, 56, 58, 77, 81, 102], "why": [1, 24], "width": 32, "window": 134, "wise": 32, "within": [1, 24, 32, 104, 106, 136, 137, 141, 142, 145, 146, 147, 148], "without": [1, 32], "wittenoom_form": 3, "wkt": [19, 50, 62, 82, 89, 105, 118], "won": [134, 145], "woongarra_rhyolit": 3, "word": 1, "work": [1, 6, 19, 24, 32, 50, 62, 63, 65, 66, 82, 84, 85, 89, 104, 105, 118, 134, 141, 145, 146], "workflow": [106, 134, 147, 148], "working_project": [3, 6, 19, 50, 62, 63, 82, 89, 105, 118, 134, 145], "worst": 24, "worth": 49, "would": [32, 141, 145], "wrap": 27, "wrapper": [6, 41, 61, 63], "writabl": [45, 49], "write": [32, 45, 49], "writeabl": 32, "writebackifcopi": 32, "writelin": [45, 49], "written": [32, 45, 49, 147, 148], "www": 27, "x": [6, 19, 24, 27, 28, 29, 31, 32, 33, 49, 50, 62, 63, 65, 82, 84, 89, 105, 110, 111, 115, 118, 123, 124, 126, 130, 131, 132, 134, 145], "x00": 32, "x01": 32, "x02": 32, "x03": 32, "x1": 29, "x2": 29, "xb": 49, "xi": [28, 29, 31, 126], "xml": 52, "xu": 24, "xv": 32, "xy": [26, 111, 124], "xyz": 1, "y": [6, 19, 24, 27, 28, 29, 31, 32, 33, 50, 62, 63, 65, 82, 84, 89, 105, 110, 111, 115, 118, 123, 124, 126, 130, 131, 132, 134, 144, 145], "yet": [141, 145], "yi": [28, 29, 31, 126], "you": [24, 32, 49, 134, 136, 137, 141, 142, 143, 144, 146, 147, 148], "youngest": [73, 74, 75, 76, 104, 106, 107, 108, 119, 120, 145, 148], "youngest_unit": 145, "your": [24, 134, 137, 141, 142, 143, 147, 148], "yourself": 144, "z": [19, 27, 29, 32, 33, 50, 62, 82, 89, 105, 118, 130, 132, 145], "zero": [29, 32, 49], "zi": 29, "zip": [1, 2, 3, 6, 19, 27, 50, 62, 63, 82, 89, 105, 118], "zlib_mod": 49}, "titles": ["API", "Changelog", "Examples", "Hamersley, Western Australia", "Computation times", "map2loop", "map2loop.Project", "map2loop.aus_state_urls", "map2loop.aus_state_urls.AustraliaStateUrls", "map2loop.aus_state_urls.load_clut", "map2loop.aus_state_urls.load_config", "map2loop.config", "map2loop.config.Config", "map2loop.deformation_history", "map2loop.deformation_history.DeformationHistory", "map2loop.fault_orientation", "map2loop.fault_orientation.ABC", "map2loop.fault_orientation.FaultOrientation", "map2loop.fault_orientation.FaultOrientationNearest", "map2loop.fault_orientation.MapData", "map2loop.fault_orientation.abstractmethod", "map2loop.interpolators", "map2loop.interpolators.ABC", "map2loop.interpolators.Any", "map2loop.interpolators.DBSCAN", "map2loop.interpolators.DipDipDirectionInterpolator", "map2loop.interpolators.Interpolator", "map2loop.interpolators.LinearNDInterpolator", "map2loop.interpolators.NormalVectorInterpolator", "map2loop.interpolators.Rbf", "map2loop.interpolators.abstractmethod", "map2loop.interpolators.generate_grid", "map2loop.interpolators.ndarray", "map2loop.interpolators.strike_dip_vector", "map2loop.m2l_enums", "map2loop.m2l_enums.Datastate", "map2loop.m2l_enums.Datatype", "map2loop.m2l_enums.ErrorState", "map2loop.m2l_enums.IntEnum", "map2loop.m2l_enums.VerboseLevel", "map2loop.map2model_wrapper", "map2loop.map2model_wrapper.Map2ModelWrapper", "map2loop.map2model_wrapper.VerboseLevel", "map2loop.mapdata", "map2loop.mapdata.AustraliaStateUrls", "map2loop.mapdata.BytesIO", "map2loop.mapdata.Config", "map2loop.mapdata.Datastate", "map2loop.mapdata.Datatype", "map2loop.mapdata.GzipFile", "map2loop.mapdata.MapData", "map2loop.mapdata.VerboseLevel", "map2loop.mapdata.WebCoverageService", "map2loop.mapdata.generate_random_hex_colors", "map2loop.mapdata.uuid4", "map2loop.project", "map2loop.project.Datatype", "map2loop.project.DeformationHistory", "map2loop.project.ErrorState", "map2loop.project.FaultOrientation", "map2loop.project.FaultOrientationNearest", "map2loop.project.Map2ModelWrapper", "map2loop.project.MapData", "map2loop.project.Project", "map2loop.project.Sampler", "map2loop.project.SamplerDecimator", "map2loop.project.SamplerSpacing", "map2loop.project.Sorter", "map2loop.project.SorterAgeBased", "map2loop.project.SorterAlpha", "map2loop.project.SorterUseHint", "map2loop.project.SorterUseNetworkX", "map2loop.project.StratigraphicColumn", "map2loop.project.ThicknessCalculator", "map2loop.project.ThicknessCalculatorAlpha", "map2loop.project.ThrowCalculator", "map2loop.project.ThrowCalculatorAlpha", "map2loop.project.VerboseLevel", "map2loop.project.hex_to_rgb", "map2loop.sampler", "map2loop.sampler.ABC", "map2loop.sampler.Datatype", "map2loop.sampler.MapData", "map2loop.sampler.Sampler", "map2loop.sampler.SamplerDecimator", "map2loop.sampler.SamplerSpacing", "map2loop.sampler.abstractmethod", "map2loop.sorter", "map2loop.sorter.ABC", "map2loop.sorter.MapData", "map2loop.sorter.Sorter", "map2loop.sorter.SorterAgeBased", "map2loop.sorter.SorterAlpha", "map2loop.sorter.SorterMaximiseContacts", "map2loop.sorter.SorterObservationProjections", "map2loop.sorter.SorterUseHint", "map2loop.sorter.SorterUseNetworkX", "map2loop.sorter.abstractmethod", "map2loop.stratigraphic_column", "map2loop.stratigraphic_column.StratigraphicColumn", "map2loop.thickness_calculator", "map2loop.thickness_calculator.ABC", "map2loop.thickness_calculator.Datatype", "map2loop.thickness_calculator.DipDipDirectionInterpolator", "map2loop.thickness_calculator.InterpolatedStructure", "map2loop.thickness_calculator.MapData", "map2loop.thickness_calculator.StructuralPoint", "map2loop.thickness_calculator.ThicknessCalculator", "map2loop.thickness_calculator.ThicknessCalculatorAlpha", "map2loop.thickness_calculator.abstractmethod", "map2loop.thickness_calculator.calculate_endpoints", "map2loop.thickness_calculator.create_points", "map2loop.thickness_calculator.find_segment_strike_from_pt", "map2loop.thickness_calculator.mean", "map2loop.thickness_calculator.multiline_to_line", "map2loop.thickness_calculator.rebuild_sampled_basal_contacts", "map2loop.throw_calculator", "map2loop.throw_calculator.ABC", "map2loop.throw_calculator.MapData", "map2loop.throw_calculator.ThrowCalculator", "map2loop.throw_calculator.ThrowCalculatorAlpha", "map2loop.throw_calculator.abstractmethod", "map2loop.utils", "map2loop.utils.calculate_endpoints", "map2loop.utils.create_points", "map2loop.utils.find_segment_strike_from_pt", "map2loop.utils.generate_grid", "map2loop.utils.generate_random_hex_colors", "map2loop.utils.hex_to_rgb", "map2loop.utils.multiline_to_line", "map2loop.utils.normal_vector_to_dipdirection_dip", "map2loop.utils.rebuild_sampled_basal_contacts", "map2loop.utils.strike_dip_vector", "map2loop.version", "Map2loop 3.1.12", "Computation times", "Changing Colours", "Mapping attributes to variables using a JSON file", "What map2loop does", "Exporting", "Fault offset calculation", "Creating a 3D geological model", "Getting Started", "User Guide", "Installing map2loop", "Template for Map2Loop", "Setting up your Jupyter Notebook", "Identifying stratigraphic order", "Calculating stratigraphic thicknesses"], "titleterms": {"0": 1, "01": 1, "02": 1, "05": 1, "06": 1, "08": 1, "09": 1, "1": [1, 134], "10": 1, "11": 1, "12": [1, 134], "13": 1, "14": 1, "18": 1, "2": 1, "20": 1, "2024": 1, "25": 1, "29": 1, "3": [1, 134, 137], "3d": 141, "4": 1, "5": 1, "6": 1, "7": 1, "8": 1, "9": 1, "abc": [16, 22, 80, 88, 101, 117], "abstractmethod": [20, 30, 86, 97, 109, 121], "ad": 141, "altern": 145, "ani": 23, "api": 0, "attiribut": [6, 63], "attribut": [106, 137, 141], "aus_state_url": [7, 8, 9, 10], "australia": 3, "australiastateurl": [8, 44], "befor": 145, "begin": 145, "bug": 1, "build": 144, "bytesio": 45, "calcul": [140, 148], "calculate_endpoint": [110, 123], "call": 146, "chang": [136, 145], "changelog": 1, "code": 146, "colour": 136, "column": 145, "comput": [4, 135], "config": [11, 12, 46, 137], "creat": [141, 145], "create_point": [111, 124], "csv": 136, "data": 141, "datast": [35, 47], "datatyp": [36, 48, 56, 81, 102], "dbscan": 24, "defin": 145, "deformation_histori": [13, 14], "deformationhistori": [14, 57], "develop": 144, "dipdipdirectioninterpol": [25, 103], "distanc": 145, "docker": 144, "document": 1, "doe": 138, "errorst": [37, 58], "exampl": 2, "export": 139, "express": 144, "extent": 145, "faq": 134, "fault": [136, 140], "fault_orient": [15, 16, 17, 18, 19, 20], "faultorient": [17, 59], "faultorientationnearest": [18, 60], "featur": 1, "file": [136, 137, 141, 145, 146], "find_segment_strike_from_pt": [112, 125], "fix": 1, "generate_grid": [31, 126], "generate_random_hex_color": [53, 127], "geolog": [139, 141], "get": [141, 142], "guid": 143, "gzipfil": 49, "hamerslei": 3, "hex_to_rgb": [78, 128], "identifi": 147, "inspect": 146, "instal": 144, "instanc": 145, "intenum": 38, "interest": 3, "interpol": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "interpolatedstructur": 104, "issu": 134, "json": 137, "jupyt": [136, 146], "known": 134, "linear_featur": 141, "linearndinterpol": 27, "linestr": 141, "link": 134, "lithologi": 141, "load_clut": 9, "load_config": 10, "loop3d": [145, 146], "loopstructur": 146, "m2l_enum": [34, 35, 36, 37, 38, 39], "map": [137, 139, 141], "map2loop": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 142, 144, 145, 146], "map2model_wrapp": [40, 41, 42], "map2modelwrapp": [41, 61], "mapdata": [19, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 82, 89, 105, 118], "mean": 113, "model": [141, 145], "multiline_to_lin": [114, 129], "name": [137, 145], "ndarrai": 32, "next": 145, "normal_vector_to_dipdirection_dip": 130, "normalvectorinterpol": 28, "note": [73, 106, 107, 141, 147, 148], "notebook": [136, 145, 146], "offset": 140, "order": 147, "orientation_data": 141, "output": [145, 146], "paramet": [147, 148], "point": 141, "polygon": 141, "program": 145, "project": [3, 6, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 145], "qgi": 141, "rbf": 29, "rebuild_sampled_basal_contact": [115, 131], "region": 3, "requir": [141, 142], "result": 3, "return": 106, "run": 145, "sampl": 145, "sampler": [64, 79, 80, 81, 82, 83, 84, 85, 86], "samplerdecim": [65, 84], "samplerspac": [66, 85], "select": 145, "set": [3, 145, 146], "shape": 141, "shapefil": 141, "shoot": 141, "shp": 141, "sorter": [67, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 145], "sorteragebas": [68, 91], "sorteralpha": [69, 92], "sortermaximisecontact": 93, "sorterobservationproject": 94, "sorterusehint": [70, 95], "sorterusenetworkx": [71, 96], "start": [141, 142], "step": 145, "stratigraph": [145, 147, 148], "stratigraphic_column": [98, 99], "stratigraphiccolumn": [72, 99], "strike_dip_vector": [33, 132], "structuralpoint": 106, "tabl": 141, "templat": [137, 145], "thick": 148, "thickness_calcul": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "thicknesscalcul": [73, 107], "thicknesscalculatoralpha": [74, 108], "throw_calcul": [116, 117, 118, 119, 120, 121], "throwcalcul": [75, 119], "throwcalculatoralpha": [76, 120], "time": [4, 135], "tip": 141, "troubl": 141, "unit": 136, "up": [145, 146], "us": [136, 137, 145], "usag": 134, "user": [143, 145], "util": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "uuid4": 54, "variabl": 137, "verboselevel": [39, 42, 51, 77], "version": 133, "via": 136, "visualis": 3, "webcoverageservic": 52, "western": 3, "what": 138, "you": 145, "your": [136, 145, 146]}})